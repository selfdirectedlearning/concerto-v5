version: 5.0.beta.11.1
collection:
  -
    class_name: ViewTemplate
    id: 22
    name: page
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      :root {
        --option-bg: #f3f3f3;
        --option-hover-bg: #efefef;
        --option-color: #000000;
        --option-unselected-bg: #ffffd5;
        --error-color: #f32828;
        --accent-light-color: #45b87e;
        --accent-dark-color: #35a26b;
        --font-color-for-accent-bg: #ffffff;
        --main-font-style: 'Open Sans', sans-serif;
        --main-font-color: #000000;
        --main-font-size: 16px;
        --header-bg: #4581b5;
        --header-color: #ffffff;
      }

      .body {
        min-height: 100vh;
        position: relative;
        font-size: var(--main-font-size);
        font-family: var(--main-font-style);
        color: var(--main-font-color);
        display: flex;
        flex-direction: column;
      }

      .container {
        max-width: 1000px;
        margin: auto;
        padding: 20px;
      }

      .main-btn {
        background-color: var(--accent-light-color);
        border: none;
        padding: 10px 20px;
        font-size: var(--main-font-size);
        color: var(--font-color-for-accent-bg);
        display: block;
        min-width: 100px;
        cursor: pointer;
        -webkit-transform: perspective(1px) translateZ(0);
        transform: perspective(1px) translateZ(0);
        -webkit-transition-duration: 0.3s;
        transition-duration: 0.3s;
        -webkit-transition-property: background-color;
        transition-property: background-color;
        outline: none;
      }

      .main-btn:hover {
        background-color: var(--accent-dark-color);
      }

      .main-btn:disabled {
        background-color: var(--option-hover-bg);
        color: #ccc;
        cursor: default;
      }

      .left-btn {
        margin: 0 auto 0 0;
      }

      .right-btn {
        margin: 0 0 0 auto;
      }

      .question-footer {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin-top: 20px;
      }

      .question-page {
        font-size: 14px;
        padding: 10px 0;
      }

      @media screen and (max-width: 500px) {
        .question-text {
          font-size: 14px;
        }

        .main-btn {
          min-width: 0;
        }
      }
    js: ''
    html: |
      <div class="body">
      	{{template:header}}

      	<div class="questions">
      		<div class="container">

      			{{content}}

      			<div class="question-footer">
      				<button class="main-btn right-btn" id="submitButton" name="next">Next</button>
      			</div>
      		</div>
      	</div>

      	{{template:footer}}
      </div>
    groups: ''
    starterContent: true
    hash: f6fc52e284cc74b63ca672776d0427fa67cdfe2b
  -
    class_name: ViewTemplate
    id: 10
    name: itemPainMannequin
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      .pain-mannequin {
          display: flex;
          justify-content: center;
      }

      .pain-mannequin-front {
          display: flex;
          justify-content: flex-end;
          width: 600px;
      }

      .pain-mannequin-back {
          display: flex;
          justify-content: flex-start;
          width: 600px;
      }

      .pain-mannequin-svg {
          position: relative;
          width: 400px;
      }

      @media screen and (max-width: 1200px) {
          .pain-mannequin {
              flex-direction: column;
              align-items: center;
          }
      }

      /* SVG */
      .st0, .st1 {
          fill: #FF0000;
          fill-opacity: 0;
          stroke: #ff6868;
          stroke-opacity: 1;
          stroke-width: 2;
          stroke-linecap:round;
      }

      .st2 {
          fill: none;
          stroke: #FF0000;
          stroke-linecap: round;
          stroke-width: 2;
      }

      svg circle, svg line {
          pointer-events: none;
      }

      .highlighted {
          fill-opacity: 0.07 !important;
      }

      .hovered {
          fill-opacity: 0.1 !important;
      }

      .pain-mannequin h3 {
          margin: 0;
          position: absolute;
          top: 36px;
          left: 47px;
          pointer-events: none;
      }

      /* MARKS AND NOTES */
      .mark {
          position: absolute;
          width: 16px;
          height: 16px;
          cursor: pointer;
      }

      .mark-icon {
          position: absolute;
          width: 31.5px;
          height: 31.5px;
          background-color: #fd2e00;
          border-radius: 50%;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          margin: auto 50%;
          transform: translate(-50%);
      }

      .mark-content {
          position: absolute;
          left: 20px;
          top: 20px;
          display: none;
          background-color: #eceaea;
          border-radius: 5px;
          padding: 5px;
          z-index: 1000;
          -webkit-box-shadow: 0 0 22px -4px rgba(0,0,0,0.75);
          -moz-box-shadow: 0 0 22px -4px rgba(0,0,0,0.75);
          box-shadow: 0 0 22px -4px rgba(0,0,0,0.75);
          width: 220px;
      }

      .active .mark-content {
          display: block;
      }

      .mark-hide, .mark-delete {
          width: 22px;
          height: 22px;
          position: absolute;
          top: 3px;
          right: 3px;
          border-radius: 3px;
          border: 1px solid transparent;
      }

      .mark-hide:hover, .mark-delete:hover {
          border-color: grey;
          cursor: pointer;
      }

      .mark-hide {
          right: 27px;
      }

      .mark-hide img, .mark-delete img {
          width: 100%;
          pointer-events: none;
      }

      .mark-handle {
          position: absolute;
          width: 30px;
          height: 30px;
          top: 0;
          left: 0;
          right: 0;
          margin: auto;
          background-image: url(/bundles/concertopanel/files/starter-content/move-icon.png);
          background-repeat: no-repeat;
          background-size: 14px;
          background-position: center;
      }

      .mark-handle:hover {
          cursor: move;
      }

      .mark-range {
          width: calc(100% - 10px);
          display: block;
          padding: 0;
      }

      .mark textarea {
          margin: 15px auto 4px;
          width: calc(100% - 10px);
          border: none;
          display: block;
          background-color: #fff;
          outline: none;
          resize: none;
      }

      .mark label {
          font-size: 14px;
          margin-top: 10px;
          display: block;
      }

      .mark-name {
          text-transform: capitalize;
          font-size: 14px;
      }

    js: |
      testRunner.compileProvider.component('itemPainMannequin', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/itemPainMannequin/content?css=1,html=1",
        bindings: {
          item: '=',
          response: '=',
          responseRequired: '<'
        },
        controller: function controller($scope, $timeout) {

          $scope.item = this.item;
          $scope.response = this.response;
          $scope.responseRequired = this.responseRequired;

          $scope.reportFront = [];
          $scope.reportBack = [];
          if($scope.response.value) {
            let pastResponse = JSON.parse($scope.response.value);
            $scope.reportFront = pastResponse.reportFront;
            $scope.reportBack = pastResponse.reportBack;
          }

          $scope.gender = $scope.item.responseOptions.painMannequinGender;
          if($scope.gender == "custom") {
            $scope.gender = $scope.item.responseOptions.painMannequinGenderValue;
          }
          $scope.bodyParts = [
            {
              id: 1,
              label: 'head right f'
            },
            {
              id: 2,
              label: 'head left f'
            },
            {
              id: 3,
              label: 'face right'
            },
            {
              id: 4,
              label: 'face left'
            },
            {
              id: 5,
              label: 'neck right'
            },
            {
              id: 6,
              label: 'neck left'
            },
            {
              id: 7,
              label: 'right shoulder f'
            },
            {
              id: 8,
              label: 'right chest'
            },
            {
              id: 9,
              label: 'left chest'
            },
            {
              id: 10,
              label: 'left shoulder f'
            },
            {
              id: 11,
              label: 'right arm f'
            },
            {
              id: 12,
              label: 'right elbow joint'
            },
            {
              id: 13,
              label: 'right forearm f'
            },
            {
              id: 14,
              label: 'right wrist f'
            },
            {
              id: 15,
              label: 'right hand f'
            },
            {
              id: 16,
              label: 'left arm f'
            },
            {
              id: 17,
              label: 'left elbow joint'
            },
            {
              id: 18,
              label: 'left forearm f'
            },
            {
              id: 19,
              label: 'left wrist f'
            },
            {
              id: 20,
              label: 'left hand f'
            },
            {
              id: 21,
              label: 'abdomen right'
            },
            {
              id: 22,
              label: 'abdomen left'
            },
            {
              id: 23,
              label: 'pelvis right'
            },
            {
              id: 24,
              label: 'pelvis left'
            },
            {
              id: 25,
              label: 'right hip f'
            },
            {
              id: 26,
              label: 'right groin'
            },
            {
              id: 27,
              label: 'left groin'
            },
            {
              id: 28,
              label: 'left hip f'
            },
            {
              id: 29,
              label: 'right thigh'
            },
            {
              id: 30,
              label: 'left thigh'
            },
            {
              id: 31,
              label: 'right knee'
            },
            {
              id: 32,
              label: 'left knee'
            },
            {
              id: 33,
              label: 'right shin'
            },
            {
              id: 34,
              label: 'left shin'
            },
            {
              id: 35,
              label: 'right ankle'
            },
            {
              id: 36,
              label: 'left ankle'
            },
            {
              id: 37,
              label: 'right foot'
            },
            {
              id: 38,
              label: 'left foot'
            },
            {
              id: 39,
              label: 'head left'
            },
            {
              id: 40,
              label: 'head right'
            },
            {
              id: 41,
              label: 'occiput left'
            },
            {
              id: 42,
              label: 'occiput right'
            },
            {
              id: 43,
              label: 'nape left'
            },
            {
              id: 44,
              label: 'nape right'
            },
            {
              id: 45,
              label: 'left shoulder b'
            },
            {
              id: 46,
              label: 'left back'
            },
            {
              id: 47,
              label: 'right back'
            },
            {
              id: 48,
              label: 'right shoulder b'
            },
            {
              id: 49,
              label: 'left arm b'
            },
            {
              id: 50,
              label: 'left dorsal'
            },
            {
              id: 51,
              label: 'right dorsal'
            },
            {
              id: 52,
              label: 'right arm b'
            },
            {
              id: 53,
              label: 'left elbow'
            },
            {
              id: 54,
              label: 'left forearm b'
            },
            {
              id: 55,
              label: 'left wrist b'
            },
            {
              id: 56,
              label: 'left hand b'
            },
            {
              id: 57,
              label: 'right elbow'
            },
            {
              id: 58,
              label: 'right forearm b'
            },
            {
              id: 59,
              label: 'right wrist b'
            },
            {
              id: 60,
              label: 'right hand b'
            },
            {
              id: 61,
              label: 'left lumbar'
            },
            {
              id: 62,
              label: 'right lumbar'
            },
            {
              id: 63,
              label: 'left hip b'
            },
            {
              id: 64,
              label: 'left buttock'
            },
            {
              id: 65,
              label: 'right buttock'
            },
            {
              id: 66,
              label: 'right hip b'
            },
            {
              id: 67,
              label: 'left thigh b'
            },
            {
              id: 68,
              label: 'right thigh b'
            },
            {
              id: 69,
              label: 'left knee joint'
            },
            {
              id: 70,
              label: 'right knee joint'
            },
            {
              id: 71,
              label: 'left calf'
            },
            {
              id: 72,
              label: 'right calf'
            },
            {
              id: 73,
              label: 'left ankle b'
            },
            {
              id: 74,
              label: 'right ankle b'
            },
            {
              id: 75,
              label: 'left heel'
            },
            {
              id: 76,
              label: 'right heel'
            },
          ];

          $scope.activeMark = null;

          let timeout;

          function loadData() {
            if ($(".i" + $scope.item.id + "-" + $scope.gender + "-svg path").length > 0) {
              setEvents();
            } else {
              timeout = $timeout(loadData, 100);
            }
          }

          function setEvents() {
            $('.i' + $scope.item.id + '-pain-mannequin path')
              .on('click', function (e) {
              let parent = $(e.target).parent().parent();
              let relX = e.pageX - parent.offset().left;
              let relY = e.pageY - parent.offset().top;
              let source;
              if (parent.parent().hasClass('pain-mannequin-front')) {
                source = 'front';
              } else if (parent.parent().hasClass('pain-mannequin-back')) {
                source = 'back';
              }
              addNote(+new Date(), relY - 8, relX - 8, e.target.id, source);
              $(this).addClass("highlighted");
            })
              .hover(
              function () {
                $(this).addClass("hovered");
              },
              function () {
                $(this).removeClass("hovered");
              }
            );
          }

          function addNote(timeStamp, top, left, id, source) {
            let area;
            for (let i = 0; i < $scope.bodyParts.length; i++) {
              if ("i" + $scope.item.id + "-" + $scope.bodyParts[i].id === id) {
                area = $scope.bodyParts[i].label;
                break;
              }
            }

            let mark = {
              area: area,
              description: '',
              id: id.replace('i' + $scope.item.id + '-', ''),
              intensity: 50,
              size: 50,
              x: left,
              y: top,
            };

            if (source === 'front') {
              $scope.reportFront.push(mark);
              $scope.activeMark = 'front-' + $scope.reportFront.length;
            } else if (source === 'back') {
              $scope.reportBack.push(mark);
              $scope.activeMark = 'back-' + $scope.reportBack.length;
            }

            $scope.$apply();

            $('.mark-content').draggable({handle: '.mark-handle', containment: 'body'});
          }

          $scope.getBgColor = function (intensity) {
            let bgColor;
            if (intensity <= 10) {
              bgColor = '#fcbbbc';
            } else if (intensity <= 20) {
              bgColor = '#ffa4a4';
            } else if (intensity <= 30) {
              bgColor = '#ff8e8b';
            } else if (intensity <= 40) {
              bgColor = '#ff746d';
            } else if (intensity <= 50) {
              bgColor = '#ff4843';
            } else if (intensity <= 60) {
              bgColor = '#fc3511';
            } else if (intensity <= 70) {
              bgColor = '#ff0000';
            } else if (intensity <= 80) {
              bgColor = '#f80000';
            } else if (intensity <= 90) {
              bgColor = '#e10000';
            } else {
              bgColor = '#d40202';
            }
            return bgColor;
          };

          $scope.activateMark = function (mark) {
            $scope.activeMark = $scope.activeMark !== mark ? mark : null;
          };

          $scope.hideMark = function () {
            $scope.activeMark = null;
          };

          $scope.deleteMark = function (markIndex, source) {
            $scope.activeMark = null;
            let id, hasSiblings;
            if (source === 'front') {
              id = $scope.reportFront[markIndex].id;
              $scope.reportFront.splice(markIndex, 1);
              for (let i = 0; i < $scope.reportFront.length; i++) {
                if ($scope.reportFront[i].id === id) {
                  hasSiblings = true;
                  break;
                }
              }
            } else if (source === 'back') {
              id = $scope.reportBack[markIndex].id;
              $scope.reportBack.splice(markIndex, 1);
              for (let i = 0; i < $scope.reportBack.length; i++) {
                if ($scope.reportBack[i].id === id) {
                  hasSiblings = true;
                  break;
                }
              }
            }

            if (!hasSiblings) {
              $("#i" + $scope.item.id + '-' + id).removeClass('highlighted');
            }
          };

          loadData();

          testRunner.addExtraControl("r" + $scope.item.id, function () {
            return JSON.stringify({
              reportFront: $scope.reportFront,
              reportBack: $scope.reportBack
            });
          });
        }
      });
    html: |
      <div class="pain-mannequin i[[item.id]]-pain-mannequin test-view">
      	<div class="pain-mannequin-front">
      		<div class="pain-mannequin-svg">
      			<h3>Front</h3>
      			<svg class="female-svg i[[item.id]]-female-svg" height="680" ng-if="gender === 'female'" version="1.1" viewbox="0 0 800 1360" width="400px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg">
      				<path class="st0" d="M342.3,84.7c-33.4,0.6-53.2-7.2-53.2-7.2l0,0c0.5-5.9,1.4-11.1,2.8-15.9c6.6-21.8,24.5-35.5,50.4-35.5L342.3,84.7L342.3,84.7z" id="i[[item.id]]-1"></path>
      				<path class="st1" d="M342.3,84.7l0-58.5c40.2,0,49.9,28.2,51.9,51.4l0,0C374.6,82.5,357.1,84.4,342.3,84.7L342.3,84.7z" id="i[[item.id]]-2"></path>
      				<path class="st0" d="M342.3,188c-0.2,0-0.4,0-0.6,0c-23.8-0.7-38.1-20.8-38.1-20.8v0c-3.1-3.6-7.3-13.8-10.5-26.9c-3.5,6.1-6,0.7-8.3-3.4c-2.5-4.5-5.5-13.4-6.5-18.7s0.2-13,3.1-13.6c1.9-0.4,4.7,1.9,7.1,4.2c-0.1-2.2-0.2-4.4-0.2-6.5c0-9.1,0.1-17.3,0.8-24.6l0,0c0,0,19.8,7.8,53.2,7.2l0,0L342.3,188L342.3,188z" id="i[[item.id]]-3"></path>
      				<path class="st0" d="M342.3,188c23.4,0.3,38.9-21,38.9-21v0c3.4-6.6,6.2-17.3,8.3-28c2.4,5.3,5.4,2.8,6.6,1c1.5-2.4,4.4-8.9,5.8-12.6c1.4-3.8,2.9-14.2,2.4-18.9s-4.8-4.9-6.5-2.2c-0.8,1.2-2.2,1.5-3.6,1.3c0.1-1.5,0.2-2.7,0.2-3.3c0-5,0.9-15.2-0.1-26.7l0,0c-19.6,5-37.1,6.9-52,7.2l0,0L342.3,188L342.3,188z" id="i[[item.id]]-4"></path>
      				<path class="st0" d="M297,213.3c5.2-3,7.9-7.1,8.3-13.8c0.9-13.5-1.5-30.1-1.8-32.2c0,0,14.3,20.1,38.1,20.8c0.2,0,0.4,0,0.6,0l0,0l0,49.3l0,0c-0.3,0-0.5,0-0.8,0c-16.6,0.7-44.7-23.9-44.7-23.9L297,213.3z" id="i[[item.id]]-5"></path>
      				<path class="st0" d="M342.3,237.3C359,236,389.2,215,389.2,215l0,0c-3.9-1.8-6.7-4-7.8-6.7c-4.1-10-3.2-27.4-0.2-41.3c0,0-15.5,21.3-38.9,21l0,0L342.3,237.3L342.3,237.3z" id="i[[item.id]]-6"></path>
      				<path class="st0" d="M296.7,213.4c0,0,4.7,4.1,11.4,8.9c0,0-26.4,99-118.2,104.3c0.1-2.9,0.3-5.8,0.6-8.9c1.8-20.5,7.1-42.7,8.4-49.6c8.7-45.3,37.5-43.8,45.5-44.5c0,0,0,0,0,0c8-0.7,21.3-2.1,29.4-3.7c10.4-2,18.1-3.8,23.3-6.7L296.7,213.4z" id="i[[item.id]]-7"></path>
      				<path class="st0" d="M342.2,400.3l0-163l0,0c-0.3,0-0.5,0-0.8,0c-9.8,0.4-23.7-8-33.4-15c0,0-16.9,63.3-70.6,91.4l0,0c-10.9,28.2-3,51.3-3,51.3c1.2,8,5.1,16.7,8.9,21.2c0,0,0,0,0,0c0.5,4.9,3.6,20.3,5.7,28.8c0.5,2.3,1,4,1.3,5c0.5,1.5,1.2,8.1,1.9,16.8c0,0,0,0,0,0c0.3,4.1,0.7,8.6,1,13.3l-0.3,0c20.5,0.9,41.1,3.8,51.9-19.3c6.5-13.9,14.3-27,29.1-30c2.5-0.5,5-0.7,7.5-0.7L342.2,400.3z" id="i[[item.id]]-8"></path>
      				<path class="st0" d="M342.2,400.3l0-163l0,0c10.2-0.8,25.2-8.8,35.5-14.9c0,0,27.1,63.5,72.8,91.4l0,0c5.7,28.7-1,52.9-1,52.9c-0.4,4.4-5,15.4-8.3,19.4c-0.7,5.8-4.8,26.7-5.8,30c-0.3,1-1.1,8.6-2,18.8l0,0c-0.4,4.9-0.9,10.3-1.3,15.9l0.3,0c-17.4,0.3-40.4,8-51.6-11.5c-6.4-11.1-8-23.4-18.2-31.4c-6.2-4.8-13.6-7.3-21.2-7.5L342.2,400.3z" id="i[[item.id]]-9"></path>
      				<path class="st0" d="M389.2,215c0,0-4.7,3.3-11.4,7.3c0,0,45.2,105.7,117.1,104.3c-0.4-2.9-0.5-5.1-0.5-6.5c0,0,0,0,0,0c0-5.5-5-59.8-19-79.2c-10.7-15-25-17.7-39-18.6c0,0,0,0,0,0c-4.2-0.3-8.4-0.4-12.5-0.6C411.8,221,397.9,219,389.2,215L389.2,215z" id="i[[item.id]]-10"></path>
      				<path class="st0" d="M211.8,431.9c1.2-3.9,2.7-7.8,3.9-11c0,0,0,0,0,0c0.8-2.1,1.6-4,2.2-5.3c2.3-5.2,15.7-39.7,16.6-50.6c0,0-7.8-23.1,3-51.3l0,0c-13.5,7-29.2,11.9-47.7,12.9c-0.7,20.9-17.8,65.6-22.8,82.6c-0.4,1.3-0.7,2.4-0.9,3.4c0,0,27.1-5.4,46.2,17.6L211.8,431.9z" id="i[[item.id]]-11"></path>
      				<path class="st0" d="M212.3,430.3c-19.1-23-46.2-17.6-46.2-17.6c-3.2,13.5-5.8,23.5-9.5,29.8c-1.3,2.2-4.4,8.4-8,16.7l0,0c0,0,19.7,24.2,52.2,21.5c1.7-9.5,6.5-29,8-37.7c0.6-3.2,1.6-7.2,2.9-11.1L212.3,430.3z" id="i[[item.id]]-12"></path>
      				<path class="st0" d="M124.9,564.6c2.8-11.4,5.5-26.7,7.7-49c1.9-19.6,9.7-41.6,16-56.5c0,0,19.7,24.2,52.2,21.5c-0.2,1.2-0.5,2.7-1,4.4c0,0,0,0,0,0c-2.7,11.2-9.5,31.1-15.5,44.7c-5.4,12-14.5,31.5-22.2,46.7c-14.6-16.7-37.6-10.5-37.6-10.5L124.9,564.6z" id="i[[item.id]]-13"></path>
      				<path class="st0" d="M124.5,566c0,0,23-6.2,37.6,10.5c-2.3,4.6-4.6,8.8-6.5,12.3c-2.3,4.1-4.5,8.9-6.5,13.4c0,0,0,0,0,0c-0.9,2-1.8,4-2.6,5.8c-3.3,7.3-5.9,13.3-7,16.8v0c-0.3,1-0.5,1.8-0.5,2.4c-25.7,1.3-32.5-17.1-32.5-17.1c2.5-2.5,5.4-6.9,8.2-14.7c0.6-1.8,1.3-3.5,2-5.3l0,0c2.5-6.7,5.4-14.2,8.2-25.6L124.5,566z" id="i[[item.id]]-14"></path>
      				<path class="st0" d="M139,627.3c-25.7,1.3-32.5-17.1-32.5-17.1c0.2,0,0.3,0,0.5,0c-0.2,0-0.3,0-0.5,0c-2.2,2.2-4.1,3-5.5,3.4c-2.9,1-20.6,11.6-26.4,15.2s-8.6,9.4-14.2,12.1s-8.5,6.9-10,8.6s-6.6,7.5-6.6,9.9s4.4,3.8,8,2.9s11.8-8.6,15.7-12.4s9.5-4.9,12.2-4.9s2.6,3.1,1.9,4.5s-2.9,8.2-4,13.6s-1,11.9-1.9,14s-5,19.4-5.6,23.6s-2.6,15.5,0,19s6,1.2,7.1-1.4s3.6-14.1,4.1-16.9s6.8-21.1,7.4-22.8s3.1,2.6,2.2,5.8s-2.4,11.8-4.8,18.5s-2.6,14.1-3.4,17.5s-1.8,8.1-1.5,11.5s3.1,5.9,5.5,4.6s4.9-9.5,5.5-12.5s4-14.4,5.6-18.4s3-20.5,4-23s1.9,1.1,1.2,2.8s-3.4,18-3.8,21.6s-3.5,14.9-2.6,19.1s5.1,3.5,6.8,1.8s2.5-7.1,3-9.8s4.1-13.4,5.4-17.5s3.4-16.2,4.1-20.2s2-1.6,1.1,1.8s-0.9,11.9-1.8,14.2s-1,8.1-1.8,9.6s-2.8,5.9-1,9s5,1.5,5.9,0.1s3.8-10.6,5-13.4s2.6-11,3.8-15.9c1.1-4.9,3.2-11,4.4-17.5s1.3-14,2.5-18.3C135.5,646,138.9,631.7,139,627.3z" id="i[[item.id]]-15"></path>
      				<path class="st0" d="M450.6,313.7c5.7,28.7-1,52.9-1,52.9c0.3,1.9,1.8,4.1,2.7,6.9c0.8,2.8,7.3,22.7,10.3,30.8c1.4,3.7,3.6,8.7,5.8,13.7c2.6,6.1,5.1,12.2,5.9,16.3c19.5-13,46.7-11.9,46.7-11.9c-0.5-1.8-1.4-6.3-3.4-13.7c-0.2-0.8-0.4-1.6-0.6-2.4c-2.2-8.3-5.5-19.7-10.5-34.4c-3.7-11.1-6.3-20.3-8.2-27.7c-1.2-4.8-2-8.8-2.6-12.2c-0.3-2-0.6-3.8-0.8-5.3C478.7,327,463.8,321.8,450.6,313.7L450.6,313.7z" id="i[[item.id]]-16"></path>
      				<path class="st0" d="M483.9,480.9c-0.6-2.6-1.1-5.4-1.7-8.2c-1.4-7.2-2.7-14.2-3.5-17c-1.7-5.5-3.6-16.4-4.5-21.3c19.5-13,46.7-11.9,46.7-11.9c1,3.8,2.8,12,9,23.8c0.9,1.7,1.9,3.8,3.1,6.2c1.2,2.6,2.5,5.6,3.9,8.8c0,0,0,0,0,0C517.6,481,483.9,480.9,483.9,480.9L483.9,480.9z" id="i[[item.id]]-17"></path>
      				<path class="st0" d="M536.8,461.2c-19.2,19.9-53,19.7-53,19.7v0c0.9,3.9,1.7,7.4,2.5,9.5c0,0,0,0,0,0c2.7,7,11,35,20,52c4.1,7.8,11,21.5,17.3,34.2c0,0,13.7-17.3,36.7-15.3c-3-14.4-5.5-30.7-7.5-45.6C550.4,497.4,543.1,476.2,536.8,461.2z" id="i[[item.id]]-18"></path>
      				<path class="st0" d="M568.4,590.3c-0.2-0.5-0.4-0.9-0.5-1.4c-2.8-7.3-5.3-16.9-7.5-27.6l0,0c0,0,0,0,0,0c-23.1-2-36.7,15.3-36.7,15.3l0,0c5.1,10.3,9.8,20.1,12.5,25.8l0,0c1.2,2.6,2,4.3,2.2,4.8c1.2,3.2,5.6,12.8,5.8,15.5c23.4-0.7,34.8-14.3,34.9-14.3C574.9,605.3,572.7,601.3,568.4,590.3z" id="i[[item.id]]-19"></path>
      				<path class="st0" d="M579,608.3c0,0-11.5,13.7-34.9,14.3c0.1,1.2,0.5,4.7,1.1,9c0,0,0,0,0,0c0.8,5.3,2,11.9,3.3,17.2c2.4,9.8,2.1,16.2,3.5,22.4s4.9,14.5,5.8,21.2s3.4,7.2,5.5,15.2s6.9,8.4,8.1,6.1s0.4-7.5-0.4-8.5s-1.5-3.1-1.9-5.2s-1.6-8.4-2.1-11.5s-3.1-13.1-2.2-14.5s3.5,4,3.8,5.9s3,14.9,5,21.2s4,18.5,7.1,22.9s7.1,1.1,7.1-2.9s-3-17.1-3.2-20s-3.9-20-4.4-21.6s2.5-1.1,2.8,0.2s1.8,10.6,3,14.4s5,18.1,5.5,20.8s2,14.1,6.1,16.2s5.9-2.1,6.2-5.9s-5.5-30-6.4-34.5s-4.4-16.9-3-18.1s4.9,11.8,5.5,15.8s4.4,22.9,5.9,26.6s5.8,4.8,7.5,1.5s-1.5-24.4-1.9-31.4S607,671,606.9,664s-5.2-20.5-4.8-22.7c0.5-2.6,9.2,0.3,12.2,2.7c3,2.3,8.5,8.5,11.5,10s8.8,3.8,10.2,0c1.3-3.8-2.8-6.5-6.2-11.7s-13.7-10-17-13.5s-17.8-11.8-27.2-16.7c-2.3-1.2-4.1-2.1-5.7-3.2L579,608.3z" id="i[[item.id]]-20"></path>
      				<path class="st0" d="M341.4,400.3c-2.5,0-5,0.2-7.5,0.7c-14.8,3-22.6,16.1-29.1,30c-10.7,23-31.2,20.3-51.6,19.3c1.1,17.5,2,37.2,1.1,42.9c-0.7,4.9-4.1,14.4-7.8,24.1c0,0.2,0,0.4-0.1,0.6c3.1,0.4,42,4.7,95.7,4.4c0,0,0-122.1,0-122.1L341.4,400.3z" id="i[[item.id]]-21"></path>
      				<path class="st0" d="M432.1,450.7c-17.3,0.4-40.2,7.9-51.3-11.5c-6.4-11.1-8-23.4-18.2-31.4c-5.9-4.6-13.1-7.1-20.4-7.4c0,2.1,0,122,0,122c29-0.1,62.4-1.6,96.7-5.7c-2.1-5.5-6-14.9-8-19.9C429.5,493.3,430.7,471,432.1,450.7z" id="i[[item.id]]-22"></path>
      				<path class="st1" d="M266.9,615.5c0,0,25.5-12.8,34.9-20.2c9.3-7.3,17.9-25.1,40.5-24.6l0,0l0-48.4c-56,0.3-95.9-4.4-95.9-4.4l0,0c-2.3,5.9-4.7,11.7-6.7,16.7l0,0c-0.7,1.8-1.4,3.5-2,5l0.1,0.1c0,0,36.6,19.1,27.8,75.6L266.9,615.5z" id="i[[item.id]]-23"></path>
      				<path class="st1" d="M418.7,615.5c0,0-27.3-12.2-39.3-23.5c-12-11.3-14.7-20.7-37.2-21.2l0,0l0-48.4c29.1-0.1,62.5-1.6,96.9-5.8l-0.2,0.1c0.5,1.4,1,2.5,1.2,3.3c0.9,2.8,3.2,9.4,5.4,14.7l0,0c0.8,1.9,1.6,3.7,2.3,5c0,0-36.6,19.1-27.9,75.5L418.7,615.5z" id="i[[item.id]]-24"></path>
      				<path class="st0" d="M213.4,682c17.8-11.7,44.8-31.3,50.8-59.3c13.3-62.2-26.5-83-26.5-83l-0.1-0.1c-0.9,2.1-1.6,3.9-2.2,5.3c-0.7,1.8-4.8,12.2-9.3,28.1c-7.3,25.9-15.9,66.4-13.6,109L213.4,682z" id="i[[item.id]]-25"></path>
      				<path class="st1" d="M342.2,677.5l0-106.7l0,0c-22.5-0.6-31.1,17.2-40.5,24.6c-9.3,7.3-34.9,20.2-34.9,20.2s17,9.2,25.1,17.2s30.6,34.3,30.6,34.3c6.9,7.8,13.5,11.1,19.6,11.1L342.2,677.5z" id="i[[item.id]]-26"></path>
      				<path class="st0" d="M342.2,678.1c7.5,0.1,14.5-4.6,21.2-11.9c16.4-20.6,33-36.5,55.3-50.7c0,0-27.3-12.2-39.3-23.5c-12-11.3-14.7-20.7-37.2-21.2l0,0l0,106.7L342.2,678.1z" id="i[[item.id]]-27"></path>
      				<path class="st0" d="M471.2,682c-17.8-11.7-43.8-31.3-49.8-59.3c-13.3-62.2,26.5-83,26.5-83c0.9,1.7,5.4,14.6,10.1,33.3c0,0,0,0,0,0c6.5,25.3,13.6,61.2,13.6,94C471.6,671.9,471.5,676.9,471.2,682L471.2,682z" id="i[[item.id]]-28"></path>
      				<path class="st0" d="M266.9,615.5c0,0,17,9.2,25.1,17.2s30.6,34.3,30.6,34.3c22.6,27.9,11.5,68.5,9.2,82.8c-5.2,31.6-4.1,51.6-3.6,60.6c1,18.5,2.4,63.3,2.7,91.6v0c0,3,0.1,5.9,0.1,8.5c-45.2-12.2-77.8,0-77.8,0l0.6-0.1c-1.2-6.9-2.5-13.3-3.5-18.5c-0.9-4.2-1.6-7.6-2-10c-2.8-14.8-30.5-161-32.4-171.8c-1.7-9.4-2.7-18.8-3.2-28.1l0.9,0c17.8-11.7,44.8-31.3,50.8-59.3c0.5-2.5,1-5,1.4-7.4L266.9,615.5z" id="i[[item.id]]-29"></path>
      				<path class="st0" d="M471.2,682c-17.8-11.7-43.8-31.3-49.8-59.3c-0.5-2.5-1-4.9-1.3-7.2c-0.4-0.1-0.8-0.3-1.2-0.6l-0.2,0.6c-22.3,14.1-38.9,30.1-55.3,50.7c-22,24.2-15.5,60.2-10.5,83.7c5,23.5,4,49.2,3.8,59.5c-0.2,7.9-2.7,56.3-3,88.5c0,0,0,0,0,0c0,3.3,0,6.5,0,9.4c0,0,45.1-13.6,77.1,3.2c1.3-5.2,2.4-11.8,3.5-18.4c0.6-3.9,1.3-7.7,1.9-11.3c1.7-9.7,18-92.7,21-108.7C459.7,758,469,720.3,471.2,682L471.2,682z" id="i[[item.id]]-30"></path>
      				<path class="st1" d="M253.1,910.5c0,0,32.6-12.2,77.8,0c0,3,0,5.6,0,7.9c-0.2,22.8-4,34.8-7.2,44c-0.4,1.2-0.8,2.7-1,4.5c0,0,0,0,0,0c-0.6,4.7-0.6,11-0.1,17.8l0,0c-39.2,19-69.5,0-69.5,0l0,0c0.7-3.7,1.5-7.1,2.5-10c2-5.7,2.8-13.3,2.7-21.7c-0.1-13.5-2.3-29.1-4.6-42.6L253.1,910.5z" id="i[[item.id]]-31"></path>
      				<path class="st1" d="M432.3,984.8c-0.3-1.7-0.6-3-0.9-3.9c-1.8-5.2-4.8-19.5-4.8-31.3c0-11.8,2.1-30.8,4.1-39.2c-32-16.8-77.1-3.2-77.1-3.2c0,5.6,0.2,10.4,0.5,13.9c1.8,22.5,4.2,31.7,7.7,44.5c1.1,4,1,10.9,0.3,19c0,0,31.1,16,70.9,0L432.3,984.8z" id="i[[item.id]]-32"></path>
      				<path class="st1" d="M322.5,984.7c-39.2,19-69.5,0-69.5,0l0,0c-5.6,31-0.4,86.6,2.5,102c2.2,11.8,11.4,54.2,17.8,86.8l0,0c0,0,23.5-7.2,46,0c1.5-23,6.7-79.4,9.4-99c3-21.8,0.8-46.2-2.5-62C324.7,1004.5,323.2,994.1,322.5,984.7L322.5,984.7z" id="i[[item.id]]-33"></path>
      				<path class="st1" d="M432.9,984.7c-39.8,16-70.9,0-70.9,0c-1.5,18.1-6,42.5-7.3,56.1c-1.8,19.8,5,54.5,5.2,66.3c0.2,11.8,3.2,42.5,4.8,56.8c0.3,2.8,0.6,6,0.8,9.4c0,0,16.6-7.9,45.6,0c2.1-10.8,4.8-23.2,8-37c9.5-41,12.8-69.8,14.5-100.5c1.5-25.5,0.2-42.9-1.3-51.1L432.9,984.7z" id="i[[item.id]]-34"></path>
      				<path class="st1" d="M324.1,1231.3c-0.2-3.3-1.3-7.9-3.2-14.1c-0.3-0.9-0.5-1.8-0.7-2.6c0,0,0,0,0,0c-2.4-9.7-1.7-19.7-1-34.9c0.1-1.6,0.2-3.7,0.4-6.2c-22.6-7.2-46,0-46,0l0,0c3,15,5.4,27.9,6.3,34.7c0.3,2.2,0.4,4.6,0.5,7l0,0c0.1,5.5-0.3,11.1-0.5,16.2c0,0,19,9.4,43.7,0L324.1,1231.3z" id="i[[item.id]]-35"></path>
      				<path class="st1" d="M361.6,1230.6c0.2-3.1,1-6.9,2.5-13.1h0c2.4-10,2.5-29.4,1.5-44.1c0,0,16.6-7.9,45.6,0c-4.2,21.2-6.4,35.9-6.7,42.2h0c-0.3,5.3,0.3,10.7,0.7,15.7c-21,7.4-43.5,0-43.5,0L361.6,1230.6z" id="i[[item.id]]-36"></path>
      				<path class="st1" d="M323.4,1231.4c-24.7,9.4-43.7,0-43.7,0c-0.2,5.2-0.2,9.7,0.7,12.8c1.6,5.6,2.3,5.9,1.3,9.8l0,0c-0.3,1.3-0.9,3.1-1.6,5.7c-3,10-9.3,16.8-12.5,22c-3.2,5.2-0.5,7.8,2.8,9.7c3.3,1.8,3.3-0.5,4.8,0.7c1.5,1.2,12.3,0.5,13.5,0.2c1.2-0.3,1.5-0.7,5.2,0.8s8.8-2.3,10.7-0.7s10,1.7,12.7,1.4c2.7-0.3,5.3-5.2,5.8-6.7s0.3-3,1-5s1.2-6.2-0.2-9c-1.3-2.8-1.5-3.3,0-8.3c0.7-2.2,0.5-5,0.1-7.7l0,0c-0.6-3.5-1.6-7-2.3-9.5c-1.2-4.5,0.2-8.8,1.8-11.2c0.6-1,0.8-2.6,0.7-4.9L323.4,1231.4z" id="i[[item.id]]-37"></path>
      				<path class="st1" d="M361.6,1231.4c0,0,22.5,7.4,43.5,0c0.3,3.8,0.4,7.4-0.2,10.5c-1.3,7-3.5,8.2-1.8,12.5c1.7,4.3,8,18.8,10,21.8s4.7,4.7,4.8,9.2s-4.7,6.8-7,6.5c-2.3-0.3-5.8,1.2-8.2,0.8s-6.8,0.9-7.5,0c-0.7-0.9-2.8-0.3-4,0.3c-1.2,0.6-6.7,1.2-7.7,0c-1-1.2-2.5-0.7-4-0.2s-11,2.5-15.3-2.2c-4.3-4.7-1.8-6.2-3-7.2s-2.2-7.2,0.2-11.5c2.3-4.3-2.2-4.7-0.3-14.2c1.8-9.5,3.8-10.8,1.8-18c-1-3.6-1.5-6.1-1.3-9.2L361.6,1231.4z" id="i[[item.id]]-38"></path>
      				<circle class="st2" cx="317" cy="108.9" r="5.2"></circle>
      				<circle class="st2" cx="367.6" cy="108.9" r="5.2"></circle>
      				<line class="st2" x1="330" x2="356.5" y1="156.6" y2="156.6"></line>
      				<circle class="st0" cx="342.3" cy="508.6" r="4.8"></circle>
      			</svg>
      			<svg class="male-svg i[[item.id]]-male-svg" height="680" ng-if="gender === 'male'" version="1.1" viewbox="0 0 800 1360" width="400px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg">
      				<path class="st1" d="M343.8,84.4c0,0,24,4.3,55.1,4.4V26.2l-0.3-0.1c-30.8,0-50.2,31.6-53.2,44.6c-0.8,3.7-1.5,8.8-1.9,13.7L343.8,84.4z" id="i[[item.id]]-1"></path>
      				<path class="st1" d="M452,84.4c-18.9,3.3-37.2,4.4-53.1,4.4c0,0,0-62.6,0-62.6l-0.3-0.1c0.3,0-1.9,0-1.6,0c19.4,0.7,53.3,19.5,54.9,51c0.1,2.6,0.3,5.1,0.4,7.3L452,84.4z" id="i[[item.id]]-2"></path>
      				<path class="st0" d="M343.5,84.4c-0.5,6.1-0.7,12-0.6,14.6c0.3,4.7,1,12.2,0.7,16.1c-1-1.8-4.2-5.8-8.2-1.8s-1.8,17-0.8,20.7c1,3.7,5.8,14.7,7.2,15.8c1.4,1.1,5.2,4.8,8.5-1.7c0,0,0,0.1,0,0.1c0.7,5.2,1.2,12.5,3.3,18.8l-0.1,0.1c0,0,18.5,19.8,45.6,19.1l-0.2,0V88.8c-31.1-0.1-55.1-4.4-55.1-4.4L343.5,84.4z" id="i[[item.id]]-3"></path>
      				<path class="st1" d="M451.9,84.3c-18.9,3.3-37.2,4.4-53.1,4.4c0,0,0,97.6,0,97.6l0.3,0.2c27.1-0.7,42.3-19.2,42.3-19.2l0-0.3c2.6-5.5,5-14.9,4.9-18.4c3.8,6.2,8.9,3,10-2c1.1-5,7.7-7.9,6.9-23.6s-8.1-11.7-11.1-7.3c0.6-6.8,1.5-6.8,0.3-31.4L451.9,84.3z" id="i[[item.id]]-4"></path>
      				<path class="st0" d="M397.4,234c-4.2,0.4-20.3-8.6-31.6-15.3c-6.6-3.9-11.5-7-11.5-7l0.1,0.9c0.7-15.5,1.4-39.1-0.8-45.4l-0.1,0.1c0,0,18.5,19.8,45.6,19.1l-0.2,0v48.4L397.4,234z" id="i[[item.id]]-5"></path>
      				<path class="st1" d="M398.9,234c5.4-0.7,11.9-3.4,29.8-15.1c3.5-2.3,7.4-4.9,11.8-7.9l0.1,0.9c-0.6-2.7,0.1-34.5,0.9-44.5l-0.1,0.1c0,0-15.2,18.5-42.3,19.2l-0.2,0V235L398.9,234z" id="i[[item.id]]-6"></path>
      				<path class="st1" d="M354.3,211.7c0,0,4.9,3.1,11.5,7l0,0c0,0-30,112.1-149.5,116.6l0.1,0c-0.2-14.1,0.9-36.3,9.6-54.1c12-24.6,42.2-35.6,53.5-37.8c11.3-2.2,18.8-0.7,26.8-4.2h0.1c8-3.5,39.5-12.3,48-27.6L354.3,211.7z" id="i[[item.id]]-7"></path>
      				<path class="st0" d="M398.9,447.7V233.8l0,0c-0.5,0.1-1,0.1-1.5,0.2c-4.2,0.4-20.3-8.6-31.6-15.3l0,0c0,0-17.9,66.7-80.9,99.3l0,0c8.1,53.2-10.9,81.7-10.9,81.7l0.1-0.2c0,0,0,0.1,0,0c0.4-0.1,9.8,25.1,12.3,30.8c2.5,5.7,5.1,17.8,8.7,24.6l0,0.1c3.5,6.8,2,12,3.8,17.8c1.3,4.1,3.2,12.9,2.7,24.8l0.3,0c22.6,0.9,43.4,3.8,55.3-19.3c7.1-13.9,15.8-27,32.1-30c2.7-0.5,5.5-0.7,8.3-0.7L398.9,447.7z" id="i[[item.id]]-8"></path>
      				<path class="st0" d="M523.4,400.9c0-0.5,0.1-1.1,0.1-1.8C523.4,399.8,523.4,400.4,523.4,400.9c-0.5-0.5-6.6,18.5-8,21.2c-1.4,2.7-3.6,6.5-4.1,9.7c-0.5,3.2-4.1,11.8-5.3,15c-1.3,3.3-5.3,10.4-5.5,16.5c-0.3,6.1-3.1,19.4-2.7,27.5c0.1,1.6,0.3,4.1,0.7,7.3l-0.4,0.1c-19.2,0.3-44.6,8-56.9-11.5c-7-11.1-8.8-23.4-20.1-31.4c-6.8-4.8-15.1-7.3-23.4-7.5l1.2,0V233.8l0,0c5.4-0.7,11.9-3.4,29.8-15.1c0,0,29.9,73.1,94.7,103.5l0,0c-15.4,47.5,0,77,0,77L523.4,400.9z" id="i[[item.id]]-9"></path>
      				<path class="st1" d="M440.4,210.8c-4.4,3-8.3,5.7-11.8,7.9c0,0,47,115.1,151.1,116.6l0.1-0.1c1.9-19-5-52.1-18.1-68.5c-13.1-16.4-53.7-26.8-64.3-26.7c-0.1,0.1-0.1,0.1-0.2,0.2c-8.9-0.1-18.5-5.3-31.2-10.9c-16.3-7.1-24.9-15.9-25.5-18.6L440.4,210.8z" id="i[[item.id]]-10"></path>
      				<path class="st1" d="M193.2,407.8c4.5-14.5,11.9-36.2,16.1-42.6c4.5-6.7,7-8.8,7.4-14.8l-0.1-0.1c0.1-0.9,0.1-2,0.1-3.2c-0.1-2.4-0.3-6.5-0.4-11.8l-0.1,0c27.3-1,49.9-7.7,68.6-17.3l0,0c8.1,53.2-10.9,81.7-10.9,81.7l0.1-0.2c-0.5,0.1-12.7,25.3-19.7,39.5c0,0-11.4-30.8-60.9-31.1L193.2,407.8z" id="i[[item.id]]-11"></path>
      				<path class="st0" d="M193.5,407.9c49.4,0.3,60.9,31.1,60.9,31.1c-2,4-3.5,7.1-4.3,8.6c-1.3,2.3-2.2,4.2-2.9,5.7c-1.3,2.9-1.9,4.8-2.1,7.2c-0.2,1.8-1.6,10.2-3.9,20.1l0.3,0.1c0,0-42.5,0.2-67.9-28.9l0,0c2.6-5.1,5.1-9.3,7.1-11.8c7.3-9.2,6.9-10.9,8.8-18.7c0.3-1.4,0.7-2.9,1.2-4.6c0.7-2.3,1.6-5.3,2.7-8.8L193.5,407.9z" id="i[[item.id]]-12"></path>
      				<path class="st0" d="M179.1,595.5c4.7-7.4,11.3-17.5,21.7-30.2c13-16,25.5-39.8,32-55.8c0.3-0.6,0.5-1.2,0.8-1.9c0,0,0,0.1,0,0.1c3-7.8,5.6-18.1,7.6-27.1l0.3,0.1c0,0-42.5,0.2-67.9-28.9l0,0c-5.2,10.1-11,24.1-15.4,37.2c-3,8.7-5.3,17.1-6.5,23.9c-1.8,11-7.7,35-14.8,57l0.7,0.2c0,0,32,3.1,41,25.2L179.1,595.5z" id="i[[item.id]]-13"></path>
      				<path class="st1" d="M178.4,595.1c-9-22-41-25.2-41-25.2l-0.7-0.2c-0.6,1.9-1.2,3.8-1.9,5.7c-1.7,5.1-3.6,10-5.3,14.5c-5.1,13-9.8,22.8-10.5,24.2c-0.9,1.9-1.5,3.3-3,4.6v0.1v-0.1c0,0,18.1,16,43,18c2.1-7.8,8.3-20.8,13-29.5c0,0,0,0,0.1,0c1.5-2.7,2.8-5,3.7-6.6c0.9-1.5,2-3.2,3.2-5.1L178.4,595.1z" id="i[[item.id]]-14"></path>
      				<path class="st0" d="M116.1,618.7c0,0,18.1,16,43,18v1.6c-0.4,1.3-0.6,2.5-0.7,3.5c-0.8,8.5,1.7,10.5-1,20.1c-2.4,8.7-3.3,15.9-6,25.4c-0.3,1-0.6,2.1-1,3.2c-1.3,4.1-3.9,9-5.6,13.8c-2.8,8.2-4.8,16-6.5,19.4c-2.7,5.3-4.6,14.3-5.7,16.3c-1.1,2-6,4.9-8.2,2.5c-2.2-2.4-1.7-5.5,0-12c1.7-6.5,5.8-20.6,7.1-25.1s2.2-6.9,1.1-7s-2.3,1.6-3.6,5.5c-1.3,3.9-4.6,16.8-6.1,22.5c-1.5,5.6-7.5,23.9-9.4,27.2c-1.9,3.3-4.5,6.4-8.8,4.8c-4.3-1.6-3.7-6.5-2.5-10.8c1.2-4.3,4.4-15.4,5.4-20.4c1-5,6.4-23.4,7.1-25.7c0.7-2.3,1-4.7-0.8-4.8s-2.6,3.4-3.9,7.9c-1.3,4.5-5.1,15.5-7.1,24.1s-5.7,22.5-7.4,26.2c-1.7,3.7-4.8,7.3-9.5,5.6c-4.7-1.7-3-7.8-2.8-10.5c0.2-2.7,4.4-18.6,5.2-22.6c0.8-3.9,6.5-24.8,7.9-28.7c1.4-3.9,3.8-9,1.8-9.8s-3,4.6-4.4,7.8c-1.4,3.2-6.9,19.3-8,22.1c-1.1,2.7-3.3,12.5-4,15.5c-0.7,3-4.4,11.4-8.6,10.6c-4.2-0.8-6.4-4.6-5.1-12.6c1.3-8,4.8-22.1,6.8-29.3s5.3-18,5.9-21.1c0.6-3.1,9.1-24,9.1-25.6c0-1.6-3.8-1.3-7.6-0.1c-6.5,2-12.1,8.9-15.5,10.5c-3.4,1.6-8.9,3.4-13,1.5c-4.1-1.9-4.1-8.4,0-10.5c4.1-2.1,7.3-7.5,11.9-10.5c4-2.6,19.2-15.2,31.8-21c2.1-0.9,4-1.7,5.9-2.2c7.5-2.1,10.9-3.5,12.8-5.1V618.7z" id="i[[item.id]]-15"></path>
      				<path class="st1" d="M523.4,399.2c0,0-15.4-29.5,0-77l0,0c16.5,7.7,35.2,12.7,56.3,13l0.1-0.1c-0.7,6.5-0.5,11,0.3,14.4v0.1c1.2,5.1,3.4,7.8,5.8,11.1c3.7,5.4,17.5,38.5,21.4,53.2l-0.8,0.2c-49.4,0.3-62.5,30.2-62.5,30.2l0.5-0.2c-6.2-12.8-20.9-43-21-43.1L523.4,399.2z" id="i[[item.id]]-16"></path>
      				<path class="st0" d="M606.4,414.1c-49.4,0.3-62.5,30.2-62.5,30.2l0.5-0.2c1.2,2.4,2.1,4.2,2.5,5.1c0.1,0.1,0.1,0.2,0.2,0.3c2.7,5.4,6.8,11.1,6.8,16.9c0,1.2,1.3,10.5,3.3,20.4l-0.8,0.2c0,0,44.5,0.2,69.9-28.9l0.4-0.2c-5.2-9.5-11.2-20.4-12.1-21.9c-3.2-5.2-5.3-9.2-6.5-17.2v-0.7c-0.2-1.1-0.5-2.5-0.9-4L606.4,414.1z" id="i[[item.id]]-17"></path>
      				<path class="st0" d="M556.4,486.8c0,0,44.5,0.2,69.9-28.9l0.4-0.2c2.1,3.9,4.1,7.5,5.6,10.2c4,7.7,7,16.2,9,24.1l-0.1,0.1c6,23.2,14.8,64.1,18.8,74.1l-0.1,0.1c-36.9,7.6-43.8,27.5-43.8,27.5l0.1-0.1c-4.3-6.2-9-12.9-11.6-16.1c-4.6-5.7-33.4-47.8-40.4-65.8c0-0.2,0-0.3,0-0.5c-0.9-2.4-3.9-10.8-6-19.8c-0.4-1.6-0.7-3.3-1.1-4.9L556.4,486.8z" id="i[[item.id]]-18"></path>
      				<path class="st1" d="M639.1,637.3c-0.7-1.3-3.4-7.3-6.4-13.8c-3-6.6-6.4-13.8-8.1-17c-0.2-0.2-0.3-0.4-0.5-0.6c-1.3-2.3-4.4-7-7.9-12.1l-0.1,0.1c0,0,6.9-19.9,43.8-27.5l0.1-0.1c2.2,5.5,5.2,14,8.1,21.6l0.1-0.1c2.4,6.4,4.7,12.1,6.4,15.2c3.3,6.1,1.5,10.1,7.3,13.8l-0.3,0.4c0,0-18.1,17.4-43,19.3L639.1,637.3z" id="i[[item.id]]-19"></path>
      				<path class="st0" d="M638.6,636.4c24.9-1.9,43-19.3,43-19.3l0.3-0.4c0.6,0.4,1.4,0.8,2.2,1.2c-0.2,0-0.4,0-0.7,0c0.2,0,0.3,0,0.5,0c4.3,2,11.1,5.1,17.5,8.1c6.4,3,12.2,5.9,14.3,7.4c4.3,3,19,10.7,21.8,14.5c2.8,3.8,10.8,6.9,10.1,13.7c-0.7,6.8-6.7,6.6-9.2,6.4c-2.5-0.2-9.6-2-13.4-7c-3.8-5-9.9-6.7-13-7.6c-3.1-0.9-3.7,1.3-2.5,3.9s7.3,19.6,8.6,26c1.3,6.4,5.1,16.1,6.5,23c1.4,6.9,6.3,24.7,6.2,27.4c-0.1,2.7-0.8,9.6-4.4,10.1c-3.6,0.5-8-1.3-10.6-7.1s-2.3-12.4-4.1-17.4c-1.8-5-7.1-21.4-8.4-25.5c-1.3-4.1-2.5-5.6-3.5-5.2c-1,0.4,0.3,2.7,1.1,5.8c0.8,3.1,6.3,20.1,7.2,24c0.9,3.9,4.2,19.8,5.5,25c1.3,5.2,2.1,12.2-0.9,15.2s-5.9,1.7-8.6-0.9c-3.4-3.3-5.6-14.2-6-17.8c-0.4-3.6-9.3-32.5-10.2-35.5c-0.9-3-1.8-8.7-3.8-8.6s-1.3,3.1-0.6,5.1c0.7,2,5.6,17.1,6.1,21.2c0.5,4.1,6.6,24,6.4,27.6c-0.2,3.6-1.1,8.2-5.1,8.4s-7.3-5-9-9.8c-1.7-4.8-5.2-17.2-6.2-21.8s-5.8-21.3-6.9-24.1c-1.1-2.8-1.4-5.6-3.2-5.6c-1.8,0-0.7,2.5,0.2,5.1c0.9,2.6,5.6,18.6,6.5,21.8c0.9,3.2,3.2,10.5,2.5,14.1c-0.7,3.6-5.4,5-8.2,2.8c-3.2-2.6-11.1-27.5-12.6-32c-1.5-4.5-6.2-14-8.5-22.9c-2.3-8.9-5.4-23-6.4-32.1c-1-9.1,0.9-14.4-0.1-16.2c0,0,0.1-0.1,0.1-0.1L638.6,636.4z" id="i[[item.id]]-20"></path>
      				<path class="st1" d="M398.9,447.7v120.6c-57.6,0.6-98.3-8.9-98.3-8.9l-0.3-0.8c-0.4-1.3-0.9-2.6-1.4-4.1c-1.2-4.5-4-20,0.5-40.2c1.4-6,2-11.6,2.2-16.7l0.3,0c22.6,0.9,43.4,3.8,55.3-19.3c7.1-13.9,15.8-27,32.1-30c2.7-0.5,5.5-0.7,8.3-0.7L398.9,447.7z" id="i[[item.id]]-21"></path>
      				<path class="st1" d="M398.9,447.7v120.6c29.7-0.3,63.8-3.3,99.3-11.5l0.3,0c0.4-3.8,1.5-8.3,3.1-13.4c2.4-7.4-1.3-32-3-45.4l-0.4,0.1c-19.2,0.3-44.6,8-56.9-11.5c-7-11.1-8.8-23.4-20.1-31.4c-6.8-4.8-15.1-7.3-23.4-7.5L398.9,447.7z" id="i[[item.id]]-22"></path>
      				<path class="st1" d="M294.5,580.8c33.2-0.8,46.1,41.8,43.8,74.9c-0.2,2.8-0.5,5.5-1,8.1l0.4,0c0,0,8.7-5.1,16.7-11.1c7.8-5.8,18-24.2,44.4-25.4l0-0.1l0-0.5c0,0,0-58.5,0-58.5c-57.6,0.6-98.3-8.9-98.3-8.9l-0.3-0.8c0.4,1.3,0.5,2.8,0.1,4.7c0,0-0.1-0.1-0.1-0.1c-0.4,1.9-1.5,4.1-3.4,7.2c-1.2,1.9-1.4,5.2-2.4,9.4L294.5,580.8z" id="i[[item.id]]-23"></path>
      				<path class="st1" d="M502.5,574.1c-33.7,5.5-41.8,41.9-39.8,74.9c0.3,5,1.1,9.7,2.2,14l0.2-0.1c-1.1,0.4-7.8-4.1-9-4.7c-2.5-1.3-5.1-2.7-7.6-4.1c-9.2-5.1-10.6-10.8-21.7-18.3c-8.4-5.7-15.4-8.5-25.6-8.5c-0.8,0-1.7,0-2.5,0l0,0l0-0.6c0,0,0-58.5,0-58.5c29.7-0.3,63.8-3.3,99.3-11.5l0.3,0c-0.3,3.1-0.1,5.8,0.6,7.8v0.1c0.5,1.5,1.8,4.6,3.2,8.6L502.5,574.1z" id="i[[item.id]]-24"></path>
      				<path class="st1" d="M294.5,580.8l-0.4-0.1c-1.3,5.1-2.4,11.4-3.4,17.9c-2,14.4-3.1,29.6-2.8,34c0.5,8-6.6,46-11.6,70c-1,4.7-2.2,10.5-3.6,17.2c0,0,0,0,0,0c4.1-0.7,62-12.2,65.5-64.2C340.6,622.7,327.7,580,294.5,580.8z" id="i[[item.id]]-25"></path>
      				<path class="st1" d="M396.5,705.9c-11.4-1.7-21.7-7.8-29.8-15.9c-9.1-9.1-18.7-18.6-29.1-26.2c0,0,8.7-5.1,16.7-11.1c7.8-5.8,18-24.2,44.4-25.4l0-0.1v78.6l0,0L396.5,705.9z" id="i[[item.id]]-26"></path>
      				<path class="st1" d="M398.9,705.4l0-78.1l0,0c0.8,0,1.7,0,2.5,0c10.1,0,17.1,2.8,25.6,8.5c11.1,7.5,12.4,13.2,21.7,18.3c2.5,1.4,5,2.7,7.6,4.1c1.2,0.6,7.9,5.1,9,4.7c-10.6,3.8-18.8,9.9-25.7,17.9c-5.6,6.5-10.8,13.6-18.5,18.4c-6.4,3.9-14.2,6.8-22,6.7L398.9,705.4z" id="i[[item.id]]-27"></path>
      				<path class="st1" d="M523.6,713.2c0,0-57.7-10.3-60.9-64.1c-2-33,6.1-69.4,39.8-74.9l-0.3,0.1c2.7,7.6,6.1,18.4,6.8,27.4c1,13.7,3.1,43.7,5.3,53.6c1.3,6,6.4,33.6,10.7,57.5L523.6,713.2z" id="i[[item.id]]-28"></path>
      				<path class="st1" d="M272.8,719.9c3.9-0.7,55.9-11,64.5-56c10.4,7.6,20.4,17.1,29.4,26.2c8.1,8.1,18.3,14.2,29.8,15.9c-3,0.5-5.8,1.6-7.6,4.2c-2,2.8-3.1,6.3-3.5,9.7c-0.6,5.2,0.1,10.5,1,15.6c0.8,4.9,2.2,10,2.3,15.1c1,52-10,103-18.6,153.9l-0.9-0.2c-43.5-14.1-85.2,0-85.2,0l0-0.2c-33-55-25-122-12-181.7l0.6-2.1L272.8,719.9z" id="i[[item.id]]-29"></path>
      				<path class="st1" d="M396.5,705.9c8.8,0.7,17.3-2.3,24.5-6.7c7.8-4.7,13.1-11.9,18.8-18.4c7-8,14.4-14.1,25.1-17.9l0,0.3c11.4,41.6,58.6,50,58.6,50l1.3-0.2c2.8,15.8,5.4,29.9,6.3,35.1c1.4,7.4,4.2,27.3,5.2,47.7c0.8,15.9,0.1,32.2-0.8,43c-2,25-10.3,42.3-16,52.2l-0.1,0.1c-5,8.7-6.3,11.4-6.8,19.3l-0.3,0c0,0-41.7-14.1-85.2,0l0.4-0.2c-1.6-8.7-3.3-18.8-4.4-25.9c-1.7-11.7-7.8-55.8-10.1-67c-2.3-11.2-5-60.3-3.8-71c0.8-6.9,1-13.8,1-20.7c0-4.5,0-9.2-1.6-13.4c-0.8-2-2-4-3.8-5.1C402.3,705.4,399.4,706.4,396.5,705.9z" id="i[[item.id]]-30"></path>
      				<path class="st1" d="M369.3,904.2c-43.5-14.1-85.2,0-85.2,0s3.1,34.6,3.5,55.2c0.1,3.7,0.3,7.7,0.3,11.9h0c0.1,4.2,0.1,8.6-0.2,13.1l-0.2-0.1c0,0,31.6,18.5,71.2,0l0.1,0c-0.6-2.3-1.2-4.3-1.7-5.1c-2.3-3.5,1.2-7.8,1.9-11.2c0.8-4.3,1.5-8.5,2.4-12.8c1.3-6,2-18.5,4-26.8c0.2-0.7,0.4-1.5,0.6-2.6c1.1-4.8,2.7-12.8,4.3-21.3L369.3,904.2z" id="i[[item.id]]-31"></path>
      				<path class="st1" d="M438.4,990.6c1.5-9.1,2.2-15.5,1.4-17.4c-1.2-2.8-5.2-15.2-5.2-25s-2.3-15.7-4.3-24h0.1c-0.8-3.3-1.8-8.3-2.8-13.9l-0.3,0.1c43.5-14.1,85.2,0,85.2,0l0.3,0c-0.1,1.1-0.1,2.4-0.2,3.7c-0.4,11-3.6,38.8-3.6,50.2c0,7.1,0.5,16.5,1.4,26l-0.3,0c0,0-32.6,18.5-72.2,0L438.4,990.6z" id="i[[item.id]]-32"></path>
      				<path class="st1" d="M345.7,1154.1c1.5-9.4,2.8-18,3.1-22.2c0.8-11.1,3.7-29.5,4.3-33.3c0.6-3.8,5.8-17.2,9.5-25.9c3.7-8.7,3.5-20,2.5-27.2s-3.8-45.8-4.5-51.4c-0.4-3.2-1-6.9-1.8-10l-0.1,0c-39.6,18.5-71.2,0-71.2,0l0.2,0.1c-1.4,20.2-4.8,41.9-4.1,53c1,16,4.5,62,7.5,83c1.1,7.5,2.3,20.2,3.3,33.7l-0.2,0.1c0,0,22-7,50.3-0.2L345.7,1154.1z" id="i[[item.id]]-33"></path>
      				<path class="st1" d="M502.7,1157.4c1.6-17.8,3.6-38.4,5.3-53.1c3.2-27.6,6.8-81.9,4.5-96.4c-0.9-5.5-1.6-11.5-2.1-17.4l-0.3,0c0,0-32.6,18.5-72.2,0l0.5,0.1c-0.8,4.8-1.7,10.4-2.8,16.5c-3,17.5-4.1,48.7-3.1,56.7c1,8,9.7,28.8,11.8,35s0.7,8.8,2,20.8c0.8,7.3,3.3,23.3,5.5,37.3c28.2-6.8,50.1,0.5,50.1,0.5L502.7,1157.4z" id="i[[item.id]]-34"></path>
      				<path class="st1" d="M296.3,1222.5c0.4-3,1.4-7.3,1.8-11.1c0.1-1.2,0.2-2.4,0.1-3.5c-0.1-2.9-1.8-29.6-3.8-53.8l-0.2,0.1c0,0,22-7,50.3-0.2l1.2,0.2c-2.4,15.4-5.4,32.8-5.2,36.1c0.1,4.5,1.3,11.1,2.4,15c0,0,0,0,0,0c0.2,0.7,0.4,1.3,0.6,1.8c0.8,2.2,2,9.3,2.2,15.2l-1.2,0c-29.7,7.1-48.4,0-48.4,0L296.3,1222.5z" id="i[[item.id]]-35"></path>
      				<path class="st1" d="M502,1157.3c0,0-21.9-7.3-50.1-0.5c1.4,8.9,2.8,17.1,3.5,21.6c1.8,11.7,1.5,21-0.7,27.2c-1.7,4.9-2.7,15.2-2.8,20.1l0.1,0c29.7,7.1,48.3-0.3,48.3-0.3l0.1,0c0.6-3.8,0.9-8.5,0.4-11.3l0.1-0.1c-0.8-4.2-1.8-10-1-22.2c0.4-5.7,1.5-19.1,2.9-34.6L502,1157.3z" id="i[[item.id]]-36"></path>
      				<path class="st1" d="M296.1,1222.3c0,0,18.7,7.1,48.4,0l1.2,0c0.1,2.6,0,5-0.4,6.6c-1.4,5.3-0.9,8.3,0.8,12.5c1.6,3.9,1.7,11.3,0.5,19.1l0,0c-0.1,0.6-0.2,1.3-0.3,1.9c-1.5,8.5-6.8,15.1-15.5,18.8c-3.8,10.5-3.8,15.5-4.5,21.3c-0.1,1-0.3,2.7-0.6,4.5c-0.5,2.7-1,5.8-1.7,8.2c-1.4,4.7-3.2,7.2-5.2,8.8c-3.7,2.9-4.8,4-5.9,6.8s-7.8,10-12.2,10.6c-5.4,0.7-10.5,0.5-15.8-5.8c-2.9,2.8-6.8,3.1-10.8-1.8c-8.2,1.2-8-3-8.2-5c-3.2,0.4-4.2-1.4-4.2-2.5c-3,0.4-5.9-2.4-6.1-5.5c-0.2-2.2,1-11.8,4.6-20.3c1.4-3.4,3.2-6.7,5.5-9.2c8-8.8,16.6-19.4,21-28.2c4.2-8.3,9.8-16.7,10.9-23.7c0-0.3,0.1-0.7,0.1-1c0.7-7.3-1.9-11.9-1.4-15.9L296.1,1222.3z" id="i[[item.id]]-37"></path>
      				<path class="st1" d="M500.2,1225.5c0,0-18.6,7.3-48.3,0.3l-0.1,0c0,1.3,0,2.2,0.1,2.6c0.5,1.7,0.8,9.3-1,13.5c-1.8,4.2-1.7,13.3-0.7,21.5h0.2c1,8.2,12,15,15,16.5c3,1.5,3,4.2,3.8,7s2.8,10.7,3.8,21c1,10.3,6.2,15.7,8.7,17.7c2.5,2,2.8,3,3.7,4.7c0.9,1.7,3.4,6.1,11.2,9.8c7.8,3.7,15-1.2,16.7-4.8c4.5,4.5,11.1,0.4,12.2-2.1c4.9,1.4,7.8-3.2,7.9-5.2c1.6,0.3,3.6-1.1,4.2-2.6c0.8,0.3,2.5,0.7,5-3.3c2.5-4-3-17.6-4.1-21.7c-1.2-4.2-9.7-14.8-16.3-21.8s-7.8-11.3-12.5-18.7c-4.7-7.4-7.3-14.7-9.3-20.2c-0.1,0-0.2-0.1-0.2-0.1c-2-5.4-2.2-5.7-1-9.1C499.6,1229.2,500,1227.5,500.2,1225.5L500.2,1225.5z" id="i[[item.id]]-38"></path>
      				<circle class="st0" cx="398.9" cy="557.8" r="4.8"></circle>
      				<circle class="st1" cx="372.8" cy="105.8" r="5.2"></circle>
      				<circle class="st1" cx="423.5" cy="105.8" r="5.2"></circle>
      				<!--circle class="st1" cx="332.5" cy="325.6" r="5.2"/>
      <circle class="st1" cx="462.7" cy="325.6" r="5.2"/-->
      				<line class="st1" x1="385.8" x2="412.3" y1="153.5" y2="153.5"></line>
      			</svg>

      			<div class="mark" ng-class="{'active': activeMark === 'front-' + (markIndex + 1)}" ng-repeat="(markIndex, mark) in reportFront" ng-style="{'top': mark.y + 'px', 'left': mark.x + 'px'}">
      				<div class="mark-icon" ng-click="activateMark('front-' + (markIndex + 1))" ng-style="{'width': (mark.size - 1) / 2 + 6 + 'px', 'height': (mark.size - 1) / 2 + 6 + 'px', 'background-color': getBgColor(mark.intensity)}">
      				</div>
      				<div class="mark-content">
      					<div class="mark-name">[[mark.area]]</div>
      					<div class="mark-hide" ng-click="hideMark()"><img alt="hide" src="/bundles/concertopanel/files/starter-content/hide.png" /></div>
      					<div class="mark-delete" ng-click="deleteMark(markIndex, 'front')"><img alt="delete" src="/bundles/concertopanel/files/starter-content/delete.png" /></div>
      					<div class="mark-handle"></div>
      					<label>Area size</label>
      					<input class="mark-range mark-size" max="100" min="1" ng-model="mark.size" step="1" type="range" />
      					<label>Pain intensity</label>
      					<input class="mark-range mark-intensity" max="100" min="1" ng-model="mark.intensity" step="1" type="range" />
      					<textarea ng-model="mark.description" placeholder="Description" rows="6"></textarea>
      				</div>
      			</div>

      		</div>
      	</div>
      	<div class="pain-mannequin-back">
      		<div class="pain-mannequin-svg">
      			<h3>Back</h3>
      			<svg class="female-svg i[[item.id]]-female-svg" height="680" ng-if="gender === 'female'" version="1.1" viewbox="0 0 800 1360" width="400px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg">
      				<path class="st1" d="M341.9,77.2c-29.7-0.1-53.6-6.6-53.6-6.6c5.4-35,26.5-50.8,51.1-50.8c0.8,0,1.6,0,2.4,0l0,0v57.3L341.9,77.2z" id="i[[item.id]]-39"></path>
      				<path class="st1" d="M341.7,77.2V19.9l0,0c27.7,0.6,45.9,12.8,52.7,49.3c-17.2,6.2-35.8,8.1-52.5,8L341.7,77.2z" id="i[[item.id]]-40"></path>
      				<path class="st1" d="M341.9,181.9c-21.9-0.1-38.5-9.2-38.5-9.2c-0.7-2-4.2-7.7-6.6-15.3c0,0,0,0,0,0c-1.1-3.3-2-7-2.4-10.8c-0.4-3.6-1-8.7-1.8-14.2l0.2,0c-3.5,6.1-6,0.7-8.3-3.4c-2.5-4.5-5.5-13.4-6.5-18.8s0.2-13,3.1-13.6c1.9-0.4,4.7,1.9,7.1,4.2l0.2,0c-0.3-2.3-0.5-4.2-0.5-5.3c-0.3-6.5-0.2-20.8,0.4-24.7c0,0,23.9,6.4,53.6,6.6l-0.2,0v104.7L341.9,181.9z" id="i[[item.id]]-41"></path>
      				<path class="st1" d="M341.9,181.9c11.6,0,24.8-2.5,37.8-10.3c0.1-0.5,3.4-7.7,5.6-13c0,0,0,0,0,0c0.8-1.9,1.4-3.5,1.7-4.6c2.1-7.1,3.8-14.6,5.1-22.2l0,0c2.4,5.3,5.5,1.2,6.7-0.6c1.5-2.4,2.8-7.2,4.2-11s2.9-13.4,2.4-18s-7.8-6.8-9.8-1.2c0.7-13,0.2-24.4-1.2-31.7c-17.2,6.2-35.8,8.1-52.5,8l-0.2,0v104.7L341.9,181.9z" id="i[[item.id]]-42"></path>
      				<path class="st1" d="M340.7,232.1c-13.5,0-28-8.6-37.4-15.4c-6.2-4.5-10.2-8.2-10.2-8.2c4.3-2.4,7.6-5.2,9.4-8.5c1.9-3.6,1.8-24.5,0.8-27.3c0,0,16.6,9.2,38.5,9.2l-0.2,0v50.2L340.7,232.1z" id="i[[item.id]]-43"></path>
      				<path class="st1" d="M340.7,232.1c13.5,0,28.9-8.6,38.9-15.4c6.6-4.5,11-8.2,11-8.2l0,0c-9.2-5.4-14-15.4-11-36.8c-13,7.8-26.1,10.3-37.8,10.3l-0.2,0v50.2L340.7,232.1z" id="i[[item.id]]-44"></path>
      				<path class="st1" d="M303.3,216.7c-6.2-4.5-10.2-8.2-10.2-8.2c-7.1,3.9-16.9,6.7-26.8,8.5l0,0c-3,0.5-5.9,1-8.8,1.4c0,0,0,0,0,0c-3.1,0.4-6.2,0.7-9.1,1c-19.5,1.7-30,7.2-40.7,17.7s-12.8,29-16.5,42.2s-6.2,32.8-8.7,47.7c-0.2,1.1-0.4,2.2-0.6,3.4c22.6,1.4,41.3-4,56.6-13.1C289,287,303.3,216.7,303.3,216.7L303.3,216.7z" id="i[[item.id]]-45"></path>
      				<path class="st1" d="M340.7,232.1c-13.5,0-28-8.6-37.4-15.4l0,0c0,0-14.3,70.3-64.6,100.4l0,0v18.5c0,0,29.4,8.6,59.4,8.6s43.8-6.2,43.8-6.2l-0.2,0V232.1L340.7,232.1z" id="i[[item.id]]-46"></path>
      				<path class="st1" d="M340.7,232.1c13.5,0,28.9-8.6,38.9-15.4c0,0,16.1,68.8,65.1,98.9l0,0v20.5c0,0-40.6,8-65.1,8c-24.5,0-37.7-6.2-37.7-6.2l-0.2,0V232.1L340.7,232.1z" id="i[[item.id]]-47"></path>
      				<path class="st1" d="M390.6,208.5c0,0-4.3,3.7-11,8.2c0,0,16.1,68.8,65.1,98.9c15.3,9.4,33.8,15,56,13.6c-2.9-15.5-2.7-29.3-12.4-66.5c-9.7-37.1-34.9-40.1-61.2-45.3c-0.3-0.1-0.6-0.1-1-0.2c-2.7-0.5-5.4-1-8.1-1.4C407.4,214,397.7,212.6,390.6,208.5L390.6,208.5z" id="i[[item.id]]-48"></path>
      				<path class="st1" d="M238.7,317.1v18.5l0,0c-0.3,0.3-0.6,0.8-0.8,1.6c-0.9,2.8-17.8,46.3-22.7,59.3c-2.8,7.6-7.8,19-11.7,28.6c-16.6-18-45.1-16.6-45.1-16.6c3.9-12.5,8.6-26.6,11.5-34.5c3.7-10,9.4-29.2,12.2-43.8c0,0,0,0,0,0C204.7,331.7,223.4,326.2,238.7,317.1L238.7,317.1z" id="i[[item.id]]-49"></path>
      				<path class="st1" d="M259,484.7c-0.8-10.6-2.5-24.9-4.2-37.1c0,0,0,0,0,0c-1.3-9.1-2.5-17.1-3.4-21.7c-2.2-12-9.7-47.2-10.5-74.4c-0.2-5.5-0.2-11.6-0.6-14.2c-0.2-1.9-0.9-2.5-1.6-1.8c0,0,29.4,8.6,59.4,8.6s43.8-6.2,43.8-6.2l-0.2,0v155.8l0,0c-49.9,0.2-83-9-83-9L259,484.7z" id="i[[item.id]]-50"></path>
      				<path class="st1" d="M341.9,338c0,0,13.2,6.2,37.7,6.2c24.5,0,65.1-8,65.1-8c-0.3-0.7-0.5-1-0.6-1c-1,0.1-1,18.9-1.8,21.8c-0.7,2.9-0.9,19.8-3.2,30c-0.9,3.8-7.2,40.4-8.5,45.2c-0.4,1.4-1.2,7.8-2.1,15.2c0,0,0,0,0,0c-1.3,10.6-2.7,23.3-3.1,26.1c-0.2,1.8-0.7,6.2-1,11.3l0,0c-30.2,6.6-58.4,8.9-82.6,9l0,0V338L341.9,338z" id="i[[item.id]]-51"></path>
      				<path class="st1" d="M525,408.5c-28.1-4.6-47.2,11.9-47.2,11.9c-4.4-11.3-10.4-27-11.2-28.8c-1-2.4-18.3-48.2-21.9-55.5v-20.5l0,0c15.3,9.4,33.8,15,56,13.6c0.6,3.2,1.3,6.6,2.3,10.2c6.3,23,13.7,42.2,16.3,50.1c2.3,6.9,4.2,13.6,5.8,19.8L525,408.5z" id="i[[item.id]]-52"></path>
      				<path class="st1" d="M144.8,447.3c3-6.7,6.2-14.4,8.9-23.2c0,0,0,0,0,0c0.3-0.9,0.6-1.9,0.8-2.8c1.1-3.8,2.4-8.2,3.8-12.8c0,0,28.5-1.5,45.1,16.6c-2.5,6.1-4.6,11.5-5.4,14.5c0,0,0,0,0,0c-0.1,0.4-0.2,0.7-0.2,1c-1.3,6.7-4.3,21.8-6,27C158.6,472.2,144.8,447.3,144.8,447.3z" id="i[[item.id]]-53"></path>
      				<path class="st1" d="M117,556.9c0.9-3.8,1.6-7.3,2.1-10.4c2.3-15.3,3.2-31.8,6.2-46.5c1.4-6.8,4-14.9,6.9-22.5v0c3.3-8.8,6.8-17,9-21.8c1.2-2.6,2.4-5.3,3.8-8.3c0,0,13.8,24.9,47.1,20.3c-1.5,4.6-3.9,17.7-6.1,25.9l0,0c-0.3,1-0.6,2-0.9,2.9c-2.5,7.7-14.7,39-22.5,55.5c-3,6.3-6.6,13.5-10.2,20.5C152.1,572.5,145.8,555.6,117,556.9L117,556.9z" id="i[[item.id]]-54"></path>
      				<path class="st1" d="M117,556.9c28.8-1.3,35.1,15.6,35.1,15.6c-3.9,7.7-7.8,15.1-10.7,21c0,0,0,0,0,0c-1.4,2.9-2.6,5.5-3.4,7.5c-2.6,6.2-3.1,9.3-3.3,11.8c0,0-20.3-2.2-30.9-17.4c1.8-2.4,4.5-9.1,7.2-17.1c0,0,0,0,0,0C113.2,571.5,115.4,563.8,117,556.9L117,556.9z" id="i[[item.id]]-55"></path>
      				<path class="st1" d="M103.8,595.3c10.7,15.2,30.9,17.4,30.9,17.4c0,0,0,0,0,0c-0.1,1.4-0.1,2.6-0.2,4.1c-0.3,4-1.3,11.5-3,21.2s-1.4,12.4-3.1,21.1c-1.7,8.7-2.3,7.5-3.4,12.1s-2.7,7.3-4.1,11s-3.8,8.9-7,7.6s-1-7.7,0-11.4s1.9-9.8,2.7-13.5s0.8-7,0-7.6s-2.2,2.2-2.9,5.7s-1.8,14.2-2.8,18.8s-2.2,13.1-3.4,16.8s-3.4,7.3-6.4,6.2s-2.1-7.9-1.6-12.2s1.3-15.2,1.5-19.8s0.9-7.1,1-8.9c0.1-1.8-1.2-4.4-2.3-0.9s-3.2,13.3-4,18.6s-2.2,11-3,15.2s-3,9.6-5.3,10.8s-5-0.7-5.2-4.8s0.7-14.5,1.3-18.2c0.7-3.7,2.6-14.5,3.1-17.2s1.2-6.7,1.5-8.1s-1.3-2-1.8-0.4s-2.7,10.6-3.1,14.3s-2.2,10.2-2.9,13.8s-2.8,6-5.3,5.7s-3.4-4.2-3.3-9.1s0.8-14.5,1.5-19.2s2.8-14,3.2-17.7s0.5-6.1,1.9-10.5s4.2-12.3,4-14s-1.2-3.2-3.7-2.1s-5.7,2.9-9.2,5.8s-8.6,4.2-11.2,3.3s-4.2-3.7-1.8-6.4s4.5-4.6,5.2-5.7s5.7-5,10.4-7.2s5.9-4.8,11.8-6.4c3.8-1.1,10-2.9,14.6-4.8c0,0,0,0,0,0C100.9,597.5,103,596.4,103.8,595.3z" id="i[[item.id]]-56"></path>
      				<path class="st1" d="M525,408.5c-28.1-4.6-47.2,11.9-47.2,11.9c2.1,5.4,3.9,9.9,4.6,11.2c0.6,1.3,1.4,3.7,2.2,6.6h0c1.8,6.4,3.8,15,4.3,16.9c0.5,1.9,1.1,4.3,1.7,6.8l0,0c34.8,3.2,47.9-14.6,47.9-14.6l0,0c-1.7-4.1-3.7-9-5.8-13.7c-1-2.2-1.9-4.8-2.8-7.7c-1.5-4.8-2.9-10.5-4.6-16.7L525,408.5z" id="i[[item.id]]-57"></path>
      				<path class="st1" d="M567.6,562.3c-4.8-23.2-8.7-52.1-11-63.9c-1.5-7.8-3.8-15.4-6-21.9c0,0,0,0,0,0c-3.5-10.3-7.1-17.9-8-19.6c-0.8-1.4-2.3-5-4.2-9.6l0,0c0,0-13.1,17.8-47.9,14.6l0,0c0.9,4,1.9,8.3,2.6,11.5c0.7,3.4,1.6,9.4,4.9,20.6c0,0,0,0,0,0c1.7,5.6,3.9,12.6,7.1,21.2c6.9,18.6,16.4,37.6,26.2,57.3l0,0c12.2-15.6,34.3-9.8,34.3-9.8L567.6,562.3z" id="i[[item.id]]-58"></path>
      				<path class="st1" d="M565.7,562.7c0,0-22.1-5.8-34.3,9.8l0,0c3.2,6.5,6.5,13.1,9.7,19.7c0.1,0.2,0.3,0.7,0.5,1.4c0.6,1.8,1.6,5,2.8,8.3c1.2,3.1,2.1,7.9,2.7,12.3c21.9,3.1,37.3-15.5,37.3-15.5c0,0,0,0,0,0c-3.8-1.8-7.4-4.9-10-11.3c-0.8-1.9-1.5-4.1-2.2-6.6c-1.6-5.3-3.1-11.7-4.5-18.5L565.7,562.7z" id="i[[item.id]]-59"></path>
      				<path class="st1" d="M547,614.2c21.9,3.1,37.3-15.5,37.3-15.5c2.4,1.2,4.9,1.9,7.2,2.6c8.3,2.7,13.2,5.4,16,6.8c4.3,2.2,5.9,3.8,10.2,5.7c1.9,0.8,3,4.8,5.2,6.6s5,5.7,2.6,7.7s-9.4,1-13.2-2.5s-10.2-7-11.3-5.2s1,8.5,2.1,12.6s2.8,10.7,4.4,22s2.5,17.3,2.3,25.2s0.5,12.8-3.4,12.8s-5.4-6.6-6.7-13.1s-3.8-21.2-4.8-21.2s2.7,22,3.2,24.8s1.6,12.8,1.5,15.3s-0.6,9.3-3.2,9.2s-6.8-4.2-7.5-10.4s-2.9-18.2-3.7-21.7s-2.3-10.8-2.8-13s-3-2.3-2.8-0.6s1.7,14.4,1.9,17.5s1.4,13.3,1.6,15.6s-0.2,7.6-2.6,9.1s-5.7-2.1-6.8-7.1s-2.8-15.1-3.4-19.1s-1.9-14.2-2.1-16.3s-2.5-6.8-3.3-4.5s0.3,7,0.8,9.8s1.5,8.7,2.3,10.4s2.1,6.5,0.8,9.9s-3.5,2.9-6.4-2.2s-3.3-8.3-5.2-11.3s-0.8-8.2-3.3-14.1s-2.5-13.2-3-17.6s-3.2-17.6-3.2-22.4C547.5,618.5,547.3,616.4,547,614.2C547,614.2,547,614.2,547,614.2z" id="i[[item.id]]-60"></path>
      				<path class="st1" d="M248.4,538.1c14.1,4.4,22.6,15.6,27,29l0,0c0,0,29,10.3,66.4,10.8l0,0v-84.1l0,0c-49.9,0.2-83-9-83-9l0.4,0c0.2,2,0.3,3.9,0.3,5.7c0.8,17.5-3,26-8.8,39.3c-0.9,2-2,4.8-3.4,8L248.4,538.1z" id="i[[item.id]]-61"></path>
      				<path class="st1" d="M405.4,567.1c-21.5,8.5-43.8,11-63.7,10.8l0,0v-84.1l0,0c24.2-0.1,52.4-2.4,82.6-9l0,0c-0.6,8.3-1.1,18.3-0.5,21.2c0.8,3.6,6.6,18,10.9,27.7l-1.2,0.6c-14.7,4.6-23.3,16.6-27.5,30.8L405.4,567.1z" id="i[[item.id]]-62"></path>
      				<path class="st1" d="M248.4,538.1c14.1,4.4,22.6,15.6,27,29c4.8,14.6,4.8,31.8,2.1,45.7c-7.9,40.4-28.5,65.4-63.1,88.1l0.3-1c-0.3-5.7-0.5-11.6-0.5-17.5c0-2.1,0-4.3,0-6.5c0.2-17.1,1.5-39.9,7.2-63.7c3.9-16,11.4-37.5,18.1-55c2.8-7.4,5.5-14.2,7.7-19.5L248.4,538.1z" id="i[[item.id]]-63"></path>
      				<path class="st1" d="M214.7,699.9c55.5,23.7,116.5,0,116.5,0c0.2-1.1,0.7-1.7,1.7-2.2c1.5-0.8,5.2-6.9,6.2-8.8s-0.5-4.2,2.7-4.2V577.9l0,0c-37.3-0.5-66.4-10.8-66.4-10.8l0,0c4.8,14.6,4.8,31.8,2.1,45.7c-7.9,40.4-28.5,65.4-63.1,88.1L214.7,699.9z" id="i[[item.id]]-64"></path>
      				<path class="st1" d="M405.4,567.1c-21.5,8.5-43.8,11-63.7,10.8l0,0v106.8c3.2,0,2.2,2.2,3.1,4.4s5.2,6.8,6.8,9.2c0.2,0.4,0.4,0.7,0.5,1c0,0,45.5,19.6,116.3-1.8l-0.8-0.6c-34.6-22.7-55.2-47.6-63.1-88.1c-2.6-13.3-2.7-29.7,1.6-43.9L405.4,567.1z" id="i[[item.id]]-65"></path>
      				<path class="st1" d="M433.5,534.2c-14.7,4.6-23.3,16.6-27.5,30.8s-4.2,30.6-1.6,43.9c7.9,40.4,28.5,65.4,63.1,88.1l0.8,0.6c0.4-6.8,0.4-13.6,0.2-20.2l0,0c-0.6-18.7-3-36.5-5.2-50.1c-3-18.5-9-41.7-13.7-53.7c-1.5-3.8-2.9-8-4.3-12.1c-3-8.8-5.9-17.7-8.8-23.9c-0.5-1.2-1.1-2.5-1.8-3.9L433.5,534.2z" id="i[[item.id]]-66"></path>
      				<path class="st1" d="M323.1,919.2c0-1.1,0.1-2.1,0.1-3.2l0,0c0.6-15.5,0.9-32.5,0.6-40.3c-0.5-14.8-2.2-56-2.1-67.9s2.6-35,4.2-43.8s5-31.5,5.2-41.6s0-17-0.2-20c-0.1-1.1,0-1.9,0.1-2.5c0,0-60.9,23.7-116.5,0h0c0.7,11.4,1.9,22.1,3.2,30.5c2,12.8,13.2,79.2,16,96.2c2.2,13.4,7.4,52,11.4,76.6c1.1,6.6,2,12.1,2.8,15.9c0,0,30.3-10,75.2,0L323.1,919.2z" id="i[[item.id]]-67"></path>
      				<path class="st1" d="M359.8,919.3c0-1.4-0.1-2.8-0.1-4.2h0c-0.4-13.9-0.8-29.3-0.7-35.1c0.2-9.7,1.7-39.2,2-53s0-44.2-3.2-59.3s-5.7-39.2-6.2-48.7s0.2-13.7,0.3-16.3c0.1-2.2,0.7-2.1,0-3.4c0,0,45.5,19.6,116.3-1.8c-1.5,25.7-7.5,55-9.8,70s-9.5,58-11.5,71.5s-5.5,33.8-6.5,44.7c-0.4,4.4-1.6,12.3-3.1,21c0,0,0,0,0,0c-0.8,4.8-1.6,9.8-2.4,14.6c0,0-38.3-10.7-75.3,0L359.8,919.3z" id="i[[item.id]]-68"></path>
      				<path class="st1" d="M323.2,919.2c-44.9-10-75.2,0-75.2,0c3.7,18,2.7,23.8,4.2,33s0.8,17.5-1.7,33.5c-0.2,1.2-0.4,2.6-0.5,4.2c0,0,30.7,17.7,66.9,0l0.1,0c0-0.5-0.1-1-0.1-1.5l0,0c-0.2-4-0.3-7.9-0.4-11.4c-0.2-11.5,3.5-22.5,4.8-30.3c0.6-3.4,1.2-14.7,1.7-27.5L323.2,919.2z" id="i[[item.id]]-69"></path>
      				<path class="st1" d="M432.8,988.1C432.8,988.1,432.8,988.1,432.8,988.1c-0.7-4.9-1.5-9.5-2.1-13.5c-1.5-10.3-0.3-21.2,1.2-34.3c0.6-5,1.8-12.7,3.2-21.1c0,0-38.3-10.7-75.3,0l0.1,0c0.3,7.8,0.6,14.8,0.9,18.7c0.8,11.5,5.8,24.2,5.8,40.7c0,3.6-0.1,7-0.3,10.2c0,0,35.1,14.8,66.5,0V988.1z" id="i[[item.id]]-70"></path>
      				<path class="st1" d="M316.9,989.8c-36.2,17.7-66.9,0-66.9,0c-1.6,18.6,0.5,58.3,0.5,68.5c0,11,3.2,52.8,8,69.7c2.1,7.2,4.5,18.6,6.9,30.3c0,0,0,0,0,0c0.8,4.1,1.6,8.3,2.4,12.3l0,0c0,0,22.1-9.6,45.7,0c0.5-4.7,1-9.6,1.5-14.4c0,0,0,0,0,0c1-9.1,1.9-17.9,2.4-23.8c1.3-15.8,6.3-57.7,7-66.8s-0.2-34.5-3.5-48C318.7,1008.6,317.6,998.8,316.9,989.8L316.9,989.8z" id="i[[item.id]]-71"></path>
      				<path class="st1" d="M432.8,988.9c-31.4,14.8-66.5,0-66.5,0c-0.6,11.6-2.3,21.9-5.4,37.1c-4,19.5-2.2,39.5-0.2,53.8s3,38.5,6.2,63.5c0.5,4.1,1,8.1,1.4,11.9c0,0,0,0,0,0c0.6,5.4,1.2,10.5,1.6,15.4l0,0c0,0,18.5-9.6,44.9,0c0.8-3.5,1.6-7.1,2.5-10.9l0,0c3.6-15.6,7.6-32.3,9.8-44.5c4-22.7,5.5-50.7,5.5-59.2s2.2-28.3,2.3-42.3c0.1-8.7-0.9-17.6-2.1-25.5V988.9z" id="i[[item.id]]-72"></path>
      				<path class="st1" d="M316.3,1221.2c-0.4-1.4-0.9-2.9-1.3-4.4c-1.9-6.8-2.5-13.6-3-23c-0.2-4,0.5-13,1.5-23.3c-23.6-9.6-45.7,0-45.7,0l0,0c2.2,11.3,4,21.7,5.1,27.3c1.2,6.5,1.9,15.2,2.2,22.9h0c0,0,19.3,7.7,42.7,0L316.3,1221.2z" id="i[[item.id]]-73"></path>
      				<path class="st1" d="M365.5,1220.8c21,8,42.4,0,42.4,0c0.4-6.9,1.2-16.8,2.5-27.3c0.7-5.7,2.4-13.8,4.4-22.9c-26.4-9.6-44.9,0-44.9,0l0,0c1.1,12.2,1.5,22.7,1,32.3c-0.3,6.4-2.3,12.4-4.2,18.3L365.5,1220.8z" id="i[[item.id]]-74"></path>
      				<path class="st1" d="M317.7,1220.8c-23.4,7.7-42.7,0-42.7,0h0c0.3,8.1,0.2,15-0.1,17.1c-0.1,1-0.4,1.7-0.7,2.1c-0.9,1.3-2.5,0.7-4.4,2.4c-1.3,1.2-1.6,2.6-3.8,2.7s-4.7,2.2-5.5,3.8s-2.8,0.2-4.9,1.4c-2.2,1.2-3,3.7-2.4,6.2s2.3,3.2,2.4,4.9c0.1,1.7,1,4.2,3.8,7.8s9.2,7.2,12.9,14.6c1.1,2.1,2.4,4.2,4.1,6.1c0-0.1,0-0.3,0-0.5c0,0.1,0,0.3,0,0.4c0.5,0.6,1,1.1,1.6,1.6c4,3.7,9.4,6.4,16,6.8c10.6,0.8,16.1-6.1,18.5-12.9c0.2-0.6,0.4-1.2,0.6-1.8c1.7-5.9,1-11.1,2.1-18.4c1.1-8-0.1-13.1-0.5-16.6s1.9-5.1,3.4-12.1c1.2-5.4-0.2-10.2-1.7-15.2L317.7,1220.8z" id="i[[item.id]]-75"></path>
      				<path class="st1" d="M365.5,1220.8c21,8,42.4,0,42.4,0c-0.2,4.3-0.3,7.4-0.1,8.7c0.3,3.3-0.2,9,1.3,10.7c0.1,0.1,0.2,0.2,0.4,0.4c1.4,1.4,3.2,2,4.1,3.6c0.9,1.8,3,0.1,4.9,1.1s3,2.2,3.2,2.9c0.2,0.7,3.2,0.7,4.2,1.4c1.1,0.8,3.4,2.2,2.9,5.6s-2.5,3.3-2.5,5.3s0.8,3.5-2.5,7.1s-11.4,12.2-12.8,14.9c-0.6,1.3-1.8,3.6-3.4,5.9c0,0,0,0,0,0c-0.6,0.8-1.2,1.6-1.9,2.4c0,0,0,0,0,0c-1.4,1.5-3.1,2.9-5.1,3.9c-5.8,2.8-19.6,5.8-25.8-1.1c-2.5-2.7-3.9-5.9-4.8-8.9c-1.3-4.7-1.2-9.3-1.3-12.3c-0.2-5-2.4-14.6-1.4-19.1s0.8-7.6-0.6-11.5s-3.3-9.4-1.2-16.7c0.4-1.3,0.8-2.6,1.2-3.9L365.5,1220.8z" id="i[[item.id]]-76"></path>
      				<path class="st2" d="M331.2,595.9c11.3,6.5,10.7,15.8,10.7,15.8h0c0,0-0.6-9.3,10.7-15.8"></path>
      			</svg>
      			<svg class="male-svg i[[item.id]]-male-svg" height="680" ng-if="gender === 'male'" version="1.1" viewbox="0 0 800 1360" width="400px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg">
      				<path class="st1" d="M396.3,31.7c-26.3,0-56.3,30.8-55.8,50.7c0.1,3.1,0.4,8.8,0.8,14.8l-0.2,0c0,0,24.2,4.2,56.6,4.4l0,0V32L396.3,31.7z" id="i[[item.id]]-39"></path>
      				<path class="st1" d="M397.6,32v69.6l0,0c17.2,0.1,36.7-1,56.1-4.4l0.6,0.1c0.5-4.9,0.9-9.1,1.1-12.3c1.3-20.9-27.9-53.3-59-53.3L397.6,32z" id="i[[item.id]]-40"></path>
      				<path class="st1" d="M397.6,101.5c-30.6-0.2-53.8-3.9-56.3-4.3c0.6,8.9,1.3,18.2,1.5,20.1c0.1,0.8,0.6,4.6,1.3,10l-0.1,0c-1-1.8-5.2-5.8-9.2-1.8s-1.8,17-0.8,20.7s5.8,14.7,7.2,15.8c1.4,1.1,4.2,4.8,7.5-1.7l0.4-0.1c0.3,1.7,0.6,3.3,0.8,4.8c0,0,0,0,0,0c1.2,6.7,2.2,11.6,2.8,12.4c0.6,0.8,1.3,6.1,1.6,12c0,0,0,0,0,0c0.1,0.3,0.1,0.5,0.2,0.8c0,0,0,0,0,0c2.8,1.4,19,9.1,43.1,9L397.6,101.5L397.6,101.5z" id="i[[item.id]]-41"></path>
      				<path class="st1" d="M453.7,97.2c-19.4,3.4-38.9,4.5-56.1,4.4l0,0v97.7l0,0c12.9-0.1,28-2.4,44.5-9.2l0.1,0.3c0.3-7.6,0.9-15.4,1.6-17.2c0.2-0.7,0.7-3.4,1.4-7.6c0.2-1.5,0.5-3.1,0.8-4.9l0,0c3.8,6.2,8.9,3,10-2c1.1-5,7.7-7.9,6.9-23.6s-9.1-11.7-12.1-7.3l-0.2,0c1.4-10.8,2.8-21.7,3.7-30.6L453.7,97.2z" id="i[[item.id]]-42"></path>
      				<path class="st1" d="M354.4,190.2c0.3,7.6,0.2,16-1.1,17.6c-1.4,1.8-3.3,3.6-5.5,5.4c0,0,4.8,4,11.9,8.7c10.1,6.7,24.8,14.8,37.4,14.8h0.6v-37.5l0,0C373.1,199.4,356.7,191.4,354.4,190.2z" id="i[[item.id]]-43"></path>
      				<path class="st1" d="M397.6,236.7v-37.5l0,0c12.9-0.1,28-2.4,44.5-9.2l0.1,0.3c-0.3,7.6-0.4,15,0.1,16c0.3,0.7,3.1,3.3,7.6,6.8l0,0c-3.8,2.6-7.4,5-10.8,7.1c-22.6,13.8-36.3,16.4-42.2,16.4L397.6,236.7z" id="i[[item.id]]-44"></path>
      				<path class="st1" d="M210.1,349.1C341,369.4,359.6,222,359.6,222l0,0c-7.1-4.7-11.9-8.7-11.9-8.7l0,0c-10.1,8-27.9,15.8-41.8,21.1l-0.4,0.5c-7.8,3-14.4,5.1-17.8,6c-8,2.1-40.3,9.1-51.5,18.8c-16.6,14.4-25,33.7-26.5,60.4c-0.6,10.8-0.2,21.1,0,29L210.1,349.1z" id="i[[item.id]]-45"></path>
      				<path class="st1" d="M397.6,236.7v122.5c-73.5,0.1-128.9-13.1-128.9-13.1l0,0c78.2-23.5,90.9-124.1,90.9-124.1l0,0c10.1,6.7,24.8,14.8,37.4,14.8L397.6,236.7z" id="i[[item.id]]-46"></path>
      				<path class="st1" d="M527.2,343c-44.5,12.1-89.7,16.1-129.6,16.2c0,0,0-122.5,0-122.5l-0.6,0c5.9,0,19.6-2.6,42.2-16.4l0,0c0,0,0,95.5,87.3,122.1L527.2,343z" id="i[[item.id]]-47"></path>
      				<path class="st1" d="M585.2,350c0.2-19.5,4.6-48.9-11.8-75.6c-16.4-26.7-56-30.6-82.9-39.7c-17.5-5.9-32.1-15.2-40.5-21.6l0,0c-3.8,2.6-7.4,5-10.8,7.1l0,0c0,0,0,134.1,145.3,128.8L585.2,350z" id="i[[item.id]]-48"></path>
      				<path class="st1" d="M247.6,449.1c0.5-1,1-1.9,1.4-2.8c3.4-6.7,15.8-33.2,16.6-35.9c0.8-2.8,2-4.7,3.1-4.7v-59.6l0,0c-16.5,5-35.9,6.5-58.7,3l-0.5,0c0,1.5,0,2.9,0,4.2c-6.6,10.3-17.6,32.5-19.3,42.4c-1.4,8.3-3.5,16.4-5.8,23.1l0,0c49.4,0.3,62.5,30.2,62.5,30.2" id="i[[item.id]]-49"></path>
      				<path class="st1" d="M397.6,531V359.2c-73.5,0.1-128.9-13.1-128.9-13.1v59.6c1.1,0,1.4,3.4,1.8,5.9c0.4,2.5,4.1,16.1,8.9,22.1c4.8,6,8.9,24.1,12.7,31.3c0,0,0,0,0,0c3.8,7.2,6.2,18.3,8.2,36.3c0.9,8,0.5,15-0.2,20.8l0,0C300.1,522.1,340.2,531.6,397.6,531L397.6,531z" id="i[[item.id]]-50"></path>
      				<path class="st1" d="M397.6,531V359.2c39.9-0.1,85-4,129.6-16.2v62.2c-1.1,0.1-2.4,6.3-3.2,9.1c-0.8,2.9-6.2,16.9-8.3,20.3c-2.1,3.4-3.2,7.4-4.6,12.2c-1,3.4-4.7,12-7.2,17.5l0,0c-1,2.3-1.9,4-2.3,4.7c-1.3,2.1-3.5,11.6-4.2,16.2c-0.6,4.7-3.2,27.4-2.2,32.1c0.1,0.5,0.2,1.2,0.4,2.1C460.5,527.6,426.8,530.6,397.6,531L397.6,531z" id="i[[item.id]]-51"></path>
      				<path class="st1" d="M612.8,425.4c-49.4,0.3-61.5,30.2-61.5,30.2l0-0.3c-5.1-10.9-19.2-42.2-20.2-44.5c-1.2-2.6-2.7-5.5-3.8-5.5l0,0V343l-0.7-0.7c16.2,4.9,35.3,7.5,58,6.7l0.7,1c0,0,0,0,0,0c7,11.1,17.1,32.2,20.7,50.1c3.1,15.2,5.8,20.4,7.7,27.7L612.8,425.4z" id="i[[item.id]]-52"></path>
      				<path class="st1" d="M247.1,448.8c0,0-13.1-29.8-62.5-30.2c0,0,0,0.1-0.1,0.1c-0.4,1.2-0.8,2.3-1.2,3.5v0.1c-2.6,7.5-1.7,14.7-6.2,22.6s-0.7,6.3-9.3,19.3c-0.9,1.3-1.8,3-2.7,5l-0.2-0.1c0,0,0,0.1,0,0.1c25.5,28.9,69.7,28.7,69.7,28.7l0,0c1.1-5.3,1.7-9.1,1.8-10.3c0.5-4.2,0.8-7.1,1.4-9c0.6-1.9,2.1-9.5,2.2-12.7c0.1-2.3,2.9-8.2,5.8-13.7c0,0,0,0,0,0c0.5-1.1,1.1-2.2,1.6-3.2L247.1,448.8z" id="i[[item.id]]-53"></path>
      				<path class="st1" d="M165.2,469.4c-0.1,0.2-0.2,0.4-0.3,0.6c-0.1,0.6-0.4,1.2-0.7,1.7c-2.9,6.9-6,16.4-8.7,26.7c-1.2,4.4-2.3,9-3.4,13.5c-3,12.6-5.3,25-6.4,33.9c-1.4,11-4.4,25.3-7.2,37.4c0,0,22.5,2,44.5,19.7c9.3-14.1,21.3-30.2,31.2-48.5c5.5-10.1,11-21.9,14.6-32.8c1.6-4.9,2.9-9.9,4.1-14.9c0.8-3.3,1.5-6.3,2-8.9C234.7,497.9,190.7,498.2,165.2,469.4z" id="i[[item.id]]-54"></path>
      				<path class="st1" d="M164.1,650.3l0-0.2c-1-3.9-1.2-7.7,6.7-26c1.4-3.3,3.2-6.7,5.3-10.3l0,0c2-3.4,4.3-7,6.8-10.8h0c-22-17.7-44.5-19.7-44.5-19.7c-1.5,6.3-2.9,12.1-4,16.6c0,0,0,0,0,0c-1.2,4.7-2,7.9-2.1,8.8c-0.6,3.4-4,9.8-5.9,17.6c-0.4,1.6-2.7,3.4-5.2,4.3l0.6-0.7c0,0,17.1,19.4,42,21.3L164.1,650.3z" id="i[[item.id]]-55"></path>
      				<path class="st1" d="M163.8,651.2c-24.9-1.9-42-21.3-42-21.3l-0.6,0.7c0,0,0,0,0,0c-3,1.1-13.5,6.7-17,8.2c-3.5,1.4-5.5,6.3-9.7,8.7c-4.1,2.4-7.9,5.8-8.6,8.5c-0.6,2.7-5.2,4.2-5.2,7.1c0,2.9,1.9,5.1,6.5,5.8c4.6,0.6,12-7.7,13.4-9.1s2.4,0.5,1.7,2.2c-0.6,1.8-5.4,14.4-6.5,19.1c-1.1,4.7-3.6,16.4-4.3,20.2c-0.6,3.9-2.9,20.2-3.2,23.1c-0.3,2.9-3.2,14.4,1.1,17.6c4.3,3.2,7.4-2.2,9.3-7.4s1.4-11.4,2.5-14c1.1-2.6,4.1-18.3,6-21.7c1.9-3.4,2.7,1.1,1.6,4c-1.1,2.9-3.6,15.6-3.6,17.6s-1.7,13.5-2.4,17.3c-0.6,3.9-1.3,13.5,0,17.5c1.3,4,6.8,1.6,8.6-0.5c1.7-2.1,3.5-10.7,4.3-15.9c0.8-5.1,1-13.6,2.4-19.3c1.5-5.6,3.5-15.7,5.2-18.5c1.7-2.7,3.6,0.3,3.2,2.4c-0.5,2.1-2.2,9.1-3.8,15.7s-1.4,14-2.9,20.5s-3,11.9,0,15.2c3,3.4,6.2,0.8,8.1-1.6c1.9-2.4,4.1-12.8,5.4-21c1.3-8.2,4.4-20.4,5.5-24.2c1.1-3.9,3.3-7.5,5.1-7.2c1.7,0.3-0.2,5.8-1,8.8s-4.8,19.9-4.9,25.3c-0.2,5.5,2.4,7.5,5.4,6.3c3-1.3,4.1-5.8,4.8-8.5c0.6-2.7,2.5-8.3,3-11.6s4-15.6,5.9-19.6c1.9-4,2.7-9,6.3-26.3c3.7-17.3,1.4-21.5,0.5-25.3L163.8,651.2z" id="i[[item.id]]-56"></path>
      				<path class="st1" d="M632.4,473.6L632.4,473.6c-3.7-8.3-7.1-14.8-7.9-16c-1.7-2.6-7.9-15.9-9.9-25.7c-0.3-1.5-0.6-2.8-0.9-4.1v0l-0.9-2.4c-47.5,0.3-60.5,27.9-61.4,30c0.7,1.6,1.3,2.7,1.5,3.2c2.2,4.1,2.2,4.6,2.1,7.5s2.7,13.7,3.9,18.8c0.7,3,0.6,8.4,2.2,17.7l0.4-0.1C561.4,502.5,606.9,502.7,632.4,473.6C632.4,473.6,632.4,473.6,632.4,473.6z" id="i[[item.id]]-57"></path>
      				<path class="st1" d="M643.8,509.2c-0.2-1.3-0.4-2.6-0.6-3.7c-1.4-9.1-6.2-21.3-10.5-31.2c-0.1-0.2-0.3-0.5-0.4-0.7c-25.5,29.1-70.9,28.9-70.9,28.9l-0.4,0.1c0.9,5.2,2.4,11.7,5,19.7c0,0,0,0,0,0c0.4,1.3,0.9,2.7,1.4,4.2c8.6,25,28.8,53.2,43.7,76.5c0,0,10.6-17.8,44.8-19.7C653.1,567.9,646.8,528.2,643.8,509.2z" id="i[[item.id]]-58"></path>
      				<path class="st1" d="M669.1,627.7c-1.6-2.5-2.1-7.4-3-10.3c-0.7-2.2-2.9-7.5-5.3-14.7h0.5c-1.9-5.6-3.9-12.3-5.2-19.5c-34.2,1.9-44.8,19.7-44.8,19.7c2.8,4.5,5.3,8.5,7.3,12.2v0c8.7,15.6,11,24.4,11.9,28.1l0.4,0.1c22.9-3.9,37.5-16.4,37.5-16.4L669.1,627.7z" id="i[[item.id]]-59"></path>
      				<path class="st1" d="M668.3,626.9c0,0-14.6,12.5-37.5,16.4l-0.4-0.1c0.5,2,0.6,3.4,0.4,4.7c0,0,0,0,0,0c-0.2,1.6-0.8,3-1.7,5.1c-1.6,3.9-0.6,15.6,0.3,18.8c1,3.2,4,21.5,5.6,25c1.6,3.5,2.9,7.9,3.5,10.1c0.6,2.2,7.4,30.8,9.8,33c2.4,2.2,5.4,1.8,6.7-0.5s0.5-7.2,0-10.4s-1.6-9.5-1.9-12c-0.3-2.6-2.2-10.1-3.2-13.6c-1-3.5,1.3-3.5,2.9-1.4c1.6,2.1,3.2,8.3,4,11.4c0.8,3,3.4,15.6,4.2,19.9c0.8,4.3,2.7,17,5.6,20.1c2.9,3,5.4,3.2,7.8,1c2.4-2.2,1.1-7.1,0.8-9.8c-0.3-2.7-2.4-18.4-2.7-22.1s-3.7-13.8-4.5-19.7s2.6-1.8,2.9-0.5c0.3,1.3,4,14.3,4.5,17.6c0.5,3.4,2.9,15.1,3.4,21.8c0.5,6.7,3.5,12.5,4.6,14c1.1,1.4,5.8,2.1,7.2,0c1.4-2.1,1.1-5.5,1-9c-0.2-3.5-1.4-21.3-1.4-24.7c0-3.4-4.3-19.1-4.8-22.6s1.3-1.8,1.9-0.2c0.6,1.6,4.8,18.4,5.6,22s1.1,7.1,1.8,11.6c0.6,4.5,3.7,8.7,6.1,9.9s5.3-1.1,6.2-3.7c1-2.6-1.4-14.6-1.8-22.5c-0.3-7.9-1.4-10.9-2.1-13.5c-0.6-2.6-2.9-17.5-3.7-21.7c-0.8-4.2-6.4-18.3-7.4-21c-1-2.7,4,0.5,5.4,2.7c1.4,2.2,7.2,5.3,10.1,5.1c2.9-0.2,5.4-1.6,5.8-5.1c0.3-3.5-3.7-4.3-5.6-9.5c-1.4-3.7-7.7-7.4-9.9-8.3c-2.2-1-7.6-7.8-12.2-9.7c-4-1.7-9.4-4.8-12.9-5.9c0,0,0,0,0,0c-0.5-0.2-1-0.3-1.5-0.4c-0.8-0.1-1.5-0.7-2-1.5L668.3,626.9z" id="i[[item.id]]-60"></path>
      				<path class="st1" d="M397.6,530.9c-57.4,0.7-97.5-8.8-97.5-8.8l0,0c-0.9,7.2-2.4,12.5-2.9,15.6c-1,5.5-0.2,23,1.2,27c1.4,3.8,3.5,8.7-0.4,15.2c0,0,0,0,0,0c-0.2,0.3-0.4,0.6-0.6,0.9c-1.6,2.4-3.1,7.1-4.6,13l0,0c11.8,1.7,20.9,7.3,27.7,15.2l0,0c25.2,6.3,51.4,10.9,77.1,11.2l0,0L397.6,530.9L397.6,530.9z" id="i[[item.id]]-61"></path>
      				<path class="st1" d="M501.3,587.1c-0.9-2.5-1.7-4.6-2.4-6.3c-0.2-0.5-0.4-0.9-0.5-1.3c0,0,0,0,0,0c-0.5-1.2-0.9-2.1-1-2.5c-0.8-2.2-1.1-5.9-0.3-7.9c0.8-1.9,2.6-12.4,2.7-18.3c0.1-5.3-2.8-24.1-4.1-31.4c-35.1,8.2-68.8,11.2-98,11.5l0,0v89.2l0,0c26.5,0.3,52.4-4.1,76.1-16.2v0c6.2-8.4,14.9-14.5,26.7-16.9H501.3z" id="i[[item.id]]-62"></path>
      				<path class="st1" d="M271.6,732.7c0,0,61.1-10.3,64.8-64.2c2.2-33-9.8-69.9-43.5-74.7l0,0c-3.9,15.8-6.8,40-6.5,48.6c0.5,11.8-2.4,23.1-3.8,31.3c0,0,0,0,0,0c-1.4,8.2-7.9,41.4-9.4,52c-0.4,2.7-0.7,4.9-1.1,7.2L271.6,732.7z" id="i[[item.id]]-63"></path>
      				<path class="st1" d="M386,740.3c0,0-36.4,16.7-114.4-7.6c0,0,61.1-10.3,64.8-64.2c1.5-21.5-3.1-44.6-15.8-59.5l0,0c25.2,6.3,51.4,10.9,77.1,11.2l0,0v94l0,0.5c-2.3,0-3.2,0.5-4.2,3.1c-1,2.6-4.8,8.4-7.4,11.2c-0.3,2.6-0.3,6.4,0,10.2L386,740.3z" id="i[[item.id]]-64"></path>
      				<path class="st1" d="M521.5,726c0,0-56.7-10.3-59.9-64.1c-2-33,7.1-68.1,39.7-74.8l0,0c2.2,6.2,4.7,14.8,5.8,24.2c2.1,17.6,1.4,35,2.6,41.1c0.6,3.4,2.4,12.7,3.9,20.9c1.1,6.2,2.1,11.8,2.4,13.5c0.5,3.9,3.4,18.8,4.6,24.7c0.6,2.6,1.4,8.3,2.2,14.4L521.5,726z" id="i[[item.id]]-65"></path>
      				<path class="st1" d="M474.5,604c-11,14.8-14.3,36.7-13,57.8c3.3,53.9,59.9,64.1,59.9,64.1s-41.6,30.2-112.7,14.3c0.4-5.7,0.5-8.5,0-11.9c-3.4-2.7-6.5-9.2-7-10.9c-0.5-1.7-1.8-2.8-4.1-2.8l0-0.5v-94l0,0c26.5,0.3,52.4-4.1,76.1-16.2L474.5,604z" id="i[[item.id]]-66"></path>
      				<path class="st1" d="M386,740.3c0,0-36.4,16.7-114.4-7.6l0.5,0.1c-1.2,6.9-2.8,14.6-5.8,37.8c-4.1,31-1.2,73.2,2.6,90c3.8,16.8,12.2,34.9,14.6,47.4c0.5,2.7,0.9,5.6,1.3,8.8l-0.9,0.1c0,0,41.7-14.1,85.2,0l0.6,0.1c1.9-11.3,5.3-40.7,7.1-52c2.1-13,9.1-59,10.1-75.7c1-16.7,1-33.7,0.2-39.5c-0.4-2.9-0.8-6.8-1-10.7L386,740.3z" id="i[[item.id]]-67"></path>
      				<path class="st1" d="M521.5,726c0,0-41.6,30.2-112.7,14.3c-0.3,3.7-0.7,8.6-1.1,15.6c-1.2,17.8,3.1,70.5,6.2,83.5s6.7,36.6,8.4,54.1c1,10.3,3,20.9,5,29.6l-0.1,0c43.5-14.1,82.2,0,82.2,0l0.4,0c0.5-4.7,1-8.7,1.4-11.9c0,0,0,0,0,0c0.9-5.7,1.6-9.3,1.9-10.4c0.7-2.9,10.3-27,13-39.7s4.1-41.5,5-55.9s-4.3-52-5.6-59.4c-0.7-4.1-1.8-12.5-2.8-20.1L521.5,726z" id="i[[item.id]]-68"></path>
      				<path class="st1" d="M283.9,916.9c0,0,41.7-14.1,85.2,0l0.6,0.1c-0.3,1.8-0.6,3.1-0.8,3.8c0,0,0,0,0,0c-1.6,5.6-6.4,18.4-7.2,29c-0.8,10.6-1.6,23.1-3.8,27.8c-2.2,4.7-4,10.1-2.9,15.4c0,0,0,0,0,0c0.2,0.9,0.4,2.3,0.7,3.9l-0.2,0c-39.6,18.5-69.2,0-69.2,0l0.4,0c0.9-11.6,1.4-25.3,0.8-37.5c-0.8-16.1-1.4-31-2.8-42.7L283.9,916.9z" id="i[[item.id]]-69"></path>
      				<path class="st1" d="M438.4,1003.3c0.4-3.2,0.7-5.7,0.8-7c0.3-1.8,0.4-3.4,0.5-4.9l0,0c0.2-5.7-0.9-9.8-3.3-14.6c-3.1-6-2.6-30.6-5.3-39c-1-3.2-2.3-7.7-3.5-13.1c-0.1-0.5-0.3-1.1-0.4-1.6l-0.1,0c43.5-14.1,82.2,0,82.2,0l0.4,0c-0.7,7.7-1.3,17.2-1.4,28.4c-0.1,16.2,0.6,31.6,1.6,45c0,0,0,0,0,0c0.2,2.2,0.3,4.4,0.5,6.5l-0.5,0c0,0-32.6,18.5-72.2,0L438.4,1003.3z" id="i[[item.id]]-70"></path>
      				<path class="st1" d="M345.4,1166.8c0.2-1.4,0.4-2.8,0.5-4.2c1.5-11.7,2.8-24.2,3-30.4c0.3-10.9,8-23.1,12.3-35.9s0.5-44.9-1.1-63.1c-1.3-14.9-3.2-28.9-4.4-36.4l-0.2,0c-39.6,18.5-69.2,0-69.2,0l0.4,0c-0.1,1.1-0.2,2.3-0.3,3.4v0c-0.5,6.5-1.2,12.2-1.8,16.4c-1.7,12.3-4.8,44.3-2.4,57.8c2.4,13.5,8.4,67.9,8.6,88.3c0,1.3,0,2.7,0.1,4l1,0c0,0,24-7,52.3-0.2L345.4,1166.8z" id="i[[item.id]]-71"></path>
      				<path class="st1" d="M437.7,1003.2c39.6,18.5,72.2,0,72.2,0l0.5,0c0.7,8.7,1.5,16.4,2.2,22.6c1.9,16.8,1.7,33.7-1,59.9c-2.6,26.2-6.5,58.7-7.2,71.2c-0.1,2.6-0.3,5.6-0.4,8.7h0c-0.1,1.4-0.1,2.9-0.2,4.4l-0.1,0c0,0-26-7-54.3-0.2l0.5-0.1c-0.1-0.9-0.3-1.8-0.4-2.7c0,0,0,0,0,0c-1.9-13.7-3.5-26.7-3.7-29.8c-0.2-6-1-17.1-3.8-20.9c-2.9-3.9-10.6-19.7-10.1-38.5c0.4-15.8,4.4-57.1,6.4-74.6L437.7,1003.2z" id="i[[item.id]]-72"></path>
      				<path class="st1" d="M344.3,1166.7c-28.2-6.8-52.3,0.2-52.3,0.2l-1,0c0.6,20.1,3.9,45.9,4,51.9c0.1,3.3-0.3,10.2-0.6,16.3l-0.6,0c0,0,19.7,7.1,49.4,0l0.4-0.1c-1.3-5.9-4-14.8-5-19.7c-1.3-6.7,2.1-18.4,4-30.2c0.7-4.3,1.6-10.9,2.6-18.3L344.3,1166.7z" id="i[[item.id]]-73"></path>
      				<path class="st1" d="M500.3,1238.2c0-3,0-6.2,0-9.1c0-8.7,1.2-23.3,2.2-30.8c0.7-5.2,1-17.2,1.4-28.3l-0.1,0c0,0-26-7-54.3-0.2l0.5-0.1c1.8,12.4,3.8,24.8,5.1,30.4c2.9,12,1,17.2-1.8,25.7c-1.5,4.8-2.1,8.6-2,12.4l0.2,0c29.7,7.1,49.4,0,49.4,0L500.3,1238.2z" id="i[[item.id]]-74"></path>
      				<path class="st1" d="M293.9,1235.1c0,0,19.7,7.1,49.4,0l0.4-0.1c0.5,2.1,0.7,3.8,0.6,4.8c-0.3,3.7-3.5,17.6-2.1,30c0.8,6.7,1.8,13.8,2,19.7c0.1,4.9-0.3,9.1-2,11.5c-3.7,5.5-12,9.3-22.1,6.9c-10.1-2.4-20-9.2-22.2-11.2c0,0,0,0,0,0c-2.2-2.1-2.2-3.8-13.9-6.6s-17.3-7.5-18.1-11.7c-0.8-4.2-2.6-6.6-1.6-8.8c1-2.2,3.4-5,5-5.1s2.6-0.9,2.8-1.9c0.1-1,3.7-4.1,5.6-4c1.9,0.1,2-0.5,2.2-1.1c0.1-0.6,4.9-5.4,6.5-4.9c1.6,0.5,3.6,1.1,3.8-0.1s1.9-2.5,3-2.5c1.1,0,1.1-1.8,0.8-3.6c-0.1-0.9,0.1-5.7,0.4-11.3L293.9,1235.1z" id="i[[item.id]]-75"></path>
      				<path class="st1" d="M501,1238.2c0,0-19.7,7.1-49.4,0l-0.2,0c0,2.8,0.3,5.6,0.8,8.8c1,7.4,0.6,16.8,0.5,23.6c-0.1,3.9-2,10.9-2.5,17.4v-0.3c-0.4,4.7,0,9.1,2.4,12c6.4,7.7,13,10,25.9,7c9.1-2.2,15.3-6.9,18.9-10.1v-0.2c0.5-0.5,1-0.9,1.4-1.3c0.8-0.7,1.3-1.3,1.7-1.6c2.1-1.8,15.4-5.5,20.6-7.2c5.3-1.8,7-6.9,7.4-9.8c0.3-2.9,0.5-2.6,1.8-5.6c1.3-3-5-7.2-5.8-7.2s-1.9,0-1.9-1.4c0-1.4-3.5-4.2-5-4.2s-2.9-1-3.4-2.4c-0.5-1.4-6.4-3.7-8.5-3.4c-2,0.3-1.6-0.5-3.4-1.9l0,0c-0.1-0.1-0.2-0.1-0.3-0.2c-1.4-1-1.6-6-1.6-11.8L501,1238.2z" id="i[[item.id]]-76"></path>
      				<path class="st1" d="M386.9,632.9c11.3,6.5,10.7,15.8,10.7,15.8h0c0,0-0.6-9.3,10.7-15.8"></path>
      			</svg>

      			<div class="mark" ng-class="{'active': activeMark === 'back-' + (markIndex + 1)}" ng-repeat="(markIndex, mark) in reportBack" ng-style="{'top': mark.y + 'px', 'left': mark.x + 'px'}">
      				<div class="mark-icon" ng-click="activateMark('back-' + (markIndex + 1))" ng-style="{'width': (mark.size - 1) / 2 + 6 + 'px', 'height': (mark.size - 1) / 2 + 6 + 'px', 'background-color': getBgColor(mark.intensity)}">
      				</div>
      				<div class="mark-content">
      					<div class="mark-name">[[mark.area]]</div>
      					<div class="mark-hide" ng-click="hideMark()"><img alt="hide" src="/bundles/concertopanel/files/starter-content/hide.png" /></div>
      					<div class="mark-delete" ng-click="deleteMark(markIndex, 'back')"><img alt="delete" src="/bundles/concertopanel/files/starter-content/delete.png" /></div>
      					<div class="mark-handle"></div>
      					<label>Area size</label>
      					<input class="mark-range mark-size" max="100" min="1" ng-model="mark.size" step="1" type="range" />
      					<label>Pain intensity</label>
      					<input class="mark-range mark-intensity" max="100" min="1" ng-model="mark.intensity" step="1" type="range" />
      					<textarea ng-model="mark.description" placeholder="Description" rows="6"></textarea>
      				</div>
      			</div>
      		</div>
      	</div>
      </div>
    groups: ''
    starterContent: true
    hash: 6bcbf576402afe775c2286da2d7cfdc41acbe026
  -
    class_name: ViewTemplate
    id: 9
    name: itemOptions
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      .question-choices {
        margin: 4px -4px 8px;
        display: flex;
        justify-content: center;
      }

      .question-choices.vertical {
        flex-direction: column;
      }

      .question-choices.vertical .question-choice {
        flex-basis: auto;
      }

      .question-choice {
        background-color: var(--option-bg);
        text-align: center;
        padding: 8px;
        margin: 0 4px 8px;
        cursor: pointer;
        border: 3px solid var(--option-bg);
        display: flex;
        flex-grow: 1;
        flex-basis: 0;
        justify-content: center;
        align-items: center;
        font-size: 14px;
      }

      .question-choice:hover {
        background-color: var(--option-hover-bg);
        border: 3px solid var(--option-hover-bg);
      }

      .question-choice.selected {
        border: 3px solid var(--accent-light-color);
      }

      .question-choice.unselected {
        background-color: var(--option-unselected-bg);
        color: var(--error-color);
        border: 3px solid var(--option-unselected-bg);
      }

      .question-choice img, .question-text img {
        max-width: 100%;
        display: block;
      }

      @media screen and (max-width: 500px) {
        .question-choice {
          padding: 2px;
          font-size: 12px;
        }

        .question-choices.vertical-mobile {
          flex-direction: column;
        }

        .question-choices.vertical-mobile .question-choice {
          flex-basis: auto;
        }
      }
    js: |
      testRunner.compileProvider.component('itemOptions', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/itemOptions/content?css=1,html=1",
        bindings: {
          item: '=',
          response: '=',
          responseRequired: "<"
        },
        controller: function controller($scope) {
          $scope.item = this.item;
          $scope.response = this.response;
          $scope.responseRequired = this.responseRequired;

          $scope.selectResponse = function(option) {
            $scope.response.value = option.response;
          }
        }
      });
    html: |
      <div class="question-choices" ng-class="responseOptionsStyle">
      	<input name="r[[item.id]]" ng-model="response.value" ng-required="responseRequired" style="display: none;" />
      	<div class="question-choice" ng-class="{'selected': option.response === response.value}" ng-click="selectResponse(option)" ng-repeat="(optionIndex, option) in item.responseOptions.options">
      		<div ng-bind-html="option.label"></div>
      	</div>
      </div>
    groups: ''
    starterContent: true
    hash: 07c6817615561f494dbfe2a2661236e7eaa2f931
  -
    class_name: ViewTemplate
    id: 7
    name: itemOpen
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      .question-input {
        margin-bottom: 20px;
      }

      .question-input input {
        display: block;
        background-color: var(--option-bg);
        border: none;
        outline: none;
        width: 100%;
        padding: 10px;
        font-size: var(--main-font-size);
        box-sizing: border-box;
        text-align: center;
      }

      .question-input input:hover {
        background-color: var(--option-hover-bg);
      }
    js: |
      testRunner.compileProvider.component('itemOpen', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/itemOpen/content?css=1,html=1",
        bindings: {
          item: '=',
          response: '=',
          responseRequired: '<'
        },
        controller: function controller($scope) {
          $scope.item = this.item;
          $scope.response = this.response;
          $scope.responseRequired = this.responseRequired;
        }
      });
    html: |
      <div class="question-input">
      	<input placeholder="Enter your answer" name="r[[item.id]]" ng-model="response.value" ng-required="responseRequired" type="text"/>
      </div>
    groups: ''
    starterContent: true
    hash: 8a407ad14c0634853377cee25413299957515325
  -
    class_name: ViewTemplate
    id: 11
    name: itemGracelyScale
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      .gbs-group {
        display: flex;
        width: 768px;
        justify-content: space-evenly;
        margin: 30px auto;
      }

      .gbs-row {
        display: flex;
        align-items: center;
      }

      .gbs-input {
        border: 1px solid #000;
        width: 33px;
        height: 25px;
        margin: 0 9px;
        cursor: pointer;
        text-align: center;
        padding: 3px 2px 0;
        font-size: 20px;
      }

      .gbs-row:not(:first-child) .gbs-input {
        border-top: none;
      }

      .gbs-input:not(.selected) {
        background-color: #fff !important;
      }

      .gbs-value {
        width: 18px;
        text-align: right;
      }

      .gbs-label {
        text-transform: uppercase;
        position: absolute;
        right: 0;
        width: 200px;
      }

      .gbs-input i {
        display: none;
      }

      .gbs-input.selected i {
        display: inline-block;
      }

      .gbs-item-content {
        position: relative;
        width: 275px;
      }
    js: |
      testRunner.filterProvider.register('reverse', function () {
        return function (items) {
          return items.slice().reverse();
        };
      });

      testRunner.compileProvider.component('itemGracelyScale', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/itemGracelyScale/content?css=1,html=1",
        bindings: {
          item: '=',
          response: '=',
          responseRequired: '<'
        },
        controller: function controller($scope) {

          $scope.item = this.item;
          $scope.response = this.response;
          $scope.responseRequired = this.responseRequired;

          $scope.intensityOptions = {
            options: [
              {
                value: 0,
                bgColor: '#ddfbdf'
              },
              {
                value: 1,
                bgColor: '#fde7e7'
              },
              {
                value: 2,
                bgColor: '#ffd8d8'
              },
              {
                value: 3,
                bgColor: '#fdc5c2'
              },
              {
                value: 4,
                bgColor: '#ffb6b1'
              },
              {
                value: 5,
                bgColor: '#fba19b'
              },
              {
                value: 6,
                bgColor: '#fd9187'
              },
              {
                value: 7,
                bgColor: '#ff9083'
              },
              {
                value: 8,
                bgColor: '#fd7e6c'
              },
              {
                value: 9,
                bgColor: '#fb6e55'
              },
              {
                value: 10,
                bgColor: '#fd5e3c'
              },
              {
                value: 11,
                bgColor: '#fd4e1b'
              },
              {
                value: 12,
                bgColor: '#fb400a'
              },
              {
                value: 13,
                bgColor: '#f50707'
              },
              {
                value: 14,
                bgColor: '#ec0101'
              },
              {
                value: 15,
                bgColor: '#e20101'
              },
              {
                value: 16,
                bgColor: '#da0000'
              },
              {
                value: 17,
                bgColor: '#d00101'
              },
              {
                value: 18,
                bgColor: '#c30000'
              },
              {
                value: 19,
                bgColor: '#bd0000'
              },
              {
                value: 20,
                bgColor: '#ad0202'
              },
            ],
            labels: [
              {
                text: 'no pain sensation',
                bottom: '0.2%'
              },
              {
                text: 'faint',
                bottom: '5.5%'
              },
              {
                text: 'very weak',
                bottom: '19.7%'
              },
              {
                text: 'weak',
                bottom: '24.8%'
              },
              {
                text: 'very mild',
                bottom: '31.8%'
              },
              {
                text: 'mild',
                bottom: '38.2%'
              },
              {
                text: 'moderate',
                bottom: '52.5%'
              },
              {
                text: 'barely strong',
                bottom: '58.2%'
              },
              {
                text: 'slightly intense',
                bottom: '63%'
              },
              {
                text: 'strong',
                bottom: '67.6%'
              },
              {
                text: 'intense',
                bottom: '76.8%'
              },
              {
                text: 'very intense',
                bottom: '81%'
              },
              {
                text: 'extremely intense',
                bottom: '86.7%'
              },
            ],
          };

          $scope.unpleasantnessOptions = {
            options: [
              {
                value: 0,
                bgColor: '#ddfbdf'
              },
              {
                value: 1,
                bgColor: '#fde7e7'
              },
              {
                value: 2,
                bgColor: '#ffd8d8'
              },
              {
                value: 3,
                bgColor: '#fdc5c2'
              },
              {
                value: 4,
                bgColor: '#ffb6b1'
              },
              {
                value: 5,
                bgColor: '#fba19b'
              },
              {
                value: 6,
                bgColor: '#fd9187'
              },
              {
                value: 7,
                bgColor: '#ff9083'
              },
              {
                value: 8,
                bgColor: '#fd7e6c'
              },
              {
                value: 9,
                bgColor: '#fb6e55'
              },
              {
                value: 10,
                bgColor: '#fd5e3c'
              },
              {
                value: 11,
                bgColor: '#fd4e1b'
              },
              {
                value: 12,
                bgColor: '#fb400a'
              },
              {
                value: 13,
                bgColor: '#f50707'
              },
              {
                value: 14,
                bgColor: '#ec0101'
              },
              {
                value: 15,
                bgColor: '#e20101'
              },
              {
                value: 16,
                bgColor: '#da0000'
              },
              {
                value: 17,
                bgColor: '#d00101'
              },
              {
                value: 18,
                bgColor: '#c30000'
              },
              {
                value: 19,
                bgColor: '#bd0000'
              },
              {
                value: 20,
                bgColor: '#ad0202'
              },
            ],
            labels: [
              {
                text: 'neutral',
                bottom: '0.2%'
              },
              {
                text: 'slightly unpleasant',
                bottom: '24%'
              },
              {
                text: 'slightly annoying',
                bottom: '29%'
              },
              {
                text: 'unpleasant',
                bottom: '34.5%'
              },
              {
                text: 'annoying',
                bottom: '38.5%'
              },
              {
                text: 'slightly distressing',
                bottom: '43.5%'
              },
              {
                text: 'very unpleasant',
                bottom: '48.5%'
              },
              {
                text: 'distressing',
                bottom: '52.5%'
              },
              {
                text: 'very annoying',
                bottom: '55.5%'
              },
              {
                text: 'slightly intolerable',
                bottom: '59.8%'
              },
              {
                text: 'very distressing',
                bottom: '62.8%'
              },
              {
                text: 'intolerable',
                bottom: '75.5%'
              },
              {
                text: 'very intolerable',
                bottom: '82%'
              },
            ],
          };

          $scope.intensity;
          $scope.unpleasantness;

          if($scope.response.value) {
            let pastResponse = JSON.parse($scope.response.value);
            $scope.intensity = pastResponse.intensity;
            $scope.unpleasantness = pastResponse.unpleasantness;
          }

          $scope.selectIntensity = function (value) {
            $scope.intensity = value;
          };

          $scope.selectUnpleasantness = function (value) {
            $scope.unpleasantness = value;
          };

          testRunner.addExtraControl("r" + $scope.item.id, function () {
            return JSON.stringify({
              intensity: $scope.intensity,
              unpleasantness: $scope.unpleasantness
            });
          });
        }
      });
    html: |
      <div class="gbs-group">
      	<div class="gbs-item">
      		<h2>Intensity</h2>
      		<input name="intensity" ng-model="intensity" type="hidden" />
      		<div class="gbs-item-content">
      			<div class="gbs-row" ng-repeat="option in intensityOptions.options | reverse">
      				<div class="gbs-value">
      					[[option.value]]
      				</div>
      				<div class="gbs-input" ng-class="{selected: intensity === option.value}" ng-click="selectIntensity(option.value)" ng-style="{'background-color': option.bgColor}"></div>
      			</div>

      			<div class="gbs-label" ng-repeat="label in intensityOptions.labels" ng-style="{bottom: label.bottom}">
      				[[label.text]]
      			</div>
      		</div>
      	</div>

      	<div class="gbs-item">
      		<h2>Unpleasantness</h2>
      		<input name="unpleasantness" ng-model="unpleasantness" type="hidden" />
      		<div class="gbs-item-content">
      			<div class="gbs-row" ng-repeat="option in unpleasantnessOptions.options | reverse">
      				<div class="gbs-value">
      					[[option.value]]
      				</div>
      				<div class="gbs-input" ng-class="{selected: unpleasantness === option.value}" ng-click="selectUnpleasantness(option.value)" ng-style="{'background-color': option.bgColor}"></div>
      			</div>

      			<div class="gbs-label" ng-repeat="label in unpleasantnessOptions.labels" ng-style="{bottom: label.bottom}">
      				[[label.text]]
      			</div>
      		</div>
      	</div>
      </div>
    groups: ''
    starterContent: true
    hash: 859623e05056bac15fda4f627901e846be6a250a
  -
    class_name: ViewTemplate
    id: 16
    name: inputSingleLine
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      form input {
        display: block;
        background-color: var(--option-bg);
        border: none;
        outline: none;
        width: 100%;
        padding: 10px;
        font-size: var(--main-font-size);
        box-sizing: border-box;
        resize: vertical;
      }

      form input:hover {
        background-color: var(--option-hover-bg);
      }
    js: |
      testRunner.compileProvider.component('inputSingleLine', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/inputSingleLine/content?css=1,html=1",
        bindings: {
          field: '=',
          values: '='
        },
        controller: function controller($scope) {
          $scope.field = this.field;
          $scope.values = this.values;

          $scope.getValidator = function (type) {
            if (typeof this.field.validation === 'undefined') return null;
            for (var i = 0; i < this.field.validation.length; i++) {
              var validation = this.field.validation[i];
              if (validation.type === type) {
                return validation;
              }
            }
            return null;
          };
        }
      });
    html: |
      <div class="form-label">[[field.label]]<span ng-if="getValidator('required')">*</span></div>
      <input name="[[field.name]]" ng-max="getValidator('max').value" ng-maxlength="getValidator('maxlength').value" ng-min="getValidator('min').value" ng-minlength="getValidator('minlength').value" ng-model="values[field.name]" ng-pattern="getValidator('pattern').value" ng-required="getValidator('required')" type="text" />
    groups: ''
    starterContent: true
    hash: 5afd9e1bff691ced1c7a406c984bc058b39b2e99
  -
    class_name: ViewTemplate
    id: 18
    name: inputSelect
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      select {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background-color: var(--option-bg);
        display: block;
        width: 100%;
        border: none;
        border-radius: 0;
        padding: 10px 35px 10px 10px;
        font-size: 16px;
        outline: none;
        background-image: none;
      }

      select:hover {
        background-color: var(--option-hover-bg);
        cursor: pointer;
      }

      .select {
        position: relative;
      }

      .select:after {
        position: absolute;
        content: "";
        top: 17px;
        right: 15px;
        width: 0;
        height: 0;
        border: 6px solid transparent;
        border-color: var(--main-font-color) transparent transparent transparent;
        pointer-events: none;
      }
    js: |
      testRunner.compileProvider.component('inputSelect', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/inputSelect/content?css=1,html=1",
        bindings: {
          field: '=',
          values: '='
        },
        controller: function controller($scope) {
          $scope.field = this.field;
          $scope.values = this.values;

          $scope.getValidator = function (type) {
            if (typeof this.field.validation === 'undefined') return null;
            for (var i = 0; i < this.field.validation.length; i++) {
              var validation = this.field.validation[i];
              if (validation.type === type) {
                return validation;
              }
            }
            return null;
          };
        }
      });
    html: |
      <div class="form-label">[[field.label]]<span ng-if="getValidator('required')">*</span></div>

      <div class="select">
          <select name="[[field.name]]" ng-model="values[field.name]" ng-required="getValidator('required')">
              <option value="" disabled selected hidden></option>
              <option ng-repeat="option in field.definition.options" ng-attr-value="option.value" ng-bind-html="option.label"></option>
          </select>
      </div>
    groups: ''
    starterContent: true
    hash: e908a2b766429ee231b73345c0bae335116df197
  -
    class_name: ViewTemplate
    id: 19
    name: inputPassword
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      form input {
        display: block;
        background-color: var(--option-bg);
        border: none;
        outline: none;
        width: 100%;
        padding: 10px;
        font-size: var(--main-font-size);
        box-sizing: border-box;
        resize: vertical;
      }

      form input:hover {
        background-color: var(--option-hover-bg);
      }
    js: |
      testRunner.compileProvider.component('inputPassword', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/inputPassword/content?css=1,html=1",
        bindings: {
          field: '=',
          values: '='
        },
        controller: function controller($scope) {
          $scope.field = this.field;
          $scope.values = this.values;

          $scope.getValidator = function (type) {
            if (typeof this.field.validation === 'undefined') return null;
            for (var i = 0; i < this.field.validation.length; i++) {
              var validation = this.field.validation[i];
              if (validation.type === type) {
                return validation;
              }
            }
            return null;
          };
        }
      });
    html: |
      <div class="form-label">[[field.label]]<span ng-if="getValidator('required')">*</span></div>
      <input name="[[field.name]]" ng-max="getValidator('max').value" ng-maxlength="getValidator('maxlength').value" ng-min="getValidator('min').value" ng-minlength="getValidator('minlength').value" ng-model="values[field.name]" ng-pattern="getValidator('pattern').value" ng-required="getValidator('required')" type="password" />
    groups: ''
    starterContent: true
    hash: fcc4abae97d586a7a90b3ea66a504296e82d65fd
  -
    class_name: ViewTemplate
    id: 17
    name: inputMultiLine
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      form textarea {
        display: block;
        background-color: var(--option-bg);
        border: none;
        outline: none;
        width: 100%;
        padding: 10px;
        font-size: var(--main-font-size);
        box-sizing: border-box;
        resize: vertical;
      }
    js: |
      testRunner.compileProvider.component('inputMultiLine', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/inputMultiLine/content?css=1,html=1",
        bindings: {
          field: '=',
          values: '='
        },
        controller: function controller($scope) {
          $scope.field = this.field;
          $scope.values = this.values;

          $scope.getValidator = function (type) {
            if (typeof this.field.validation === 'undefined') return null;
            for (var i = 0; i < this.field.validation.length; i++) {
              var validation = this.field.validation[i];
              if (validation.type === type) {
                return validation;
              }
            }
            return null;
          };
        }
      });
    html: |
      <div class="form-label">[[field.label]]<span ng-if="getValidator('required')">*</span></div>
      <textarea name="[[field.name]]" ng-max="getValidator('max').value" ng-maxlength="getValidator('maxlength').value" ng-min="getValidator('min').value" ng-minlength="getValidator('minlength').value" ng-model="values[field.name]" ng-pattern="getValidator('pattern').value" ng-required="getValidator('required')" rows="5"></textarea>
    groups: ''
    starterContent: true
    hash: 4303e24a0d5f102f000c564419c387fe4e94ac6d
  -
    class_name: ViewTemplate
    id: 20
    name: inputCheckbox
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      .checkbox-label {
        display: block;
        position: relative;
        padding-left: 30px;
        cursor: pointer;
        font-size: 16px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        width: 100%;
        max-width: max-content;
      }

      .checkbox-label input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        top: 0;
        left: 0;
      }

      .check-mark {
        position: absolute;
        top: 1px;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #fff;
        border: 2px solid #cccccc;
        box-sizing: border-box;
      }

      .checkbox-label:hover input ~ .check-mark {
        background-color: var(--option-bg);
      }

      .checkbox-label input:checked ~ .check-mark {
        background-color: var(--accent-light-color);
        border: none;
      }

      .check-mark:after {
        content: "";
        position: absolute;
        display: none;
      }

      .checkbox-label input:checked ~ .check-mark:after {
        display: block;
      }

      .checkbox-label .check-mark:after {
        left: 6px;
        top: 2px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
      }
    js: |
      testRunner.compileProvider.component('inputCheckbox', {
        templateUrl: testRunner.settings.directory + "ViewTemplate/inputCheckbox/content?css=1,html=1",
        bindings: {
          field: '=',
          values: '='
        },
        controller: function controller($scope) {
          $scope.field = this.field;
          $scope.values = this.values;

          $scope.getValidator = function (type) {
            if (typeof this.field.validation === 'undefined') return null;
            for (var i = 0; i < this.field.validation.length; i++) {
              var validation = this.field.validation[i];
              if (validation.type === type) {
                return validation;
              }
            }
            return null;
          };

          if (typeof $scope.values[this.field.name] === 'undefined' || $scope.values[this.field.name] === "") {
            $scope.values[this.field.name] = 0;
          }
          testRunner.addExtraControl(this.field.name, function () {
            return $scope.values[$scope.field.name];
          });
        }
      });
    html: |
      <label class="checkbox-label">
      	[[field.label]]<span ng-if="getValidator('required')">*</span>
      	<input name="[[field.name]]" ng-false-value="'0'" ng-model="values[field.name]" ng-required="getValidator('required')" ng-true-value="'1'" type="checkbox" />
      	<span class="check-mark"></span>
      </label>
    groups: ''
    starterContent: true
    hash: 35345241371dd8064ba48df9f095a6dcae7ee63e
  -
    class_name: ViewTemplate
    id: 13
    name: header
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      .header {
        background-color: var(--header-bg);
        color: var(--header-color);
      }

      .header .container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
      }

      .header-logo {
        margin: -15px 0;
        width: calc(50% - 50px);
      }

      .header-text {
        width: calc(50% - 50px);
      }

      .header-logo img {
        max-height: 50px;
        max-width: 100%;
        display: block;
        margin: 0 0 0 auto;
      }

      .timer {
        font-size: 24px;
        margin: 0 auto;
        width: 100px;
        text-align: center;
        color: var(--header-color);
      }

      @media screen and (max-width: 500px) {
        .timer {
          font-size: 16px;
          margin-bottom: 0;
          width: 60px;
          text-align: right;
        }

        .header-text {
          width: calc(100% - 60px);
        }

        .header-logo {
          display: none;
        }
      }
    js: ''
    html: |
      <div class="header">
      	<div class="container">
      		<div class="header-text">{{title}}</div>
      		<div class="timer">[[timeLeft]]</div>
      		<div ng-if="logo" class="header-logo"><img ng-src="[[logo]]" alt="logo"></div>
      	</div>
      </div>
    groups: ''
    starterContent: true
    hash: 0ae718e568fe168674f56840c3bc92825e131a29
  -
    class_name: ViewTemplate
    id: 14
    name: footer
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      .container {
        max-width: 1000px;
        margin: auto;
        padding: 20px;
      }

      .footer {
        background-color: var(--option-bg);
        font-size: 14px;
        margin-top: auto;
      }

      .footer a {
        color: var(--main-font-color);
      }
    js: ''
    html: |
      <div class="footer">
      	<div class="container">
      		Created with <a href="http://www.concertoplatform.com" target="_blank">Concerto Platform</a>
      	</div>
      </div>
    groups: ''
    starterContent: true
    hash: a4bc340fdfa284790601e93706f3f3945c0ee5bf
  -
    class_name: ViewTemplate
    id: 12
    name: loader
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      :root {
        --accent-light-color: #45b87e;
      }

      .body {
        min-height: 100vh;
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
      }

      .lds-dual-ring {
        display: block;
        margin: 50px auto 150px;
        width: 80px;
        height: 80px;
      }
      .lds-dual-ring:after {
        content: " ";
        display: block;
        width: 80px;
        height: 80px;
        margin: 1px;
        border-radius: 50%;
        border: 8px solid var(--accent-light-color);
        border-color: var(--accent-light-color) transparent var(--accent-light-color) transparent;
        animation: lds-dual-ring 1.2s linear infinite;
      }
      @keyframes lds-dual-ring {
        0% {
          -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
        }
        100% {
          -webkit-transform: rotate(360deg);
          transform: rotate(360deg);
        }
      }
    js: ''
    html: |
      <div class="body">
      	<div class="lds-dual-ring"></div>
      </div>
    groups: ''
    starterContent: true
    hash: cc7549bab1474338fc63fd1f1417fb3433fbd512
  -
    class_name: ViewTemplate
    id: 3
    name: form
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      :root {
          --option-bg: #f3f3f3;
          --option-hover-bg: #efefef;
          --option-color: #000000;
          --option-unselected-bg: #ffffd5;
          --error-color: #f32828;
          --accent-light-color: #45b87e;
          --accent-dark-color: #35a26b;
          --font-color-for-accent-bg: #ffffff;
          --main-font-style: 'Open Sans', sans-serif;
          --main-font-color: #000000;
          --main-font-size: 16px;
          --header-bg: #4581b5;
      }

      .body {
          min-height: 100vh;
          position: relative;
          font-size: var(--main-font-size);
          font-family: var(--main-font-style);
          color: var(--main-font-color);
          display: flex;
          flex-direction: column;
      }

      .container {
          max-width: 1000px;
          margin: auto;
          padding: 20px;
      }

      .main-btn {
          background-color: var(--accent-light-color);
          border: none;
          padding: 10px 20px;
          font-size: var(--main-font-size);
          color: var(--font-color-for-accent-bg);
          display: block;
          min-width: 100px;
          cursor: pointer;
          -webkit-transform: perspective(1px) translateZ(0);
          transform: perspective(1px) translateZ(0);
          -webkit-transition-duration: 0.3s;
          transition-duration: 0.3s;
          -webkit-transition-property: background-color;
          transition-property: background-color;
          outline: none;
      }

      .main-btn:hover {
          background-color: var(--accent-dark-color);
      }

      .main-btn:disabled {
          background-color: var(--option-hover-bg);
          color: #ccc;
          cursor: default;
      }

      .left-btn {
          margin: 0 auto 0 0;
      }

      .right-btn {
          margin: 0 0 0 auto;
      }

      .question-footer {
          display: flex;
          flex-direction: row;
          justify-content: space-between;
          margin-top: 30px;
      }

      .form-error {
          color: var(--error-color);
          font-size: 14px;
      }

      .form-field {
          margin-bottom: 20px;
      }

      @media screen and (max-width: 500px) {
          .main-btn {
              min-width: 0;
          }
      }
    js: |
      testRunner.controllerProvider.register("form", function ($scope) {
        $scope.fields = angular.fromJson(testRunner.R.fields);
        $scope.values = angular.fromJson(testRunner.R.initialValues);
        if (typeof $scope.values === 'undefined' || $scope.values === null) $scope.values = {};

        function initializeValues() {
          for (var i = 0; i < $scope.fields.length; i++) {
            var field = $scope.fields[i];

            if (typeof $scope.values[field.name] === 'undefined') {
              $scope.values[field.name] = "";
            }
          }
        }

        initializeValues();
      });
    html: |
      {{template:inputSingleLine,css=FALSE,html=FALSE}}
      {{template:inputMultiLine,css=FALSE,html=FALSE}}
      {{template:inputCheckbox,css=FALSE,html=FALSE}}
      {{template:inputSelect,css=FALSE,html=FALSE}}
      {{template:inputPassword,css=FALSE,html=FALSE}}

      <div class="body" ng-controller="form">
      	{{template:header}}

      	<div class="questions">
      		<div class="container">

      			<form name="form">
      				<div ng-repeat="field in fields track by $index">

      					<div class="form-field">
      						<div ng-switch="field.type">
      							<input-single-line ng-switch-when="singleLine" field="field" values="values"></input-single-line>
      							<input-multi-line ng-switch-when="multiLine" field="field" values="values"></input-multi-line>
      							<input-checkbox ng-switch-when="checkbox" field="field" values="values"></input-checkbox>
      							<input-select ng-switch-when="select" field="field" values="values"></input-select>
      							<input-password ng-switch-when="password" field="field" values="values"></input-password>
      						</div>
      						<div class="form-error" ng-repeat="error in field.validation" ng-show="form[field.name].$error[error.type] && form[field.name].$dirty">[[error.alert]]</div>
      					</div>
      				</div>

      				<div class="question-footer">
      					<button id="submitButton" class="main-btn right-btn" ng-disabled="form.$invalid" name="submit">Next</button>
      				</div>
      			</form>
      		</div>
      	</div>

      	{{template:footer}}

      </div>
    groups: ''
    starterContent: true
    hash: 6f23691af443de2a17d3a695f8decd47734af3af
  -
    class_name: ViewTemplate
    id: 15
    name: test
    description: ''
    accessibility: 2
    archived: '0'
    head: ''
    css: |
      :root {
        --option-bg: #f3f3f3;
        --option-hover-bg: #efefef;
        --option-color: #000000;
        --option-unselected-bg: #ffffd5;
        --error-color: #f32828;
        --accent-light-color: #45b87e;
        --accent-dark-color: #35a26b;
        --font-color-for-accent-bg: #ffffff;
        --main-font-style: 'Open Sans', sans-serif;
        --main-font-color: #000000;
        --main-font-size: 16px;
        --header-bg: #4581b5;
        --header-color: #ffffff;
      }

      .body {
        min-height: 100vh;
        position: relative;
        font-size: var(--main-font-size);
        font-family: var(--main-font-style);
        color: var(--main-font-color);
        display: flex;
        flex-direction: column;
      }

      .container {
        max-width: 1000px;
        margin: auto;
        padding: 20px;
      }

      .main-btn {
        background-color: var(--accent-light-color);
        border: none;
        padding: 10px 20px;
        font-size: var(--main-font-size);
        color: var(--font-color-for-accent-bg);
        display: block;
        min-width: 100px;
        cursor: pointer;
        -webkit-transform: perspective(1px) translateZ(0);
        transform: perspective(1px) translateZ(0);
        -webkit-transition-duration: 0.3s;
        transition-duration: 0.3s;
        -webkit-transition-property: background-color;
        transition-property: background-color;
        outline: none;
      }

      .main-btn:hover {
        background-color: var(--accent-dark-color);
      }

      .main-btn:disabled {
        background-color: var(--option-hover-bg);
        color: #ccc;
        cursor: default;
      }

      .left-btn {
        margin: 0 auto 0 0;
      }

      .right-btn {
        margin: 0 0 0 auto;
      }

      /*QUESTIONS*/
      .question-text {
        font-weight: 600;
        text-align: center;
        margin: 20px auto;
      }

      .question-footer {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin-top: 20px;
      }

      .question-page {
        font-size: 14px;
        padding: 10px 0;
      }

      .form-error {
        color: var(--error-color);
        font-size: 14px;
        position: relative;
        top: -18px;
        text-align: center;
      }

      @media screen and (max-width: 500px) {
        .question-text {
          font-size: 14px;
        }

        .main-btn {
          min-width: 0;
        }
      }
    js: |
      testRunner.controllerProvider.register("test", function ($scope) {
        $scope.items = testRunner.R.items;
        $scope.canGoBack = testRunner.R.canGoBack == 1;
        $scope.responseRequired = testRunner.R.responseRequired == 1;
        $scope.responseRequiredAlert = testRunner.R.responeRequiredAlert;
        $scope.page = testRunner.R.page;
        $scope.totalPages = testRunner.R.totalPages;
        $scope.pastResponses = testRunner.R.responses;
        $scope.responses = {};

        if ($scope.pastResponses) {
          for (var i = 0; i < $scope.pastResponses.length; i++) {
            var response = $scope.pastResponses[i];
            $scope.responses["r" + response.item_id] = typeof response.response === 'object' ? response.response : {value: response.response};
          }
        }

        for (var i = 0; i < $scope.items.length; i++) {
          var item = $scope.items[i];
          if (typeof item.responseOptions === "string") {
            item.responseOptions = JSON.parse(item.responseOptions);
            $scope.items[i] = item;
          }
          $scope.items[i] = item;

          if (typeof $scope.responses["r" + item.id] === 'undefined') {
            $scope.responses["r" + item.id] = {};
          }
        }
      });
    html: |
      {{template:itemOpen,css=FALSE,html=FALSE}}
      {{template:itemOptions,css=FALSE,html=FALSE}}
      {{template:itemPainMannequin,css=FALSE,html=FALSE}}
      {{template:itemGracelyScale,css=FALSE,html=FALSE}}

      <div class="body" ng-controller="test">
      	{{template:header}}

      	<div class="questions">
      		<div class="container">

      			<form name="form">
      				<div ng-repeat="item in items">
      					<div class="question-text" ng-bind-html="item.question"></div>

      					<div ng-switch="item.responseOptions.type">
      						<item-open item="item" ng-switch-when="open" response="responses['r' + item.id]" response-required="responseRequired"></item-open>
      						<item-options item="item" ng-switch-when="options" response="responses['r' + item.id]" response-required="responseRequired"></item-options>
      						<item-pain-mannequin item="item" ng-switch-when="painMannequin" response="responses['r' + item.id]" response-required="responseRequired"></item-pain-mannequin>
      						<item-gracely-scale item="item" ng-switch-when="gracelyScale" response="responses['r' + item.id]" response-required="responseRequired"></item-gracely-scale>
      					</div>

      					<div class="form-error" ng-show="form.response.$error.required && form.response.$dirty">[[responseRequiredAlert]]</div>
      				</div>

      				<div class="question-footer">
      					<button class="main-btn left-btn" ng-if="canGoBack" name="back">Back</button>
      					<div class="question-page" ng-show="page != null && totalPages != null">Page&nbsp;[[page]]&nbsp;/&nbsp;[[totalPages]]</div>
      					<button id="submitButton" class="main-btn right-btn" ng-disabled="form.$invalid" name="next">Next</button>
      				</div>
      			</form>
      		</div>
      	</div>

      	{{template:footer}}
      </div>
    groups: ''
    starterContent: true
    hash: ec18671c38f0032a16d0e6d26c0a03d5276b9cb1
  -
    class_name: DataTable
    id: 1
    name: users
    description: ''
    accessibility: 2
    archived: '0'
    columns:
      -
        name: id
        type: bigint
        nullable: false
      -
        name: login
        type: string
        nullable: false
      -
        name: password
        type: string
        nullable: false
      -
        name: enabled
        type: boolean
        nullable: false
    groups: ''
    starterContent: true
    hash: e2ba936fe247f4aed6496c984f4479b276c0936c
  -
    class_name: DataTable
    id: 9
    name: translationDictionary
    description: ''
    accessibility: 2
    archived: '0'
    columns:
      -
        name: id
        type: bigint
        nullable: false
      -
        name: entryKey
        type: string
        nullable: false
      -
        name: en
        type: text
        nullable: false
      -
        name: de
        type: text
        nullable: false
      -
        name: es
        type: text
        nullable: false
      -
        name: fr
        type: text
        nullable: false
      -
        name: zh
        type: text
        nullable: false
    groups: ''
    starterContent: true
    hash: 4ffe389d37c5aeb9e635029a10021caed5e19b88
  -
    class_name: DataTable
    id: 2
    name: sessions
    description: ''
    accessibility: 2
    archived: '0'
    columns:
      -
        name: id
        type: bigint
        nullable: false
      -
        name: internal_id
        type: bigint
        nullable: false
      -
        name: test_id
        type: bigint
        nullable: false
      -
        name: user_id
        type: bigint
        nullable: false
      -
        name: startedTime
        type: datetime
        nullable: false
      -
        name: updateTime
        type: datetime
        nullable: false
      -
        name: finished
        type: boolean
        nullable: false
    groups: ''
    starterContent: true
    hash: 947e8c07e96e04045f8763bbfe4abe26366b26d5
  -
    class_name: DataTable
    id: 6
    name: linearTestResponses
    description: ''
    accessibility: 2
    archived: '0'
    columns:
      -
        name: id
        type: bigint
        nullable: false
      -
        name: item_id
        type: bigint
        nullable: false
      -
        name: response
        type: string
        nullable: false
      -
        name: timeTaken
        type: float
        nullable: false
      -
        name: session_id
        type: string
        nullable: false
      -
        name: score
        type: float
        nullable: false
      -
        name: trait
        type: string
        nullable: false
    groups: ''
    starterContent: true
    hash: 6a88eea42660caedf519c69a254dac3be29df919
  -
    class_name: DataTable
    id: 5
    name: linearTestItems
    description: ''
    accessibility: 2
    archived: '0'
    columns:
      -
        name: id
        type: bigint
        nullable: false
      -
        name: question
        type: text
        nullable: false
      -
        name: responseOptions
        type: string
        nullable: false
      -
        name: orderIndex
        type: integer
        nullable: false
      -
        name: trait
        type: string
        nullable: false
    groups: ''
    starterContent: true
    hash: 68af3f9fa95f50e9ccb730069f8d471a2963af16
  -
    class_name: DataTable
    id: 3
    name: CATResponses
    description: ''
    accessibility: 2
    archived: '0'
    columns:
      -
        name: id
        type: bigint
        nullable: false
      -
        name: item_id
        type: bigint
        nullable: false
      -
        name: response
        type: string
        nullable: false
      -
        name: catValue
        type: float
        nullable: false
      -
        name: timeTaken
        type: float
        nullable: false
      -
        name: session_id
        type: string
        nullable: false
      -
        name: theta
        type: float
        nullable: false
      -
        name: sem
        type: float
        nullable: false
    groups: ''
    starterContent: true
    hash: 8d991e418c79255f17133805042708dfdcfa7b42
  -
    class_name: DataTable
    id: 4
    name: CATItems
    description: ''
    accessibility: 2
    archived: '0'
    columns:
      -
        name: id
        type: bigint
        nullable: false
      -
        name: question
        type: text
        nullable: false
      -
        name: responseOptions
        type: string
        nullable: false
      -
        name: cbGroup
        type: text
        nullable: false
      -
        name: fixedIndex
        type: integer
        nullable: false
      -
        name: p1
        type: float
        nullable: false
      -
        name: p2
        type: float
        nullable: false
      -
        name: p3
        type: float
        nullable: false
      -
        name: p4
        type: float
        nullable: false
      -
        name: p5
        type: float
        nullable: false
      -
        name: p6
        type: float
        nullable: false
      -
        name: p7
        type: float
        nullable: false
      -
        name: p8
        type: float
        nullable: false
      -
        name: p9
        type: float
        nullable: false
    groups: ''
    starterContent: true
    hash: c8c8c1084bad7d5dfcd8943889b75a5c8c37b6ac
  -
    class_name: Test
    id: 5
    name: _authorizeUser
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      library(digest)

      resultCode = 0
      getUserByLogin = function(login) {
        if(userBankType == "direct") {
          userList = fromJSON(userBankList)
          if(length(userList) == 0) {
            resultCode <<- 1
            return(NULL)
          }

          for(i in 1:length(userList)) {
            user = userList[[i]]
            if(user$login == login && user$enabled == 1) {
              return(user)
            }
          }
          resultCode <<- 1
          return(NULL)
        } else {
          tableMap = fromJSON(userBankTable)
          sql = "
      SELECT *
      FROM {{table}}
      WHERE
      {{loginColumn}}='{{login}}'
      AND {{enabledColumn}}=1
      "
          user = concerto.table.query(sql, params=list(
            table=tableMap$table,
            loginColumn=tableMap$columns$login,
            enabledColumn=tableMap$columns$enabled,
            login=login
          ))
          if(dim(user)[1] == 0) {
            resultCode <<- 1
            return(NULL)
          }
          return(user[1,])
        }
      }

      checkPassword = function(rawPassword, encryptedPassword, encryption) {
        if(is.na(encryptedPassword) || encryptedPassword == "") { return(T) }
        if(is.na(rawPassword)) { return(F) }
        if(encryption=="plain") {
          return(rawPassword == encryptedPassword)
        }
        return(digest(rawPassword, encryption, serialize=F) == encryptedPassword)
      }

      authorizeUser = function(login, password) {
        user = getUserByLogin(login)
        concerto.log(login, "_authorizeUser ▷ login checked")
        concerto.log(password, "_authorizeUser ▷ password checked")
        concerto.log(user, "_authorizeUser ▷ user checked for password")

        if(!is.null(user) && checkPassword(password, user$password, userBankEncryption)) {
          return(user)
        }
        resultCode <<- 1
        return(NULL)
      }

      user = authorizeUser(login, password)
      if(is.null(user)) {
        concerto.log(paste0("user ",login," unauthorized"), title="_authorizeUser ▷ authorization result")
        .branch = "unauthorized"
      } else {
        concerto.log(paste0("user ",login," authorized"), title="_authorizeUser ▷ authorization result")
        .branch = "authorized"
      }

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 19
        name: authorized
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 20
        name: login
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 21
        name: password
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 22
        name: unauthorized
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 23
        name: user
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 24
        name: .branch
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 25
        name: userBankType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 26
        name: userBankList
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 27
        name: userBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 28
        name: userBankEncryption
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
      -
        class_name: TestVariable
        id: 29
        name: resultCode
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 5
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 4c325e561050b96782fdf813825c6ea3e74b09ad
  -
    class_name: Test
    id: 19
    name: createList
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      result = list()
      if(is.list(sourceList)) {
        result = sourceList
      }
      for(.name in .dynamicInputs) {
          result[.name] = list(get(.name))
      }

    description: 'List creation. Dynamic inputs will be used as list elements (input name as list key, input value as list value).'
    variables:
      -
        class_name: TestVariable
        id: 112
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 19
        parentVariable: null
      -
        class_name: TestVariable
        id: 113
        name: sourceList
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 19
        parentVariable: null
      -
        class_name: TestVariable
        id: 114
        name: result
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 19
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 4a7cb888e6f59b12d67542fc02ed8fc87fa56b65
  -
    class_name: Test
    id: 15
    name: eval
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: 'result = eval(parse(text=code))'
    description: 'Evaluate R code.'
    variables:
      -
        class_name: TestVariable
        id: 88
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 15
        parentVariable: null
      -
        class_name: TestVariable
        id: 89
        name: code
        type: 0
        description: 'Code value is expected to be text.'
        passableThroughUrl: '0'
        value: null
        test: 15
        parentVariable: null
      -
        class_name: TestVariable
        id: 90
        name: result
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 15
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 984026c495f333a2bfe3a8c2fb31dcd8e7b60507
  -
    class_name: Test
    id: 20
    name: _CAT
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 2
    code: null
    description: ''
    variables:
      -
        class_name: TestVariable
        id: 115
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 116
        name: itemBankType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: direct
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 117
        name: itemBankItems
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[]'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 118
        name: itemBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 119
        name: testTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 120
        name: itemTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 121
        name: itemTimeFullRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 122
        name: testTimeLimitOffset
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 123
        name: contentBalancing
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[]'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 124
        name: startingTheta
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 125
        name: nextItemCriterion
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: MFI
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 126
        name: nextItemRandomesque
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '1'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 127
        name: scoringMethod
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: BM
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 128
        name: responseBank
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 129
        name: itemTemplate
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 130
        name: session
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 131
        name: itemNumLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 132
        name: minAccuracy
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '1'
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 137
        name: responseRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 138
        name: responseRequiredAlert
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 139
        name: sem
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 140
        name: theta
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 492
        name: itemTemplateParamsModule
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 508
        name: model
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 511
        name: responseCatValueModule
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 20
        parentVariable: null
      -
        class_name: TestVariable
        id: 513
        name: itemParamsNum
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '9'
        test: 20
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes:
      -
        class_name: TestNode
        id: 31
        title: ''
        type: 1
        posX: 14369
        posY: 14742
        flowTest: 20
        sourceTest: 20
        sourceTestName: _CAT
        sourceTestDescription: ''
        ports:
          -
            class_name: TestNodePort
            id: 366
            value: direct
            node: 31
            variable: 116
            variableObject:
              class_name: TestVariable
              id: 116
              name: itemBankType
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: direct
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: itemBankType
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 367
            value: '[]'
            node: 31
            variable: 117
            variableObject:
              class_name: TestVariable
              id: 117
              name: itemBankItems
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '[]'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: itemBankItems
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 368
            value: null
            node: 31
            variable: 118
            variableObject:
              class_name: TestVariable
              id: 118
              name: itemBankTable
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: itemBankTable
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 369
            value: '0'
            node: 31
            variable: 119
            variableObject:
              class_name: TestVariable
              id: 119
              name: testTimeLimit
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: testTimeLimit
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 370
            value: '0'
            node: 31
            variable: 120
            variableObject:
              class_name: TestVariable
              id: 120
              name: itemTimeLimit
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: itemTimeLimit
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 371
            value: '0'
            node: 31
            variable: 121
            variableObject:
              class_name: TestVariable
              id: 121
              name: itemTimeFullRequired
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: itemTimeFullRequired
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 372
            value: '0'
            node: 31
            variable: 122
            variableObject:
              class_name: TestVariable
              id: 122
              name: testTimeLimitOffset
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: testTimeLimitOffset
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 373
            value: '[]'
            node: 31
            variable: 123
            variableObject:
              class_name: TestVariable
              id: 123
              name: contentBalancing
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '[]'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: contentBalancing
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 374
            value: '0'
            node: 31
            variable: 124
            variableObject:
              class_name: TestVariable
              id: 124
              name: startingTheta
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: startingTheta
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 375
            value: MFI
            node: 31
            variable: 125
            variableObject:
              class_name: TestVariable
              id: 125
              name: nextItemCriterion
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: MFI
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: nextItemCriterion
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 376
            value: '1'
            node: 31
            variable: 126
            variableObject:
              class_name: TestVariable
              id: 126
              name: nextItemRandomesque
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '1'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: nextItemRandomesque
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 377
            value: BM
            node: 31
            variable: 127
            variableObject:
              class_name: TestVariable
              id: 127
              name: scoringMethod
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: BM
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: scoringMethod
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 378
            value: null
            node: 31
            variable: 128
            variableObject:
              class_name: TestVariable
              id: 128
              name: responseBank
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: responseBank
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 379
            value: null
            node: 31
            variable: 129
            variableObject:
              class_name: TestVariable
              id: 129
              name: itemTemplate
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: itemTemplate
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 380
            value: null
            node: 31
            variable: 130
            variableObject:
              class_name: TestVariable
              id: 130
              name: session
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: session
            pointer: '1'
            pointerVariable: session
          -
            class_name: TestNodePort
            id: 381
            value: '0'
            node: 31
            variable: 131
            variableObject:
              class_name: TestVariable
              id: 131
              name: itemNumLimit
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: itemNumLimit
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 382
            value: '1'
            node: 31
            variable: 132
            variableObject:
              class_name: TestVariable
              id: 132
              name: minAccuracy
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '1'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: minAccuracy
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 387
            value: null
            node: 31
            variable: 137
            variableObject:
              class_name: TestVariable
              id: 137
              name: responseRequired
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: responseRequired
            pointer: '0'
            pointerVariable: responseRequired
          -
            class_name: TestNodePort
            id: 388
            value: null
            node: 31
            variable: 138
            variableObject:
              class_name: TestVariable
              id: 138
              name: responseRequiredAlert
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: responseRequiredAlert
            pointer: '0'
            pointerVariable: responseRequiredAlert
          -
            class_name: TestNodePort
            id: 950
            value: null
            node: 31
            variable: 492
            variableObject:
              class_name: TestVariable
              id: 492
              name: itemTemplateParamsModule
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemTemplateParamsModule
            pointer: '0'
            pointerVariable: itemTemplateParamsModule
          -
            class_name: TestNodePort
            id: 1250
            value: null
            node: 31
            variable: 508
            variableObject:
              class_name: TestVariable
              id: 508
              name: model
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: model
            pointer: '0'
            pointerVariable: model
          -
            class_name: TestNodePort
            id: 1303
            value: null
            node: 31
            variable: 511
            variableObject:
              class_name: TestVariable
              id: 511
              name: responseCatValueModule
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: responseCatValueModule
            pointer: '0'
            pointerVariable: responseCatValueModule
          -
            class_name: TestNodePort
            id: 1324
            value: '9'
            node: 31
            variable: 513
            variableObject:
              class_name: TestVariable
              id: 513
              name: itemParamsNum
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '9'
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemParamsNum
            pointer: '0'
            pointerVariable: itemParamsNum
      -
        class_name: TestNode
        id: 32
        title: ''
        type: 2
        posX: 16736
        posY: 15739
        flowTest: 20
        sourceTest: 20
        sourceTestName: _CAT
        sourceTestDescription: ''
        ports:
          -
            class_name: TestNodePort
            id: 389
            value: null
            node: 32
            variable: 139
            variableObject:
              class_name: TestVariable
              id: 139
              name: sem
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '0'
            name: sem
            pointer: '1'
            pointerVariable: sem
          -
            class_name: TestNodePort
            id: 390
            value: null
            node: 32
            variable: 140
            variableObject:
              class_name: TestVariable
              id: 140
              name: theta
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 20
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '0'
            name: theta
            pointer: '1'
            pointerVariable: theta
      -
        class_name: TestNode
        id: 39
        title: 'create settings'
        type: 0
        posX: 14816
        posY: 14740
        flowTest: 20
        sourceTest: 19
        sourceTestName: createList
        sourceTestDescription: 'List creation. Dynamic inputs will be used as list elements (input name as list key, input value as list value).'
        ports:
          -
            class_name: TestNodePort
            id: 473
            value: null
            node: 39
            variable: 113
            variableObject:
              class_name: TestVariable
              id: 113
              name: sourceList
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 19
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 0
            exposed: '0'
            name: sourceList
            pointer: '0'
            pointerVariable: sourceList
          -
            class_name: TestNodePort
            id: 474
            value: null
            node: 39
            variable: 114
            variableObject:
              class_name: TestVariable
              id: 114
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 19
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: result
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 475
            value: '0'
            node: 39
            variable: 112
            variableObject:
              class_name: TestVariable
              id: 112
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 19
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 476
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: contentBalancing
            pointer: '0'
            pointerVariable: contentBalancing
          -
            class_name: TestNodePort
            id: 477
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemBankItems
            pointer: '0'
            pointerVariable: itemBankItems
          -
            class_name: TestNodePort
            id: 478
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemBankTable
            pointer: '0'
            pointerVariable: itemBankTable
          -
            class_name: TestNodePort
            id: 479
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemBankType
            pointer: '0'
            pointerVariable: itemBankType
          -
            class_name: TestNodePort
            id: 480
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemNumLimit
            pointer: '0'
            pointerVariable: itemNumLimit
          -
            class_name: TestNodePort
            id: 481
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemTemplate
            pointer: '0'
            pointerVariable: itemTemplate
          -
            class_name: TestNodePort
            id: 482
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemTimeFullRequired
            pointer: '0'
            pointerVariable: itemTimeFullRequired
          -
            class_name: TestNodePort
            id: 483
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemTimeLimit
            pointer: '0'
            pointerVariable: itemTimeLimit
          -
            class_name: TestNodePort
            id: 484
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: minAccuracy
            pointer: '0'
            pointerVariable: minAccuracy
          -
            class_name: TestNodePort
            id: 485
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: nextItemCriterion
            pointer: '0'
            pointerVariable: nextItemCriterion
          -
            class_name: TestNodePort
            id: 486
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: nextItemRandomesque
            pointer: '0'
            pointerVariable: nextItemRandomesque
          -
            class_name: TestNodePort
            id: 487
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseBank
            pointer: '0'
            pointerVariable: responseBank
          -
            class_name: TestNodePort
            id: 488
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: scoringMethod
            pointer: '0'
            pointerVariable: scoringMethod
          -
            class_name: TestNodePort
            id: 489
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: startingTheta
            pointer: '0'
            pointerVariable: startingTheta
          -
            class_name: TestNodePort
            id: 490
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLimit
            pointer: '0'
            pointerVariable: testTimeLimit
          -
            class_name: TestNodePort
            id: 491
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLimitOffset
            pointer: '0'
            pointerVariable: testTimeLimitOffset
          -
            class_name: TestNodePort
            id: 492
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseRequired
            pointer: '0'
            pointerVariable: responseRequired
          -
            class_name: TestNodePort
            id: 493
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseRequiredAlert
            pointer: '0'
            pointerVariable: responseRequiredAlert
          -
            class_name: TestNodePort
            id: 951
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemTemplateParamsModule
            pointer: '0'
            pointerVariable: itemTemplateParamsModule
          -
            class_name: TestNodePort
            id: 1251
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: model
            pointer: '0'
            pointerVariable: model
          -
            class_name: TestNodePort
            id: 1304
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseCatValueModule
            pointer: '0'
            pointerVariable: responseCatValueModule
          -
            class_name: TestNodePort
            id: 1325
            value: ''
            node: 39
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemParamsNum
            pointer: '0'
            pointerVariable: itemParamsNum
      -
        class_name: TestNode
        id: 104
        title: initialization
        type: 0
        posX: 15235
        posY: 15085
        flowTest: 20
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1086
            value: |
              getItems = function(itemBankType, itemBankItems, itemBankTable){
                items = NULL
                if(itemBankType == "table") {
                  tableMap = fromJSON(itemBankTable)
                  table = tableMap$table
                  questionColumn = tableMap$columns$question
                  responseOptionsColumn = tableMap$columns$responseOptions
                  p1Column = tableMap$columns$p1
                  p2Column = tableMap$columns$p2
                  p3Column = tableMap$columns$p3
                  p4Column = tableMap$columns$p4
                  p5Column = tableMap$columns$p5
                  p6Column = tableMap$columns$p6
                  p7Column = tableMap$columns$p7
                  p8Column = tableMap$columns$p8
                  p9Column = tableMap$columns$p9
                  cbGroupColumn = tableMap$columns$cbGroup
                  fixedIndexColumn = tableMap$columns$fixedIndex
                  items = concerto.table.query(
                    "
              SELECT
              id,
              {{questionColumn}} AS question,
              {{responseOptionsColumn}} AS responseOptions,
              {{p1Column}} AS p1,
              {{p2Column}} AS p2,
              {{p3Column}} AS p3,
              {{p4Column}} AS p4,
              {{p5Column}} AS p5,
              {{p6Column}} AS p6,
              {{p7Column}} AS p7,
              {{p8Column}} AS p8,
              {{p9Column}} AS p9,
              {{cbGroupColumn}} AS cbGroup,
              {{fixedIndexColumn}} AS fixedIndex
              FROM {{table}}
              ",
                    list(
                      questionColumn=questionColumn,
                      responseOptionsColumn=responseOptionsColumn,
                      p1Column=p1Column,
                      p2Column=p2Column,
                      p3Column=p3Column,
                      p4Column=p4Column,
                      p5Column=p5Column,
                      p6Column=p6Column,
                      p7Column=p7Column,
                      p8Column=p8Column,
                      p9Column=p9Column,
                      cbGroupColumn=cbGroupColumn,
                      fixedIndexColumn=fixedIndexColumn,
                      table=table
                    ))
                }
                if(itemBankType == "direct") {
                  itemBankItems = fromJSON(itemBankItems)
                  if(length(itemBankItems) > 0) {
                    for(i in 1:length(itemBankItems)) {
                      itemBankItems[[i]]$responseOptions = as.character(toJSON(itemBankItems[[i]]$responseOptions)) #response options don't fit into flat table, so turn them back to JSON.
                      items = rbind(items, data.frame(itemBankItems[[i]], stringsAsFactors=F))
                    }
                  }
                }

                if(dim(items)[1] == 0) { stop("Item bank must not be empty!") }
                return(items)
              }

              items = getItems(settings$itemBankType, settings$itemBankItems, settings$itemBankTable)
              itemsNum = dim(items)[1]

              cbGroup = NULL
              cbControl = NULL
              cbProps = fromJSON(settings$contentBalancing)
              concerto.log(cbProps, "eval@initialization ▷ cbProps")
              if(length(cbProps) > 0) {
                cbGroup = as.character(items[,"cbGroup"])
                cbControl = list(
                  names=NULL,
                  props=NULL
                )

                for(i in 1:length(cbProps)) {
                  cbControl$names = c(cbControl$names, cbProps[[i]]$name)
                  cbControl$props = c(cbControl$props, as.numeric(cbProps[[i]]$proportion))
                }
                concerto.log(cbControl, "eval@initialization ▷ cbControl")
              }

              paramBank = items[,c("p1","p2","p3","p4","p5","p6","p7","p8","p9"),drop=F]
              paramBank = paramBank[,1:as.numeric(settings$itemParamsNum),drop=F]
              paramBank = apply(paramBank, 2, as.numeric)

              theta = as.numeric(settings$startingTheta)
              itemsAdministered = NULL
              correctness = NULL
              testTimeStarted = as.numeric(Sys.time())
              testTimeLeft = as.numeric(settings$testTimeLimit) + as.numeric(settings$testTimeLimitOffset)

            node: 104
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1087
            value: null
            node: 104
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1088
            value: '0'
            node: 104
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1089
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1090
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: cbControl
            pointer: '0'
            pointerVariable: cbControl
          -
            class_name: TestNodePort
            id: 1091
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: cbGroup
            pointer: '0'
            pointerVariable: cbGroup
          -
            class_name: TestNodePort
            id: 1092
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: responses
            pointer: '1'
            pointerVariable: responses
          -
            class_name: TestNodePort
            id: 1093
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1094
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1095
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: paramBank
            pointer: '1'
            pointerVariable: paramBank
          -
            class_name: TestNodePort
            id: 1096
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: testTimeLeft
            pointer: '1'
            pointerVariable: testTimeLeft
          -
            class_name: TestNodePort
            id: 1097
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: testTimeStarted
            pointer: '1'
            pointerVariable: testTimeStarted
          -
            class_name: TestNodePort
            id: 1098
            value: ''
            node: 104
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: theta
            pointer: '1'
            pointerVariable: theta
      -
        class_name: TestNode
        id: 105
        title: 'next item selector'
        type: 0
        posX: 15675
        posY: 15105
        flowTest: 20
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1099
            value: |
              library(catR)

              getSafeItem = function(item) {
                item = as.list(item)
                item$correct = NULL

                if(is.character(item$responseOptions)) { item$responseOptions = fromJSON(item$responseOptions) }
                responseOptionsRandomOrder = item$responseOptions$optionsRandomOrder == "1"
                orderedOptions = c()

                if(length(item$responseOptions$options) > 0) {
                  if(responseOptionsRandomOrder) {
                    orderedOptions = item$responseOptions$options[sample(1:length(item$responseOptions$options))]
                  } else {
                    orderedOptions = item$responseOptions$options
                  }
                  orderedOptions = lapply(orderedOptions, function(elem) {
                    elem$catValue = NULL
                    return(elem)
                  })
                }
                item$responseOptions$options = orderedOptions
                item$responseOptions = toJSON(item$responseOptions)
                return(item)
              }

              currentIndex = length(itemsAdministered) + 1
              itemsNum = dim(items)[1]
              nextItemIndex = 0
              if(itemsNum > 0) {
                for(i in 1:itemsNum) {
                  fixedIndex = items[i,"fixedIndex"]
                  if(!is.na(fixedIndex) && !is.null(fixedIndex) && fixedIndex != "" && fixedIndex != 0){
                    concerto.log(fixedIndex, "eval@next_item_selector ▷ fixedIndex")
                    if(fixedIndex == currentIndex) {
                      nextItemIndex = i
                    } else {
                      itemsAdministered = unique(c(itemsAdministered, i))
                    }
                  }
                }
              }

              if(nextItemIndex == 0) {
                concerto.log(itemsAdministered, "eval@next_item_selector ▷ out")
                result = nextItem(paramBank, model=settings$model, theta=theta, out=itemsAdministered, criterion=settings$nextItemCriterion, method=settings$scoringMethod, randomesque=settings$nextItemRandomesque, cbGroup=cbGroup, cbControl=cbControl)
                nextItemIndex = result$item
              }
              concerto.log(nextItemIndex, "eval@next_item_selector ▷ nextItemIndex")
              nextItem = items[nextItemIndex,]
              concerto.log(nextItem, "eval@next_item_selector ▷ nextItem")
              nextItemSafe = getSafeItem(nextItem)

            node: 105
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1100
            value: null
            node: 105
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1101
            value: '0'
            node: 105
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1102
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: cbControl
            pointer: '0'
            pointerVariable: cbControl
          -
            class_name: TestNodePort
            id: 1103
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: cbGroup
            pointer: '0'
            pointerVariable: cbGroup
          -
            class_name: TestNodePort
            id: 1104
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1105
            value: 'NULL'
            node: 105
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1106
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: paramBank
            pointer: '1'
            pointerVariable: paramBank
          -
            class_name: TestNodePort
            id: 1107
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1108
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: theta
            pointer: '1'
            pointerVariable: theta
          -
            class_name: TestNodePort
            id: 1109
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: nextItem
            pointer: '1'
            pointerVariable: item
          -
            class_name: TestNodePort
            id: 1110
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: nextItemIndex
            pointer: '1'
            pointerVariable: itemIndex
          -
            class_name: TestNodePort
            id: 1111
            value: ''
            node: 105
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: nextItemSafe
            pointer: '0'
            pointerVariable: nextItemSafe
      -
        class_name: TestNode
        id: 106
        title: 'show item'
        type: 0
        posX: 16082
        posY: 15117
        flowTest: 20
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1112
            value: |
              getTemplateParams = function(itemSafe, templateParams, responseRequired, responseRequiredAlert) {
                templateParams$items = data.frame(itemSafe)
                templateParams$responseRequired = responseRequired
                templateParams$responseRequiredAlert = responseRequiredAlert

                return(templateParams)
              }

              getTimeLimit = function(testTimeStarted, testTimeLimit, itemTimeLimit) {
                limit = 0
                startedAgo = as.numeric(Sys.time()) - testTimeStarted
                testTimeLeft = 0
                if(testTimeLimit > 0) {
                  testTimeLeft = max(testTimeLimit - startedAgo, 1)
                  limit = testTimeLeft
                }
                if(itemTimeLimit > 0) {
                  if(limit > 0) {
                    limit = min(limit, itemTimeLimit)
                  } else {
                    limit = itemTimeLimit
                  }
                }
                return(limit)
              }

              if(!concerto.template.isResponseQueued()) {
                params = getTemplateParams(itemSafe, templateParams, settings$responseRequired, settings$responseRequiredAlert)
                if(!is.na(settings$itemTemplateParamsModule) && settings$itemTemplateParamsModule != "") {
                  params = concerto.test.run(settings$itemTemplateParamsModule, params=list(
                    params = params,
                    item = item
                  ))$params
                }
              }

              response = concerto.template.show(
                settings$itemTemplate,
                params=params,
                timeLimit=getTimeLimit(
                  testTimeStarted,
                  as.numeric(settings$testTimeLimit),
                  as.numeric(settings$itemTimeLimit)
                )
              )

              .branch = "submitted"
              if(response$isTimeout == 1) { .branch = "outOfTime" }

            node: 106
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1113
            value: null
            node: 106
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1114
            value: '0'
            node: 106
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '0'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1115
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: outOfTime
            pointer: '0'
            pointerVariable: outOfTime
          -
            class_name: TestNodePort
            id: 1116
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: submitted
            pointer: '0'
            pointerVariable: submitted
          -
            class_name: TestNodePort
            id: 1117
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: .branch
            pointer: '0'
            pointerVariable: .branch
          -
            class_name: TestNodePort
            id: 1118
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: response
            pointer: '1'
            pointerVariable: response
          -
            class_name: TestNodePort
            id: 1119
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: item
            pointer: '1'
            pointerVariable: item
          -
            class_name: TestNodePort
            id: 1120
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemSafe
            pointer: '0'
            pointerVariable: itemSafe
          -
            class_name: TestNodePort
            id: 1121
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1122
            value: c.getDynamicInputs()
            node: 106
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: templateParams
            pointer: '0'
            pointerVariable: templateParams
          -
            class_name: TestNodePort
            id: 1123
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLeft
            pointer: '1'
            pointerVariable: testTimeLeft
          -
            class_name: TestNodePort
            id: 1124
            value: ''
            node: 106
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeStarted
            pointer: '1'
            pointerVariable: testTimeStarted
      -
        class_name: TestNode
        id: 107
        title: scoring
        type: 0
        posX: 16495
        posY: 15147
        flowTest: 20
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1125
            value: |
              library(catR)

              getResponseCatValue = function(item, response) {
                defaultCatValue = 0
                if(!is.null(response)) {
                  responseOptions = fromJSON(item$responseOptions)
                  if(responseOptions$type == "options" && length(responseOptions$options) > 0) {
                    for(i in 1:length(responseOptions$options)) {
                      option = responseOptions$options[[i]]
                      if(option$response == response) {
                        defaultCatValue = as.numeric(option$catValue)
                        break
                      }
                    }
                  }
                }

                catValue = defaultCatValue
                if(!is.na(settings$responseCatValueModule) && settings$responseCatValueModule != "") {
                  catValue = concerto.test.run(settings$responseCatValueModule, params=list(
                    item=item,
                    response=response,
                    defaultCatValue=defaultCatValue
                  ))$catValue
                }
                return(catValue)
              }

              responseRaw = response[[paste0("r",item$id)]]
              responseCatValue = getResponseCatValue(item, responseRaw)
              responses = c(responses, responseCatValue)
              itemsAdministered = unique(c(itemsAdministered, itemIndex))
              paramBankAdministered = paramBank
              if(dim(items)[1] > 1) {
                paramBankAdministered = paramBank[itemsAdministered,]
              }
              concerto.log(itemsAdministered, "eval@scoring ▷ itemsAdministered")
              concerto.log(responses, "eval@scoring ▷ responses")
              theta <- thetaEst(matrix(paramBankAdministered, ncol=as.numeric(settings$itemParamsNum), byrow=F), responses, model=settings$model, method=settings$scoringMethod)
              concerto.log(theta, "eval@scoring ▷ theta")
              sem <- semTheta(theta, matrix(paramBankAdministered, ncol=as.numeric(settings$itemParamsNum), byrow=F), responses, model=settings$model)
              concerto.log(sem, "eval@scoring ▷ SEM")
            node: 107
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1126
            value: null
            node: 107
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1127
            value: '0'
            node: 107
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1128
            value: 'NULL'
            node: 107
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responses
            pointer: '1'
            pointerVariable: responses
          -
            class_name: TestNodePort
            id: 1129
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: item
            pointer: '1'
            pointerVariable: item
          -
            class_name: TestNodePort
            id: 1130
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemIndex
            pointer: '1'
            pointerVariable: itemIndex
          -
            class_name: TestNodePort
            id: 1131
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1132
            value: 'NULL'
            node: 107
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1133
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: paramBank
            pointer: '1'
            pointerVariable: paramBank
          -
            class_name: TestNodePort
            id: 1134
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: response
            pointer: '1'
            pointerVariable: response
          -
            class_name: TestNodePort
            id: 1135
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1139
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: responseCatValue
            pointer: '0'
            pointerVariable: correct
          -
            class_name: TestNodePort
            id: 1140
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: responses
            pointer: '1'
            pointerVariable: responses
          -
            class_name: TestNodePort
            id: 1141
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: sem
            pointer: '1'
            pointerVariable: sem
          -
            class_name: TestNodePort
            id: 1142
            value: ''
            node: 107
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: theta
            pointer: '1'
            pointerVariable: theta
      -
        class_name: TestNode
        id: 108
        title: 'response processor'
        type: 0
        posX: 16890
        posY: 15125
        flowTest: 20
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1143
            value: |
              getSessionId = function(session) {
                id = 0
                if(!is.null(session) && is.list(session)) {
                  id = session$id
                } else {
                  id = paste0("i",concerto$session$id)
                }
                return(id)
              }

              saveResponse = function(responseBank, session, response, responseCatValue, item, theta, sem) {
                responseBank = fromJSON(responseBank)
                if(is.null(responseBank$table)) {
                  concerto.log("eval@response_processor ▷ no response bank defined, skipping response saving")
                  return(NULL)
                }

                sql = "
              INSERT INTO {{table}}
              ({{itemIdColumn}}, {{responseColumn}}, {{responseCatValueColumn}}, {{timeTakenColumn}}, {{sessionIdColumn}}, {{thetaColumn}}, {{semColumn}})
              VALUES ({{itemId}}, '{{responseValue}}', {{responseCatValue}}, {{timeTaken}}, '{{sessionId}}', {{theta}}, {{sem}})
              "
                concerto.table.query(sql, list(
                  table=responseBank$table,
                  sessionIdColumn=responseBank$columns$session_id,
                  sessionId=getSessionId(session),
                  itemIdColumn=responseBank$columns$item_id,
                  itemId=item$id,
                  responseColumn=responseBank$columns$response,
                  responseValue=response[[paste0("r",item$id)]],
                  responseCatValueColumn=responseBank$columns$catValue,
                  responseCatValue=responseCatValue,
                  timeTakenColumn=responseBank$columns$timeTaken,
                  timeTaken=response$timeTaken, #could use time difference
                  thetaColumn=responseBank$columns$theta,
                  theta=theta,
                  semColumn=responseBank$columns$sem,
                  sem=sem
                ))
                return(concerto.table.lastInsertId())
              }

              itemsAdministered = unique(c(itemsAdministered, itemIndex))
              responseId = saveResponse(settings$responseBank, session, response, responseCatValue, item, theta, sem)

            node: 108
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1144
            value: null
            node: 108
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1145
            value: '0'
            node: 108
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1146
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseCatValue
            pointer: '0'
            pointerVariable: correct
          -
            class_name: TestNodePort
            id: 1147
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: item
            pointer: '1'
            pointerVariable: item
          -
            class_name: TestNodePort
            id: 1148
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemIndex
            pointer: '1'
            pointerVariable: itemIndex
          -
            class_name: TestNodePort
            id: 1149
            value: 'NULL'
            node: 108
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1150
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: response
            pointer: '1'
            pointerVariable: response
          -
            class_name: TestNodePort
            id: 1151
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: sem
            pointer: '1'
            pointerVariable: sem
          -
            class_name: TestNodePort
            id: 1152
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: session
            pointer: '1'
            pointerVariable: session
          -
            class_name: TestNodePort
            id: 1153
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1154
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: theta
            pointer: '1'
            pointerVariable: theta
          -
            class_name: TestNodePort
            id: 1155
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1156
            value: ''
            node: 108
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: responseId
            pointer: '0'
            pointerVariable: responseId
      -
        class_name: TestNode
        id: 109
        title: 'status check'
        type: 0
        posX: 16200
        posY: 15671
        flowTest: 20
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1157
            value: |
              isOutOfTime = function(testTimeLimit, testTimeStarted, itemTimeLimit, itemTimeFullRequired) {
                startedAgo = as.numeric(Sys.time()) - testTimeStarted
                testTimeLeft = testTimeLimit - startedAgo
                if(testTimeLimit > 0) {
                  if(testTimeLeft <= 0) { return(T) }
                  if(testTimeLeft < itemTimeLimit && itemTimeFullRequired) { return(T) }
                }
                return(F)
              }

              getBranch = function(testTimeLimit, testTimeStarted, itemTimeLimit, itemTimeFullRequired, itemNumLimit, minAccuracy, itemsAdministered, itemsNum, sem) {
                if(isOutOfTime(testTimeLimit, testTimeStarted, itemTimeLimit, itemTimeFullRequired)) {
                  concerto.log("time out", "eval@status_check ▷ test status")
                  return("stop")
                }

                if(itemNumLimit > 0 && length(itemsAdministered) >= itemNumLimit || length(itemsAdministered) >= itemsNum) {
                  concerto.log("maximum items reached", "eval@status_check ▷ test status")
                  return("stop")
                }

                if(minAccuracy != 0 && minAccuracy >= sem) {
                  concerto.log("minimum accuracy", "eval@status_check ▷ test status")
                  return("stop")
                }
                concerto.log("continue", "eval@status_check ▷ test status")
                return("continue")
              }

              .branch = getBranch(
                as.numeric(settings$testTimeLimit),
                testTimeStarted,
                as.numeric(settings$itemTimeLimit),
                settings$itemTimeFullRequired == "1",
                as.numeric(settings$itemNumLimit),
                as.numeric(settings$minAccuracy),
                itemsAdministered,
                dim(items)[1],
                sem
              )

            node: 109
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1158
            value: null
            node: 109
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1159
            value: '0'
            node: 109
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '0'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1160
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1161
            value: 'NULL'
            node: 109
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1162
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: sem
            pointer: '1'
            pointerVariable: sem
          -
            class_name: TestNodePort
            id: 1163
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1164
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLeft
            pointer: '1'
            pointerVariable: testTimeLeft
          -
            class_name: TestNodePort
            id: 1165
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeStarted
            pointer: '1'
            pointerVariable: testTimeStarted
          -
            class_name: TestNodePort
            id: 1166
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: continue
            pointer: '0'
            pointerVariable: continue
          -
            class_name: TestNodePort
            id: 1167
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: stop
            pointer: '0'
            pointerVariable: stop
          -
            class_name: TestNodePort
            id: 1168
            value: ''
            node: 109
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: .branch
            pointer: '0'
            pointerVariable: .branch
    nodesConnections:
      -
        class_name: TestNodeConnection
        id: 127
        flowTest: 20
        sourceNode: 31
        sourcePort: null
        sourcePortObject: null
        destinationNode: 39
        destinationPort: null
        destinationPortObject: null
        returnFunction: ''
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 128
        flowTest: 20
        sourceNode: 31
        sourcePort: 367
        sourcePortObject:
          class_name: TestNodePort
          id: 367
          value: '[]'
          node: 31
          variable: 117
          variableObject:
            class_name: TestVariable
            id: 117
            name: itemBankItems
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '[]'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: itemBankItems
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 477
        destinationPortObject:
          class_name: TestNodePort
          id: 477
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemBankItems
          pointer: '0'
          pointerVariable: itemBankItems
        returnFunction: itemBankItems
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 129
        flowTest: 20
        sourceNode: 31
        sourcePort: 368
        sourcePortObject:
          class_name: TestNodePort
          id: 368
          value: null
          node: 31
          variable: 118
          variableObject:
            class_name: TestVariable
            id: 118
            name: itemBankTable
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: itemBankTable
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 478
        destinationPortObject:
          class_name: TestNodePort
          id: 478
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemBankTable
          pointer: '0'
          pointerVariable: itemBankTable
        returnFunction: itemBankTable
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 130
        flowTest: 20
        sourceNode: 31
        sourcePort: 366
        sourcePortObject:
          class_name: TestNodePort
          id: 366
          value: direct
          node: 31
          variable: 116
          variableObject:
            class_name: TestVariable
            id: 116
            name: itemBankType
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: direct
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: itemBankType
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 479
        destinationPortObject:
          class_name: TestNodePort
          id: 479
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemBankType
          pointer: '0'
          pointerVariable: itemBankType
        returnFunction: itemBankType
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 131
        flowTest: 20
        sourceNode: 31
        sourcePort: 373
        sourcePortObject:
          class_name: TestNodePort
          id: 373
          value: '[]'
          node: 31
          variable: 123
          variableObject:
            class_name: TestVariable
            id: 123
            name: contentBalancing
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '[]'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: contentBalancing
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 476
        destinationPortObject:
          class_name: TestNodePort
          id: 476
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: contentBalancing
          pointer: '0'
          pointerVariable: contentBalancing
        returnFunction: contentBalancing
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 132
        flowTest: 20
        sourceNode: 31
        sourcePort: 374
        sourcePortObject:
          class_name: TestNodePort
          id: 374
          value: '0'
          node: 31
          variable: 124
          variableObject:
            class_name: TestVariable
            id: 124
            name: startingTheta
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: startingTheta
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 489
        destinationPortObject:
          class_name: TestNodePort
          id: 489
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: startingTheta
          pointer: '0'
          pointerVariable: startingTheta
        returnFunction: startingTheta
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 135
        flowTest: 20
        sourceNode: 31
        sourcePort: 369
        sourcePortObject:
          class_name: TestNodePort
          id: 369
          value: '0'
          node: 31
          variable: 119
          variableObject:
            class_name: TestVariable
            id: 119
            name: testTimeLimit
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: testTimeLimit
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 490
        destinationPortObject:
          class_name: TestNodePort
          id: 490
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: testTimeLimit
          pointer: '0'
          pointerVariable: testTimeLimit
        returnFunction: testTimeLimit
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 136
        flowTest: 20
        sourceNode: 31
        sourcePort: 372
        sourcePortObject:
          class_name: TestNodePort
          id: 372
          value: '0'
          node: 31
          variable: 122
          variableObject:
            class_name: TestVariable
            id: 122
            name: testTimeLimitOffset
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: testTimeLimitOffset
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 491
        destinationPortObject:
          class_name: TestNodePort
          id: 491
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: testTimeLimitOffset
          pointer: '0'
          pointerVariable: testTimeLimitOffset
        returnFunction: testTimeLimitOffset
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 152
        flowTest: 20
        sourceNode: 31
        sourcePort: 381
        sourcePortObject:
          class_name: TestNodePort
          id: 381
          value: '0'
          node: 31
          variable: 131
          variableObject:
            class_name: TestVariable
            id: 131
            name: itemNumLimit
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: itemNumLimit
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 480
        destinationPortObject:
          class_name: TestNodePort
          id: 480
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemNumLimit
          pointer: '0'
          pointerVariable: itemNumLimit
        returnFunction: itemNumLimit
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 153
        flowTest: 20
        sourceNode: 31
        sourcePort: 379
        sourcePortObject:
          class_name: TestNodePort
          id: 379
          value: null
          node: 31
          variable: 129
          variableObject:
            class_name: TestVariable
            id: 129
            name: itemTemplate
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: itemTemplate
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 481
        destinationPortObject:
          class_name: TestNodePort
          id: 481
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemTemplate
          pointer: '0'
          pointerVariable: itemTemplate
        returnFunction: itemTemplate
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 154
        flowTest: 20
        sourceNode: 31
        sourcePort: 371
        sourcePortObject:
          class_name: TestNodePort
          id: 371
          value: '0'
          node: 31
          variable: 121
          variableObject:
            class_name: TestVariable
            id: 121
            name: itemTimeFullRequired
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: itemTimeFullRequired
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 482
        destinationPortObject:
          class_name: TestNodePort
          id: 482
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemTimeFullRequired
          pointer: '0'
          pointerVariable: itemTimeFullRequired
        returnFunction: itemTimeFullRequired
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 155
        flowTest: 20
        sourceNode: 31
        sourcePort: 370
        sourcePortObject:
          class_name: TestNodePort
          id: 370
          value: '0'
          node: 31
          variable: 120
          variableObject:
            class_name: TestVariable
            id: 120
            name: itemTimeLimit
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: itemTimeLimit
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 483
        destinationPortObject:
          class_name: TestNodePort
          id: 483
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemTimeLimit
          pointer: '0'
          pointerVariable: itemTimeLimit
        returnFunction: itemTimeLimit
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 156
        flowTest: 20
        sourceNode: 31
        sourcePort: 382
        sourcePortObject:
          class_name: TestNodePort
          id: 382
          value: '1'
          node: 31
          variable: 132
          variableObject:
            class_name: TestVariable
            id: 132
            name: minAccuracy
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '1'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: minAccuracy
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 484
        destinationPortObject:
          class_name: TestNodePort
          id: 484
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: minAccuracy
          pointer: '0'
          pointerVariable: minAccuracy
        returnFunction: minAccuracy
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 157
        flowTest: 20
        sourceNode: 31
        sourcePort: 375
        sourcePortObject:
          class_name: TestNodePort
          id: 375
          value: MFI
          node: 31
          variable: 125
          variableObject:
            class_name: TestVariable
            id: 125
            name: nextItemCriterion
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: MFI
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: nextItemCriterion
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 485
        destinationPortObject:
          class_name: TestNodePort
          id: 485
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: nextItemCriterion
          pointer: '0'
          pointerVariable: nextItemCriterion
        returnFunction: nextItemCriterion
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 158
        flowTest: 20
        sourceNode: 31
        sourcePort: 376
        sourcePortObject:
          class_name: TestNodePort
          id: 376
          value: '1'
          node: 31
          variable: 126
          variableObject:
            class_name: TestVariable
            id: 126
            name: nextItemRandomesque
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '1'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: nextItemRandomesque
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 486
        destinationPortObject:
          class_name: TestNodePort
          id: 486
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: nextItemRandomesque
          pointer: '0'
          pointerVariable: nextItemRandomesque
        returnFunction: nextItemRandomesque
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 159
        flowTest: 20
        sourceNode: 31
        sourcePort: 378
        sourcePortObject:
          class_name: TestNodePort
          id: 378
          value: null
          node: 31
          variable: 128
          variableObject:
            class_name: TestVariable
            id: 128
            name: responseBank
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: responseBank
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 487
        destinationPortObject:
          class_name: TestNodePort
          id: 487
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseBank
          pointer: '0'
          pointerVariable: responseBank
        returnFunction: responseBank
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 160
        flowTest: 20
        sourceNode: 31
        sourcePort: 377
        sourcePortObject:
          class_name: TestNodePort
          id: 377
          value: BM
          node: 31
          variable: 127
          variableObject:
            class_name: TestVariable
            id: 127
            name: scoringMethod
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: BM
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '1'
          name: scoringMethod
          pointer: '0'
          pointerVariable: ''
        destinationNode: 39
        destinationPort: 488
        destinationPortObject:
          class_name: TestNodePort
          id: 488
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: scoringMethod
          pointer: '0'
          pointerVariable: scoringMethod
        returnFunction: scoringMethod
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 164
        flowTest: 20
        sourceNode: 31
        sourcePort: 387
        sourcePortObject:
          class_name: TestNodePort
          id: 387
          value: null
          node: 31
          variable: 137
          variableObject:
            class_name: TestVariable
            id: 137
            name: responseRequired
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: responseRequired
          pointer: '0'
          pointerVariable: responseRequired
        destinationNode: 39
        destinationPort: 492
        destinationPortObject:
          class_name: TestNodePort
          id: 492
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseRequired
          pointer: '0'
          pointerVariable: responseRequired
        returnFunction: responseRequired
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 165
        flowTest: 20
        sourceNode: 31
        sourcePort: 388
        sourcePortObject:
          class_name: TestNodePort
          id: 388
          value: null
          node: 31
          variable: 138
          variableObject:
            class_name: TestVariable
            id: 138
            name: responseRequiredAlert
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: responseRequiredAlert
          pointer: '0'
          pointerVariable: responseRequiredAlert
        destinationNode: 39
        destinationPort: 493
        destinationPortObject:
          class_name: TestNodePort
          id: 493
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseRequiredAlert
          pointer: '0'
          pointerVariable: responseRequiredAlert
        returnFunction: responseRequiredAlert
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 262
        flowTest: 20
        sourceNode: 31
        sourcePort: 950
        sourcePortObject:
          class_name: TestNodePort
          id: 950
          value: null
          node: 31
          variable: 492
          variableObject:
            class_name: TestVariable
            id: 492
            name: itemTemplateParamsModule
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemTemplateParamsModule
          pointer: '0'
          pointerVariable: itemTemplateParamsModule
        destinationNode: 39
        destinationPort: 951
        destinationPortObject:
          class_name: TestNodePort
          id: 951
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemTemplateParamsModule
          pointer: '0'
          pointerVariable: itemTemplateParamsModule
        returnFunction: itemTemplateParamsModule
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 274
        flowTest: 20
        sourceNode: 104
        sourcePort: 1090
        sourcePortObject:
          class_name: TestNodePort
          id: 1090
          value: ''
          node: 104
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: cbControl
          pointer: '0'
          pointerVariable: cbControl
        destinationNode: 105
        destinationPort: 1102
        destinationPortObject:
          class_name: TestNodePort
          id: 1102
          value: ''
          node: 105
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: cbControl
          pointer: '0'
          pointerVariable: cbControl
        returnFunction: cbControl
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 275
        flowTest: 20
        sourceNode: 104
        sourcePort: 1091
        sourcePortObject:
          class_name: TestNodePort
          id: 1091
          value: ''
          node: 104
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: cbGroup
          pointer: '0'
          pointerVariable: cbGroup
        destinationNode: 105
        destinationPort: 1103
        destinationPortObject:
          class_name: TestNodePort
          id: 1103
          value: ''
          node: 105
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: cbGroup
          pointer: '0'
          pointerVariable: cbGroup
        returnFunction: cbGroup
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 276
        flowTest: 20
        sourceNode: 105
        sourcePort: 1111
        sourcePortObject:
          class_name: TestNodePort
          id: 1111
          value: ''
          node: 105
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: nextItemSafe
          pointer: '0'
          pointerVariable: nextItemSafe
        destinationNode: 106
        destinationPort: 1120
        destinationPortObject:
          class_name: TestNodePort
          id: 1120
          value: ''
          node: 106
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemSafe
          pointer: '0'
          pointerVariable: itemSafe
        returnFunction: nextItemSafe
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 277
        flowTest: 20
        sourceNode: 104
        sourcePort: 1088
        sourcePortObject:
          class_name: TestNodePort
          id: 1088
          value: '0'
          node: 104
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 105
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 278
        flowTest: 20
        sourceNode: 104
        sourcePort: 1090
        sourcePortObject:
          class_name: TestNodePort
          id: 1090
          value: ''
          node: 104
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: cbControl
          pointer: '0'
          pointerVariable: cbControl
        destinationNode: 105
        destinationPort: 1102
        destinationPortObject:
          class_name: TestNodePort
          id: 1102
          value: ''
          node: 105
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: cbControl
          pointer: '0'
          pointerVariable: cbControl
        returnFunction: cbControl
        automatic: '1'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 279
        flowTest: 20
        sourceNode: 104
        sourcePort: 1091
        sourcePortObject:
          class_name: TestNodePort
          id: 1091
          value: ''
          node: 104
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: cbGroup
          pointer: '0'
          pointerVariable: cbGroup
        destinationNode: 105
        destinationPort: 1103
        destinationPortObject:
          class_name: TestNodePort
          id: 1103
          value: ''
          node: 105
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: cbGroup
          pointer: '0'
          pointerVariable: cbGroup
        returnFunction: cbGroup
        automatic: '1'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 280
        flowTest: 20
        sourceNode: 105
        sourcePort: 1101
        sourcePortObject:
          class_name: TestNodePort
          id: 1101
          value: '0'
          node: 105
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 106
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 281
        flowTest: 20
        sourceNode: 106
        sourcePort: 1115
        sourcePortObject:
          class_name: TestNodePort
          id: 1115
          value: ''
          node: 106
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: outOfTime
          pointer: '0'
          pointerVariable: outOfTime
        destinationNode: 107
        destinationPort: null
        destinationPortObject: null
        returnFunction: outOfTime
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 282
        flowTest: 20
        sourceNode: 106
        sourcePort: 1116
        sourcePortObject:
          class_name: TestNodePort
          id: 1116
          value: ''
          node: 106
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: submitted
          pointer: '0'
          pointerVariable: submitted
        destinationNode: 107
        destinationPort: null
        destinationPortObject: null
        returnFunction: submitted
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 288
        flowTest: 20
        sourceNode: 108
        sourcePort: 1145
        sourcePortObject:
          class_name: TestNodePort
          id: 1145
          value: '0'
          node: 108
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 109
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 289
        flowTest: 20
        sourceNode: 109
        sourcePort: 1166
        sourcePortObject:
          class_name: TestNodePort
          id: 1166
          value: ''
          node: 109
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: continue
          pointer: '0'
          pointerVariable: continue
        destinationNode: 105
        destinationPort: null
        destinationPortObject: null
        returnFunction: continue
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 290
        flowTest: 20
        sourceNode: 109
        sourcePort: 1167
        sourcePortObject:
          class_name: TestNodePort
          id: 1167
          value: ''
          node: 109
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: stop
          pointer: '0'
          pointerVariable: stop
        destinationNode: 32
        destinationPort: null
        destinationPortObject: null
        returnFunction: stop
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 302
        flowTest: 20
        sourceNode: 39
        sourcePort: 475
        sourcePortObject:
          class_name: TestNodePort
          id: 475
          value: '0'
          node: 39
          variable: 112
          variableObject:
            class_name: TestVariable
            id: 112
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 19
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 104
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 303
        flowTest: 20
        sourceNode: 31
        sourcePort: 1250
        sourcePortObject:
          class_name: TestNodePort
          id: 1250
          value: null
          node: 31
          variable: 508
          variableObject:
            class_name: TestVariable
            id: 508
            name: model
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '0'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: model
          pointer: '0'
          pointerVariable: model
        destinationNode: 39
        destinationPort: 1251
        destinationPortObject:
          class_name: TestNodePort
          id: 1251
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: model
          pointer: '0'
          pointerVariable: model
        returnFunction: 'if(model == "dichotomous") { NULL } else { model }'
        automatic: '0'
        defaultReturnFunction: '0'
      -
        class_name: TestNodeConnection
        id: 304
        flowTest: 20
        sourceNode: 107
        sourcePort: 1127
        sourcePortObject:
          class_name: TestNodePort
          id: 1127
          value: '0'
          node: 107
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 108
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 306
        flowTest: 20
        sourceNode: 107
        sourcePort: 1139
        sourcePortObject:
          class_name: TestNodePort
          id: 1139
          value: ''
          node: 107
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '0'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: responseCatValue
          pointer: '0'
          pointerVariable: correct
        destinationNode: 108
        destinationPort: 1146
        destinationPortObject:
          class_name: TestNodePort
          id: 1146
          value: ''
          node: 108
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '0'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseCatValue
          pointer: '0'
          pointerVariable: correct
        returnFunction: responseCatValue
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 310
        flowTest: 20
        sourceNode: 31
        sourcePort: 1303
        sourcePortObject:
          class_name: TestNodePort
          id: 1303
          value: null
          node: 31
          variable: 511
          variableObject:
            class_name: TestVariable
            id: 511
            name: responseCatValueModule
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: responseCatValueModule
          pointer: '0'
          pointerVariable: responseCatValueModule
        destinationNode: 39
        destinationPort: 1304
        destinationPortObject:
          class_name: TestNodePort
          id: 1304
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseCatValueModule
          pointer: '0'
          pointerVariable: responseCatValueModule
        returnFunction: responseCatValueModule
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 311
        flowTest: 20
        sourceNode: 31
        sourcePort: 1324
        sourcePortObject:
          class_name: TestNodePort
          id: 1324
          value: '9'
          node: 31
          variable: 513
          variableObject:
            class_name: TestVariable
            id: 513
            name: itemParamsNum
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '9'
            test: 20
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemParamsNum
          pointer: '0'
          pointerVariable: itemParamsNum
        destinationNode: 39
        destinationPort: 1325
        destinationPortObject:
          class_name: TestNodePort
          id: 1325
          value: ''
          node: 39
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemParamsNum
          pointer: '0'
          pointerVariable: itemParamsNum
        returnFunction: itemParamsNum
        automatic: '0'
        defaultReturnFunction: '1'
    tags: ''
    groups: ''
    starterContent: true
    hash: 1838bedcfca7c67376d661d4cde0c7b20c03c0c3
  -
    class_name: Test
    id: 7
    name: _createUser
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      library(digest)

      formatFields = function(login, password, userBankEncryption, enabled, extraFields) {
        fields = list(
          login=login,
          password=password,
          enabled=enabled
        )
        if(userBankEncryption != "plain") {
          fields$password = digest(password, userBankEncryption, serialize=F)
        }
        if(is.list(extraFields)) {
          for(name in ls(extraFields)) {
            fields[[name]] = extraFields[[name]]
          }
        }
        return(fields)
      }

      checkLoginExist = function(login, tableMap) {
        sql = "
      SELECT * FROM {{table}}
      WHERE {{loginColumn}}='{{login}}'
      "
        user = concerto.table.query(sql, params=list(
          table=tableMap$table,
          loginColumn=tableMap$columns$login,
          login=login
        ))

        return(dim(user)[1]>0)
      }

      getMappedColumns = function(fieldNames, tableMap) {
        cols = c()
        for(i in 1:length(fieldNames)) {
          col = tableMap$columns[[fieldNames[i]]]
          if(!is.null(col)) {
            cols=c(cols,col)
            next
          }
          cols=c(cols,fieldNames[i])
        }
        return(cols)
      }

      insertUser = function(fields, tableMap) {
        sql = paste0(
          "INSERT INTO {{table}} (",
          paste(getMappedColumns(ls(fields), tableMap), collapse=","),
          ") VALUES (",
          paste0("'{{",ls(fields),"}}'", collapse=","),
          ")"
        )
        concerto.table.query(sql, params=append(fields, list(
          table=tableMap$table
        )))
        userId = concerto.table.lastInsertId()
        concerto.log(userId, title="_createUser ▷ new user id")

        sql="SELECT * FROM {{table}} WHERE {{idColumn}}={{id}}"
        user=concerto.table.query(sql,params=list(
          table=tableMap$table,
          idColumn=tableMap$columns$id,
          id=userId
        ))
        concerto.log(user, title="_createUser ▷ inserted user")
        return(user)
      }

      user=NULL
      if(is.na(password)) { password = "" }
      tableMap = fromJSON(userBankTable)
      fields = formatFields(login, password, userBankEncryption, enabled, extraFields)
      if(checkLoginExist(login, tableMap)) {
        concerto.log(login, title="_createUser ▷ login already exist")
        .branch = "loginAlreadyExist"
      } else {
        concerto.log(login, title="_createUser ▷ login doesn't exist and can be created")
        user=insertUser(fields, tableMap)
        .branch = "created"
      }

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 41
        name: created
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 42
        name: userBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 43
        name: login
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 44
        name: password
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 45
        name: enabled
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '1'
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 46
        name: loginAlreadyExist
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 47
        name: .branch
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 48
        name: user
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 49
        name: userBankEncryption
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
      -
        class_name: TestVariable
        id: 50
        name: extraFields
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 7
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: bab9cdf774e7a6ec1e6019a76ee3306d4421afa3
  -
    class_name: Test
    id: 46
    name: _dataManipulation
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      getWhereClause = function(where, type) {
        if((is.na(where) || where == "") && type != "update") {
          elems = NULL
          for(name in .dynamicInputs) {
            elem = concerto.table.insertParams("{{name}}='{{value}}'", list(
              name=name,
              value=get(name)
            ))
            elems = c(elems, elem)
          }
          if(length(elems) > 0) {
            elemsJoined = paste(elems, collapse=" AND ")
            return(paste0("WHERE ", elemsJoined))
          }
        } else if(length(where) == 1) {
          id = suppressWarnings(as.numeric(where))
          if(is.character(where) && is.na(id)) {
            params = list()
            for(name in .dynamicInputs) {
              params[[name]] = get(name)
            }
            elemsJoined = concerto.table.insertParams(where, params)
            return(paste0("WHERE ", elemsJoined))
          } else if(is.numeric(id)) {
            return(paste0("WHERE id=",where))
          }
        }
        return(NULL)
      }

      getSetClause = function(set, type) {
        if(is.na(set) || set == "") {
          if(type == "insert") {
            cols = NULL
            vals = NULL
            for(name in .dynamicInputs) {
              cols = c(cols, name)
              val = concerto.table.insertParams("'{{value}}'", list(
                value=get(name)
              ))
              vals = c(vals, val)
            }
            if(length(cols) > 0) {
              colsJoined = paste(cols, collapse=", ")
              valsJoined = paste(vals, collapse=", ")
              return(paste0("(",colsJoined,") VALUES (",valsJoined,")"))
            }
          } else {
            elems = NULL
            for(name in .dynamicInputs) {
              elem = concerto.table.insertParams("{{name}}='{{value}}'", list(
                name=name,
                value=get(name)
              ))
              elems = c(elems, elem)
            }
            if(length(elems) > 0) {
              elemsJoined = paste(elems, collapse=", ")
              return(paste0("SET ", elemsJoined))
            }
          }
        } else if(length(set) == 1 && is.character(set)) {
          params = list()
          for(name in .dynamicInputs) {
            params[[name]] = get(name)
          }
          elemsJoined = concerto.table.insertParams(set, params)
          return(paste0("SET ", elemsJoined))
        }
        return(NULL)
      }

      getCustomQuery = function(queryString) {
        params = list()
        for(name in .dynamicInputs) {
          params[[name]] = get(name)
        }
        queryString = concerto.table.insertParams(queryString, params)
        return(queryString)
      }

      result = NULL
      if(queryType == "select") {
        queryString = "SELECT * FROM {{table}}"
        whereString = getWhereClause(whereClause, queryType)
        if(!is.null(whereString)) {
          queryString = paste0(queryString, " ", whereString)
        }
        result = concerto.table.query(queryString, params=list(
          table=table
        ))
      } else if(queryType == "insert") {
        queryString = "INSERT INTO {{table}}"
        setString = getSetClause(setClause, queryType)
        if(!is.null(setString)) {
          queryString = paste0(queryString, " ", setString)
        }
        result = concerto.table.query(queryString, params=list(
          table=table
        ))
      } else if(queryType == "update") {
        queryString = "UPDATE {{table}}"
        setString = getSetClause(setClause, queryType)
        if(!is.null(setString)) {
          queryString = paste0(queryString, " ", setString)
        } else {
          stop("No 'set' clause for UPDATE query")
        }
        whereString = getWhereClause(whereClause, queryType)
        if(!is.null(whereString)) {
          queryString = paste0(queryString, " ", whereString)
        }
        result = concerto.table.query(queryString, params=list(
          table=table
        ))
      } else if(queryType == "delete") {
        queryString = "DELETE FROM {{table}}"
        whereString = getWhereClause(whereClause, queryType)
        if(!is.null(whereString)) {
          queryString = paste0(queryString, " ", whereString)
        }
        result = concerto.table.query(queryString, params=list(
          table=table
        ))
      } else {
        queryString = getCustomQuery(queryString)
        result = concerto.table.query(queryString)
      }

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 454
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 46
        parentVariable: null
      -
        class_name: TestVariable
        id: 455
        name: queryType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 46
        parentVariable: null
      -
        class_name: TestVariable
        id: 456
        name: queryString
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 46
        parentVariable: null
      -
        class_name: TestVariable
        id: 457
        name: result
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 46
        parentVariable: null
      -
        class_name: TestVariable
        id: 458
        name: table
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 46
        parentVariable: null
      -
        class_name: TestVariable
        id: 459
        name: whereClause
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 46
        parentVariable: null
      -
        class_name: TestVariable
        id: 460
        name: setClause
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 46
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 91d92eb7440b32185ff1c03d4f4717b8b6a100f4
  -
    class_name: Test
    id: 36
    name: _form
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      getTemplateParams = function(templateParams, fields, initialValues) {
        if(!is.list(templateParams)) {
          templateParams = list()
        }
        for(name in .dynamicInputs) {
          templateParams[[name]] = get(name)
        }
        templateParams$fields = fields
        templateParams$initialValues = initialValues
        return(templateParams)
      }

      response = concerto5:::concerto.template.show(
        template,
        params=getTemplateParams(templateParams, fields, initialValues)
      )

      for(.name in .dynamicReturns) {
        assign(.name, response[[.name]])
      }
      if(".branch" %in% .dynamicReturns) {
        .branch = response$buttonPressed
        if(!(.branch %in% .dynamicBranches)) { .branch = "out" }
      }

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 332
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 36
        parentVariable: null
      -
        class_name: TestVariable
        id: 333
        name: fields
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 36
        parentVariable: null
      -
        class_name: TestVariable
        id: 334
        name: templateParams
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 36
        parentVariable: null
      -
        class_name: TestVariable
        id: 335
        name: response
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 36
        parentVariable: null
      -
        class_name: TestVariable
        id: 336
        name: template
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 36
        parentVariable: null
      -
        class_name: TestVariable
        id: 337
        name: initialValues
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{}'
        test: 36
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 8254738952e48f2d8a4975a5631db9594e643395
  -
    class_name: Test
    id: 30
    name: _linearTest
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 2
    code: null
    description: ''
    variables:
      -
        class_name: TestVariable
        id: 244
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 245
        name: itemBankItems
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 246
        name: itemBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 247
        name: itemBankType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 248
        name: testTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 249
        name: testTimeLimitOffset
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 250
        name: order
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 252
        name: itemTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 253
        name: itemTemplate
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 255
        name: responseBank
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 256
        name: session
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 258
        name: itemNumLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 259
        name: itemTimeFullRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 261
        name: canGoBack
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 262
        name: responseRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 263
        name: responseRequiredAlert
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 264
        name: scores
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 30
        parentVariable: null
      -
        class_name: TestVariable
        id: 483
        name: itemsPerPage
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '1'
        test: 30
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes:
      -
        class_name: TestNode
        id: 41
        title: ''
        type: 1
        posX: 14782
        posY: 14945
        flowTest: 30
        sourceTest: 30
        sourceTestName: _linearTest
        sourceTestDescription: ''
        ports:
          -
            class_name: TestNodePort
            id: 496
            value: null
            node: 41
            variable: 245
            variableObject:
              class_name: TestVariable
              id: 245
              name: itemBankItems
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemBankItems
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 497
            value: null
            node: 41
            variable: 246
            variableObject:
              class_name: TestVariable
              id: 246
              name: itemBankTable
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemBankTable
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 498
            value: null
            node: 41
            variable: 247
            variableObject:
              class_name: TestVariable
              id: 247
              name: itemBankType
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemBankType
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 499
            value: '0'
            node: 41
            variable: 248
            variableObject:
              class_name: TestVariable
              id: 248
              name: testTimeLimit
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: testTimeLimit
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 500
            value: '0'
            node: 41
            variable: 249
            variableObject:
              class_name: TestVariable
              id: 249
              name: testTimeLimitOffset
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: testTimeLimitOffset
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 501
            value: null
            node: 41
            variable: 250
            variableObject:
              class_name: TestVariable
              id: 250
              name: order
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: order
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 503
            value: '0'
            node: 41
            variable: 252
            variableObject:
              class_name: TestVariable
              id: 252
              name: itemTimeLimit
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemTimeLimit
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 504
            value: null
            node: 41
            variable: 253
            variableObject:
              class_name: TestVariable
              id: 253
              name: itemTemplate
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemTemplate
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 506
            value: null
            node: 41
            variable: 255
            variableObject:
              class_name: TestVariable
              id: 255
              name: responseBank
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: responseBank
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 507
            value: null
            node: 41
            variable: 256
            variableObject:
              class_name: TestVariable
              id: 256
              name: session
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: session
            pointer: '1'
            pointerVariable: session
          -
            class_name: TestNodePort
            id: 509
            value: null
            node: 41
            variable: 258
            variableObject:
              class_name: TestVariable
              id: 258
              name: itemNumLimit
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemNumLimit
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 510
            value: null
            node: 41
            variable: 259
            variableObject:
              class_name: TestVariable
              id: 259
              name: itemTimeFullRequired
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemTimeFullRequired
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 512
            value: '0'
            node: 41
            variable: 261
            variableObject:
              class_name: TestVariable
              id: 261
              name: canGoBack
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: canGoBack
            pointer: '0'
            pointerVariable: ''
          -
            class_name: TestNodePort
            id: 513
            value: null
            node: 41
            variable: 262
            variableObject:
              class_name: TestVariable
              id: 262
              name: responseRequired
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: responseRequired
            pointer: '0'
            pointerVariable: responseRequired
          -
            class_name: TestNodePort
            id: 514
            value: null
            node: 41
            variable: 263
            variableObject:
              class_name: TestVariable
              id: 263
              name: responseRequiredAlert
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: responseRequiredAlert
            pointer: '0'
            pointerVariable: responseRequiredAlert
          -
            class_name: TestNodePort
            id: 846
            value: '1'
            node: 41
            variable: 483
            variableObject:
              class_name: TestVariable
              id: 483
              name: itemsPerPage
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: '1'
              test: 30
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: itemsPerPage
            pointer: '0'
            pointerVariable: itemsPerPage
      -
        class_name: TestNode
        id: 42
        title: ''
        type: 2
        posX: 17000
        posY: 15568
        flowTest: 30
        sourceTest: 30
        sourceTestName: _linearTest
        sourceTestDescription: ''
        ports:
          -
            class_name: TestNodePort
            id: 515
            value: ''
            node: 42
            variable: 264
            variableObject:
              class_name: TestVariable
              id: 264
              name: scores
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 30
              parentVariable: null
            string: '0'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '0'
            name: scores
            pointer: '1'
            pointerVariable: traitScores
      -
        class_name: TestNode
        id: 49
        title: 'create settings'
        type: 0
        posX: 15223
        posY: 14939
        flowTest: 30
        sourceTest: 19
        sourceTestName: createList
        sourceTestDescription: 'List creation. Dynamic inputs will be used as list elements (input name as list key, input value as list value).'
        ports:
          -
            class_name: TestNodePort
            id: 592
            value: null
            node: 49
            variable: 113
            variableObject:
              class_name: TestVariable
              id: 113
              name: sourceList
              type: 0
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 19
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 0
            exposed: '0'
            name: sourceList
            pointer: '0'
            pointerVariable: sourceList
          -
            class_name: TestNodePort
            id: 593
            value: null
            node: 49
            variable: 114
            variableObject:
              class_name: TestVariable
              id: 114
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 19
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 1
            exposed: '1'
            name: result
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 594
            value: '0'
            node: 49
            variable: 112
            variableObject:
              class_name: TestVariable
              id: 112
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 19
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 595
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: canGoBack
            pointer: '0'
            pointerVariable: canGoBack
          -
            class_name: TestNodePort
            id: 596
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemBankItems
            pointer: '0'
            pointerVariable: itemBankItems
          -
            class_name: TestNodePort
            id: 597
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemBankTable
            pointer: '0'
            pointerVariable: itemBankTable
          -
            class_name: TestNodePort
            id: 598
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemBankType
            pointer: '0'
            pointerVariable: itemBankType
          -
            class_name: TestNodePort
            id: 599
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemNumLimit
            pointer: '0'
            pointerVariable: itemNumLimit
          -
            class_name: TestNodePort
            id: 600
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemTemplate
            pointer: '0'
            pointerVariable: itemTemplate
          -
            class_name: TestNodePort
            id: 601
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemTimeFullRequired
            pointer: '0'
            pointerVariable: itemTimeFullRequired
          -
            class_name: TestNodePort
            id: 602
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemTimeLimit
            pointer: '0'
            pointerVariable: itemTimeLimit
          -
            class_name: TestNodePort
            id: 603
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: order
            pointer: '0'
            pointerVariable: order
          -
            class_name: TestNodePort
            id: 604
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseBank
            pointer: '0'
            pointerVariable: responseBank
          -
            class_name: TestNodePort
            id: 605
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLimit
            pointer: '0'
            pointerVariable: testTimeLimit
          -
            class_name: TestNodePort
            id: 606
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLimitOffset
            pointer: '0'
            pointerVariable: testTimeLimitOffset
          -
            class_name: TestNodePort
            id: 607
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseRequired
            pointer: '0'
            pointerVariable: responseRequired
          -
            class_name: TestNodePort
            id: 608
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responseRequiedAlert
            pointer: '0'
            pointerVariable: responseRequiedAlert
          -
            class_name: TestNodePort
            id: 847
            value: ''
            node: 49
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsPerPage
            pointer: '0'
            pointerVariable: itemsPerPage
      -
        class_name: TestNode
        id: 110
        title: initialization
        type: 0
        posX: 15606
        posY: 15127
        flowTest: 30
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1169
            value: |
              getItems = function(itemBankType, itemBankItems, itemBankTable, order){
                items = NULL
                if(itemBankType == "table") {
                  tableMap = fromJSON(itemBankTable)
                  table = tableMap$table
                  questionColumn = tableMap$columns$question
                  responseOptionsColumn = tableMap$columns$responseOptions
                  orderIndexColumn = tableMap$columns$orderIndex
                  traitColumn = tableMap$columns$trait
                  correctColumn = tableMap$columns$correct
                  items = concerto.table.query(
                    "
              SELECT
              id,
              {{questionColumn}} AS question,
              {{responseOptionsColumn}} AS responseOptions,
              {{orderIndexColumn}} AS orderIndex,
              {{traitColumn}} AS trait,
              {{correctColumn}} AS correct
              FROM {{table}}
              ORDER BY {{orderIndexColumn}}
              ",
                    list(
                      questionColumn=questionColumn,
                      responseOptionsColumn=responseOptionsColumn,
                      orderIndexColumn=orderIndexColumn,
                      traitColumn=traitColumn,
                      correctColumn=correctColumn,
                      table=table
                    ))
                }
                if(itemBankType == "direct") {
                  itemBankItems = fromJSON(itemBankItems)
                  if(length(itemBankItems) > 0) {
                    for(i in 1:length(itemBankItems)) {
                      itemBankItems[[i]]$responseOptions = as.character(toJSON(itemBankItems[[i]]$responseOptions)) #response options don't fit into flat table, so turn them back to JSON.
                      items = rbind(items, data.frame(itemBankItems[[i]], stringsAsFactors=F))
                    }
                  }
                }

                if(dim(items)[1] == 0) { stop("Item bank must not be empty!") }
                if(order == "random") {
                  items = items[sample(1:dim(items)[1]),]
                }
                return(items)
              }

              items = getItems(settings$itemBankType, settings$itemBankItems, settings$itemBankTable, settings$order)

              itemsAdministered = NULL
              scores = NULL
              traitScores = list()

              testTimeStarted = as.numeric(Sys.time())
              testTimeLeft = as.numeric(settings$testTimeLimit) + as.numeric(settings$testTimeLimitOffset)

            node: 110
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1170
            value: null
            node: 110
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1171
            value: '0'
            node: 110
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1172
            value: ''
            node: 110
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1173
            value: ''
            node: 110
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1174
            value: ''
            node: 110
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1175
            value: ''
            node: 110
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: scores
            pointer: '1'
            pointerVariable: scores
          -
            class_name: TestNodePort
            id: 1176
            value: ''
            node: 110
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: testTimeLeft
            pointer: '1'
            pointerVariable: testTimeLeft
          -
            class_name: TestNodePort
            id: 1177
            value: ''
            node: 110
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: testTimeStarted
            pointer: '1'
            pointerVariable: testTimeStarted
          -
            class_name: TestNodePort
            id: 1178
            value: ''
            node: 110
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: traitScores
            pointer: '1'
            pointerVariable: traitScores
      -
        class_name: TestNode
        id: 111
        title: 'next item selector'
        type: 0
        posX: 15959
        posY: 15091
        flowTest: 30
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1179
            value: |
              getSessionId = function(session) {
                id = 0
                if(!is.null(session) && is.list(session)) {
                  id = session$id
                } else {
                  id = paste0("i",concerto$session$id)
                }
                return(id)
              }

              getSafeItems = function(nextItems) {
                itemsNum = dim(nextItems)[1]
                if(itemsNum > 0) {
                  for(i in 1:itemsNum) {
                    item = as.list(nextItems[i,])

                    if(is.character(item$responseOptions)) { item$responseOptions = fromJSON(item$responseOptions) }
                    responseOptionsRandomOrder = item$responseOptions$optionsRandomOrder == "1"
                    orderedOptions = c()

                    if(length(item$responseOptions$options) > 0) {
                      if(responseOptionsRandomOrder) {
                        orderedOptions = item$responseOptions$options[sample(1:length(item$responseOptions$options))]
                      } else {
                        orderedOptions = item$responseOptions$options
                      }
                    }
                    orderedOptions = lapply(orderedOptions, function(elem) {
                      elem$score = NULL
                      return(elem)
                    })

                    item$responseOptions$options = orderedOptions
                    item$responseOptions$openScore = NULL
                    item$responseOptions$openCorrect = NULL
                    item$responseOptions = toJSON(item$responseOptions)

                    nextItems[i,] = item
                  }
                }
                return(nextItems)
              }

              getSafePastResponses = function(nextItems, session, responseBank) {
                responseBank = fromJSON(responseBank)
                if(is.null(responseBank$table)) {
                  concerto.log("eval@next_item_selector ▷ no response bank defined")
                  return(NULL)
                }

                sql = "
              SELECT * FROM {{table}}
              WHERE
              {{sessionIdColumn}}='{{sessionId}}' AND
              {{itemIdColumn}} IN ({{itemIds}})
              "
                responses = concerto.table.query(sql, list(
                  table=responseBank$table,
                  sessionIdColumn=responseBank$columns$session_id,
                  sessionId=getSessionId(session),
                  itemIdColumn=responseBank$columns$item_id,
                  itemIds=paste(nextItems[,"id"], collapse=",")
                ))
                if(dim(responses)[1] > 0) {
                  responses[,"score"] = NULL
                  return(responses)
                }
                return(NULL)
              }

              concerto.log(prevPage, "eval@next_item_selector ▷ previous page")
              concerto.log(direction, "eval@next_item_selector ▷ direction")
              nextPage = as.numeric(prevPage) + as.numeric(direction)

              pageFirstItemIndex = (nextPage - 1) * as.numeric(settings$itemsPerPage) + 1
              pageLastItemIndex = min(nextPage * as.numeric(settings$itemsPerPage), dim(items)[1])

              nextItemsIndices = pageFirstItemIndex:pageLastItemIndex
              concerto.log(nextItemsIndices, "eval@next_item_selector ▷ next item indices")
              nextItems = items[nextItemsIndices,]
              nextItemsSafe = getSafeItems(nextItems)
              pastResponsesSafe = getSafePastResponses(nextItems, session, settings$responseBank)
            node: 111
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1180
            value: null
            node: 111
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1181
            value: '0'
            node: 111
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1182
            value: '1'
            node: 111
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: direction
            pointer: '1'
            pointerVariable: direction
          -
            class_name: TestNodePort
            id: 1183
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1184
            value: 'NULL'
            node: 111
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1185
            value: '0'
            node: 111
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: prevPage
            pointer: '1'
            pointerVariable: page
          -
            class_name: TestNodePort
            id: 1186
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: session
            pointer: '1'
            pointerVariable: session
          -
            class_name: TestNodePort
            id: 1187
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1188
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: nextItems
            pointer: '1'
            pointerVariable: currentItems
          -
            class_name: TestNodePort
            id: 1189
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: nextItemsIndices
            pointer: '1'
            pointerVariable: currentItemsIndices
          -
            class_name: TestNodePort
            id: 1190
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: nextItemsSafe
            pointer: '0'
            pointerVariable: nextItemsSafe
          -
            class_name: TestNodePort
            id: 1191
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: nextPage
            pointer: '1'
            pointerVariable: page
          -
            class_name: TestNodePort
            id: 1192
            value: ''
            node: 111
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: pastResponsesSafe
            pointer: '0'
            pointerVariable: pastResponsesSafe
      -
        class_name: TestNode
        id: 112
        title: 'show item'
        type: 0
        posX: 16386
        posY: 15068
        flowTest: 30
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1193
            value: |
              getData = function(itemsSafe, responsesSafe, canGoBack, templateParams, responseRequired, responseRequiredAlert, page, totalPages) {
                templateParams$items = itemsSafe
                templateParams$canGoBack = canGoBack
                templateParams$responses = responsesSafe
                templateParams$responseRequired = responseRequired
                templateParams$responseRequiredAlert = responseRequiredAlert
                templateParams$page = page
                templateParams$totalPages = totalPages

                return(templateParams)
              }

              getTimeLimit = function(testTimeStarted, testTimeLimit, itemTimeLimit) {
                limit = 0
                startedAgo = as.numeric(Sys.time()) - testTimeStarted
                testTimeLeft = 0
                if(testTimeLimit > 0) {
                  testTimeLeft = max(testTimeLimit - startedAgo, 1)
                  limit = testTimeLeft
                }
                if(itemTimeLimit > 0) {
                  if(limit > 0) {
                    limit = min(limit, itemTimeLimit)
                  } else {
                    limit = itemTimeLimit
                  }
                }
                return(limit)
              }

              canGoBack = if(settings$canGoBack == "1" && page > 1) { 1 } else { 0 }
              maxItems = dim(items)[1]
              itemNumLimit = as.numeric(settings$itemNumLimit)
              if(itemNumLimit > 0) { maxItems = min(maxItems, itemNumLimit) }
              totalPages = ceiling(maxItems / as.numeric(settings$itemsPerPage))
              response = concerto.template.show(
                settings$itemTemplate,
                params=getData(
                  itemsSafe,
                  responsesSafe,
                  canGoBack,
                  templateParams,
                  settings$responseRequired,
                  settings$responseRequiredAlert,
                  page,
                  totalPages
                ),
                timeLimit=getTimeLimit(
                  testTimeStarted,
                  as.numeric(settings$testTimeLimit),
                  as.numeric(settings$itemTimeLimit)
                )
              )

              .branch = "submitted"
              if(response$isTimeout == 1) { .branch = "outOfTime" }

            node: 112
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1194
            value: null
            node: 112
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1195
            value: '0'
            node: 112
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '0'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1196
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: currentItemsIndices
            pointer: '1'
            pointerVariable: currentItemsIndices
          -
            class_name: TestNodePort
            id: 1197
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1198
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsSafe
            pointer: '0'
            pointerVariable: itemsSafe
          -
            class_name: TestNodePort
            id: 1199
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: page
            pointer: '1'
            pointerVariable: page
          -
            class_name: TestNodePort
            id: 1200
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: responsesSafe
            pointer: '0'
            pointerVariable: responsesSafe
          -
            class_name: TestNodePort
            id: 1201
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1202
            value: c.getDynamicInputs()
            node: 112
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: templateParams
            pointer: '0'
            pointerVariable: templateParams
          -
            class_name: TestNodePort
            id: 1203
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLeft
            pointer: '1'
            pointerVariable: testTimeLeft
          -
            class_name: TestNodePort
            id: 1204
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeStarted
            pointer: '1'
            pointerVariable: testTimeStarted
          -
            class_name: TestNodePort
            id: 1205
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: outOfTime
            pointer: '0'
            pointerVariable: outOfTime
          -
            class_name: TestNodePort
            id: 1206
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: submitted
            pointer: '0'
            pointerVariable: submitted
          -
            class_name: TestNodePort
            id: 1207
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: .branch
            pointer: '0'
            pointerVariable: .branch
          -
            class_name: TestNodePort
            id: 1208
            value: ''
            node: 112
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: response
            pointer: '1'
            pointerVariable: response
      -
        class_name: TestNode
        id: 113
        title: scoring
        type: 0
        posX: 16788
        posY: 15089
        flowTest: 30
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1209
            value: |
              updateScores = function(templateResponse, currentItems, currentItemsIndices, scores) {
                for(i in 1:dim(currentItems)[1]) {
                  score = 0
                  item = currentItems[i,]
                  index = currentItemsIndices[i]
                  itemResponse = templateResponse[[paste0("r",item$id)]]

                  if(!is.null(itemResponse)) {
                    responseOptions = fromJSON(item$responseOptions)
                    if(responseOptions$type == "open") {
                      if(itemResponse == responseOptions$openCorrect) {
                        score = responseOptions$openScore
                      }
                    } else {
                      for(i in 1:length(responseOptions$options)) {
                        option = responseOptions$options[[i]]
                        if(itemResponse == option$response) {
                          score = option$score
                          break
                        }
                      }
                    }
                  }

                  scores[index] = score
                }
                return(scores)
              }

              updateTraitScores = function(scores, items) {
                traitScores = list()
                for(i in 1:length(scores)) {
                  score = as.numeric(scores[[i]])
                  if(is.null(score)) { score = 0 }
                  item = as.list(items[i,])
                  if(is.null(traitScores[[item$trait]])) {
                    traitScores[[item$trait]] = 0
                  }
                  traitScores[[item$trait]] = traitScores[[item$trait]] + score
                }
                return(traitScores)
              }

              scores = updateScores(response, currentItems, currentItemsIndices, scores)
              traitScores = updateTraitScores(scores, items)

              concerto.log(scores, "eval@scoring ▷ scores")
              concerto.log(traitScores, "eval@scoring ▷ traitScores")

            node: 113
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1210
            value: null
            node: 113
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1211
            value: '0'
            node: 113
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1212
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: currentItems
            pointer: '1'
            pointerVariable: currentItems
          -
            class_name: TestNodePort
            id: 1213
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: currentItemsIndices
            pointer: '1'
            pointerVariable: currentItemsIndices
          -
            class_name: TestNodePort
            id: 1214
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1215
            value: 'NULL'
            node: 113
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1216
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: response
            pointer: '1'
            pointerVariable: response
          -
            class_name: TestNodePort
            id: 1217
            value: 'NULL'
            node: 113
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: scores
            pointer: '1'
            pointerVariable: scores
          -
            class_name: TestNodePort
            id: 1218
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1219
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: traitScores
            pointer: '1'
            pointerVariable: traitScores
          -
            class_name: TestNodePort
            id: 1220
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: scores
            pointer: '1'
            pointerVariable: scores
          -
            class_name: TestNodePort
            id: 1221
            value: ''
            node: 113
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: traitScores
            pointer: '1'
            pointerVariable: traitScores
      -
        class_name: TestNode
        id: 114
        title: 'response processor'
        type: 0
        posX: 17159
        posY: 15088
        flowTest: 30
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1222
            value: |
              getSessionId = function(session) {
                id = 0
                if(!is.null(session) && is.list(session)) {
                  id = session$id
                } else {
                  id = paste0("i",concerto$session$id)
                }
                return(id)
              }

              saveResponses = function(responseBank, sessionId, templateResponse, currentItems, currentItemsIndices, scores) {
                responseBank = fromJSON(responseBank)
                if(is.null(responseBank$table)) {
                  concerto.log("no response bank defined, skipping response saving", "eval@response_processor ▷")
                  return(NULL)
                }

                sql = "SELECT * FROM {{table}} WHERE {{itemIdColumn}} IN ({{itemsIds}}) AND {{sessionIdColumn}}='{{sessionId}}'"
                responses = concerto.table.query(sql, params=list(
                  table=responseBank$table,
                  itemIdColumn=responseBank$columns$item_id,
                  itemsIds=paste(currentItems[,"id"], collapse=","),
                  sessionIdColumn=responseBank$columns$session_id,
                  sessionId=sessionId
                ))

                queries = NULL
                for(i in 1:dim(currentItems)[1]) {
                  found = F
                  item = as.list(currentItems[i,])
                  sql = ""
                  if(dim(responses)[1] > 0) {
                    for(j in 1:dim(responses)[1]) {
                      response = as.list(responses[j,])
                      if(response$item_id == item$id) {
                        found = T
                        sql = "
                UPDATE {{table}}
                SET
                {{itemIdColumn}}={{itemId}},
                {{responseColumn}}='{{response}}',
                {{timeTakenColumn}}={{timeTaken}},
                {{sessionIdColumn}}='{{sessionId}}',
                {{scoreColumn}}={{score}},
                {{traitColumn}}='{{trait}}'
                WHERE {{itemIdColumn}}={{itemId}} AND {{sessionIdColumn}}='{{sessionId}}'
                "
                        break
                      }
                    }
                  }
                  if(!found) {
                    sql = "
              INSERT INTO {{table}} ({{itemIdColumn}}, {{responseColumn}}, {{timeTakenColumn}}, {{sessionIdColumn}}, {{scoreColumn}}, {{traitColumn}})
              VALUES ({{itemId}}, '{{responseValue}}', {{timeTaken}}, '{{sessionId}}', {{score}}, '{{trait}}')
              "
                  }
                  sql = concerto.table.insertParams(sql, list(
                    table=responseBank$table,
                    sessionIdColumn=responseBank$columns$session_id,
                    sessionId=sessionId,
                    itemIdColumn=responseBank$columns$item_id,
                    itemId=item$id,
                    responseColumn=responseBank$columns$response,
                    responseValue=templateResponse[[paste0("r",item$id)]],
                    timeTakenColumn=responseBank$columns$timeTaken,
                    timeTaken=response$timeTaken, #could use time difference
                    scoreColumn=responseBank$columns$score,
                    score=scores[currentItemsIndices[i]],
                    traitColumn=responseBank$columns$trait,
                    trait=item$trait
                  ))
                  queries = c(queries, sql)
                }
                for(i in 1:length(queries)) {
                	concerto.table.query(queries[i])
                }
              }

              sessionId = getSessionId(session)
              saveResponses(settings$responseBank, sessionId, response, currentItems, currentItemsIndices, scores)

              direction = 1
              itemsAdministered = unique(c(itemsAdministered, currentItemsIndices))
              if(settings$canGoBack == "1" && page > 1 && response$buttonPressed == "back") {
                direction = -1
              }
              concerto.log(itemsAdministered, "eval@response_processor ▷ itemsAdministered")
              concerto.log(direction, "eval@response_processor ▷ direction")
            node: 114
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1223
            value: null
            node: 114
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1224
            value: '0'
            node: 114
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '1'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1225
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: currentItems
            pointer: '1'
            pointerVariable: currentItems
          -
            class_name: TestNodePort
            id: 1226
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: currentItemsIndices
            pointer: '1'
            pointerVariable: currentItemsIndices
          -
            class_name: TestNodePort
            id: 1227
            value: 'NULL'
            node: 114
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1228
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: page
            pointer: '1'
            pointerVariable: page
          -
            class_name: TestNodePort
            id: 1229
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: response
            pointer: '1'
            pointerVariable: response
          -
            class_name: TestNodePort
            id: 1230
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: scores
            pointer: '1'
            pointerVariable: scores
          -
            class_name: TestNodePort
            id: 1231
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: session
            pointer: '1'
            pointerVariable: session
          -
            class_name: TestNodePort
            id: 1232
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1233
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: direction
            pointer: '1'
            pointerVariable: direction
          -
            class_name: TestNodePort
            id: 1234
            value: ''
            node: 114
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
      -
        class_name: TestNode
        id: 115
        title: 'status check'
        type: 0
        posX: 16531
        posY: 15543
        flowTest: 30
        sourceTest: 15
        sourceTestName: eval
        sourceTestDescription: 'Evaluate R code.'
        ports:
          -
            class_name: TestNodePort
            id: 1235
            value: |
              isOutOfTime = function(testTimeLimit, testTimeStarted, itemTimeLimit, itemTimeFullRequired) {
                startedAgo = as.numeric(Sys.time()) - testTimeStarted
                testTimeLeft = testTimeLimit - startedAgo
                if(testTimeLimit > 0) {
                  if(testTimeLeft <= 0) { return(T) }
                  if(testTimeLeft < itemTimeLimit && itemTimeFullRequired) { return(T) }
                }
                return(F)
              }

              getBranch = function(testTimeLimit, testTimeStarted, itemTimeLimit, itemTimeFullRequired, itemNumLimit, itemsNum, direction, itemsAdministered) {
                if(isOutOfTime(testTimeLimit, testTimeStarted, itemTimeLimit, itemTimeFullRequired)) {
                  concerto.log("time out", "eval@status_check ▷ test status")
                  return("stop")
                }

                maxItems = dim(items)[1]
                itemNumLimit = as.numeric(settings$itemNumLimit)
                if(itemNumLimit > 0) { maxItems = min(maxItems, itemNumLimit) }
                totalPages = ceiling(maxItems / as.numeric(settings$itemsPerPage))

                if(length(itemsAdministered) >= maxItems) {
                  if(direction > 0 && totalPages == page) {
                    concerto.log("maximum items reached", "eval@status_check ▷ test status")
                    return("stop")
                  }
                }

                concerto.log("continue", "eval@status_check ▷ test status")
                return("continue")
              }

              .branch = getBranch(
                as.numeric(settings$testTimeLimit),
                testTimeStarted,
                as.numeric(settings$itemTimeLimit),
                settings$itemTimeFullRequired == "1",
                as.numeric(settings$itemNumLimit),
                dim(items)[1],
                direction,
                itemsAdministered
              )

            node: 115
            variable: 89
            variableObject:
              class_name: TestVariable
              id: 89
              name: code
              type: 0
              description: 'Code value is expected to be text.'
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '0'
            dynamic: '0'
            type: 0
            exposed: '1'
            name: code
            pointer: '0'
            pointerVariable: code
          -
            class_name: TestNodePort
            id: 1236
            value: null
            node: 115
            variable: 90
            variableObject:
              class_name: TestVariable
              id: 90
              name: result
              type: 1
              description: ''
              passableThroughUrl: '0'
              value: null
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 1
            exposed: '0'
            name: result
            pointer: '0'
            pointerVariable: result
          -
            class_name: TestNodePort
            id: 1237
            value: '0'
            node: 115
            variable: 88
            variableObject:
              class_name: TestVariable
              id: 88
              name: out
              type: 2
              description: ''
              passableThroughUrl: '0'
              value: '0'
              test: 15
              parentVariable: null
            string: '1'
            defaultValue: '1'
            dynamic: '0'
            type: 2
            exposed: '0'
            name: out
            pointer: '0'
            pointerVariable: out
          -
            class_name: TestNodePort
            id: 1238
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: direction
            pointer: '1'
            pointerVariable: direction
          -
            class_name: TestNodePort
            id: 1239
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: items
            pointer: '1'
            pointerVariable: items
          -
            class_name: TestNodePort
            id: 1240
            value: 'NULL'
            node: 115
            variable: null
            variableObject: null
            string: '0'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: itemsAdministered
            pointer: '1'
            pointerVariable: itemsAdministered
          -
            class_name: TestNodePort
            id: 1241
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: page
            pointer: '1'
            pointerVariable: page
          -
            class_name: TestNodePort
            id: 1242
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: settings
            pointer: '1'
            pointerVariable: settings
          -
            class_name: TestNodePort
            id: 1243
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeLeft
            pointer: '1'
            pointerVariable: testTimeLeft
          -
            class_name: TestNodePort
            id: 1244
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '0'
            dynamic: '1'
            type: 0
            exposed: '1'
            name: testTimeStarted
            pointer: '1'
            pointerVariable: testTimeStarted
          -
            class_name: TestNodePort
            id: 1245
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 1
            exposed: '1'
            name: .branch
            pointer: '0'
            pointerVariable: .branch
          -
            class_name: TestNodePort
            id: 1246
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: continue
            pointer: '0'
            pointerVariable: continue
          -
            class_name: TestNodePort
            id: 1247
            value: ''
            node: 115
            variable: null
            variableObject: null
            string: '1'
            defaultValue: '1'
            dynamic: '1'
            type: 2
            exposed: '1'
            name: stop
            pointer: '0'
            pointerVariable: stop
    nodesConnections:
      -
        class_name: TestNodeConnection
        id: 166
        flowTest: 30
        sourceNode: 41
        sourcePort: null
        sourcePortObject: null
        destinationNode: 49
        destinationPort: null
        destinationPortObject: null
        returnFunction: ''
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 182
        flowTest: 30
        sourceNode: 41
        sourcePort: 512
        sourcePortObject:
          class_name: TestNodePort
          id: 512
          value: '0'
          node: 41
          variable: 261
          variableObject:
            class_name: TestVariable
            id: 261
            name: canGoBack
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: canGoBack
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 595
        destinationPortObject:
          class_name: TestNodePort
          id: 595
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: canGoBack
          pointer: '0'
          pointerVariable: canGoBack
        returnFunction: canGoBack
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 183
        flowTest: 30
        sourceNode: 41
        sourcePort: 496
        sourcePortObject:
          class_name: TestNodePort
          id: 496
          value: null
          node: 41
          variable: 245
          variableObject:
            class_name: TestVariable
            id: 245
            name: itemBankItems
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemBankItems
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 596
        destinationPortObject:
          class_name: TestNodePort
          id: 596
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemBankItems
          pointer: '0'
          pointerVariable: itemBankItems
        returnFunction: itemBankItems
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 184
        flowTest: 30
        sourceNode: 41
        sourcePort: 497
        sourcePortObject:
          class_name: TestNodePort
          id: 497
          value: null
          node: 41
          variable: 246
          variableObject:
            class_name: TestVariable
            id: 246
            name: itemBankTable
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemBankTable
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 597
        destinationPortObject:
          class_name: TestNodePort
          id: 597
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemBankTable
          pointer: '0'
          pointerVariable: itemBankTable
        returnFunction: itemBankTable
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 185
        flowTest: 30
        sourceNode: 41
        sourcePort: 498
        sourcePortObject:
          class_name: TestNodePort
          id: 498
          value: null
          node: 41
          variable: 247
          variableObject:
            class_name: TestVariable
            id: 247
            name: itemBankType
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemBankType
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 598
        destinationPortObject:
          class_name: TestNodePort
          id: 598
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemBankType
          pointer: '0'
          pointerVariable: itemBankType
        returnFunction: itemBankType
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 186
        flowTest: 30
        sourceNode: 41
        sourcePort: 509
        sourcePortObject:
          class_name: TestNodePort
          id: 509
          value: null
          node: 41
          variable: 258
          variableObject:
            class_name: TestVariable
            id: 258
            name: itemNumLimit
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemNumLimit
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 599
        destinationPortObject:
          class_name: TestNodePort
          id: 599
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemNumLimit
          pointer: '0'
          pointerVariable: itemNumLimit
        returnFunction: itemNumLimit
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 187
        flowTest: 30
        sourceNode: 41
        sourcePort: 504
        sourcePortObject:
          class_name: TestNodePort
          id: 504
          value: null
          node: 41
          variable: 253
          variableObject:
            class_name: TestVariable
            id: 253
            name: itemTemplate
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemTemplate
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 600
        destinationPortObject:
          class_name: TestNodePort
          id: 600
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemTemplate
          pointer: '0'
          pointerVariable: itemTemplate
        returnFunction: itemTemplate
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 188
        flowTest: 30
        sourceNode: 41
        sourcePort: 510
        sourcePortObject:
          class_name: TestNodePort
          id: 510
          value: null
          node: 41
          variable: 259
          variableObject:
            class_name: TestVariable
            id: 259
            name: itemTimeFullRequired
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemTimeFullRequired
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 601
        destinationPortObject:
          class_name: TestNodePort
          id: 601
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemTimeFullRequired
          pointer: '0'
          pointerVariable: itemTimeFullRequired
        returnFunction: itemTimeFullRequired
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 189
        flowTest: 30
        sourceNode: 41
        sourcePort: 503
        sourcePortObject:
          class_name: TestNodePort
          id: 503
          value: '0'
          node: 41
          variable: 252
          variableObject:
            class_name: TestVariable
            id: 252
            name: itemTimeLimit
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemTimeLimit
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 602
        destinationPortObject:
          class_name: TestNodePort
          id: 602
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemTimeLimit
          pointer: '0'
          pointerVariable: itemTimeLimit
        returnFunction: itemTimeLimit
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 190
        flowTest: 30
        sourceNode: 41
        sourcePort: 501
        sourcePortObject:
          class_name: TestNodePort
          id: 501
          value: null
          node: 41
          variable: 250
          variableObject:
            class_name: TestVariable
            id: 250
            name: order
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: order
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 603
        destinationPortObject:
          class_name: TestNodePort
          id: 603
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: order
          pointer: '0'
          pointerVariable: order
        returnFunction: order
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 191
        flowTest: 30
        sourceNode: 41
        sourcePort: 506
        sourcePortObject:
          class_name: TestNodePort
          id: 506
          value: null
          node: 41
          variable: 255
          variableObject:
            class_name: TestVariable
            id: 255
            name: responseBank
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: responseBank
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 604
        destinationPortObject:
          class_name: TestNodePort
          id: 604
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseBank
          pointer: '0'
          pointerVariable: responseBank
        returnFunction: responseBank
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 192
        flowTest: 30
        sourceNode: 41
        sourcePort: 499
        sourcePortObject:
          class_name: TestNodePort
          id: 499
          value: '0'
          node: 41
          variable: 248
          variableObject:
            class_name: TestVariable
            id: 248
            name: testTimeLimit
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: testTimeLimit
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 605
        destinationPortObject:
          class_name: TestNodePort
          id: 605
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: testTimeLimit
          pointer: '0'
          pointerVariable: testTimeLimit
        returnFunction: testTimeLimit
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 193
        flowTest: 30
        sourceNode: 41
        sourcePort: 500
        sourcePortObject:
          class_name: TestNodePort
          id: 500
          value: '0'
          node: 41
          variable: 249
          variableObject:
            class_name: TestVariable
            id: 249
            name: testTimeLimitOffset
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: testTimeLimitOffset
          pointer: '0'
          pointerVariable: ''
        destinationNode: 49
        destinationPort: 606
        destinationPortObject:
          class_name: TestNodePort
          id: 606
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: testTimeLimitOffset
          pointer: '0'
          pointerVariable: testTimeLimitOffset
        returnFunction: testTimeLimitOffset
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 196
        flowTest: 30
        sourceNode: 41
        sourcePort: 513
        sourcePortObject:
          class_name: TestNodePort
          id: 513
          value: null
          node: 41
          variable: 262
          variableObject:
            class_name: TestVariable
            id: 262
            name: responseRequired
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: responseRequired
          pointer: '0'
          pointerVariable: responseRequired
        destinationNode: 49
        destinationPort: 607
        destinationPortObject:
          class_name: TestNodePort
          id: 607
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseRequired
          pointer: '0'
          pointerVariable: responseRequired
        returnFunction: responseRequired
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 197
        flowTest: 30
        sourceNode: 41
        sourcePort: 514
        sourcePortObject:
          class_name: TestNodePort
          id: 514
          value: null
          node: 41
          variable: 263
          variableObject:
            class_name: TestVariable
            id: 263
            name: responseRequiredAlert
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: null
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: responseRequiredAlert
          pointer: '0'
          pointerVariable: responseRequiredAlert
        destinationNode: 49
        destinationPort: 608
        destinationPortObject:
          class_name: TestNodePort
          id: 608
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responseRequiedAlert
          pointer: '0'
          pointerVariable: responseRequiedAlert
        returnFunction: responseRequiredAlert
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 257
        flowTest: 30
        sourceNode: 41
        sourcePort: 846
        sourcePortObject:
          class_name: TestNodePort
          id: 846
          value: '1'
          node: 41
          variable: 483
          variableObject:
            class_name: TestVariable
            id: 483
            name: itemsPerPage
            type: 0
            description: ''
            passableThroughUrl: '0'
            value: '1'
            test: 30
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 1
          exposed: '0'
          name: itemsPerPage
          pointer: '0'
          pointerVariable: itemsPerPage
        destinationNode: 49
        destinationPort: 847
        destinationPortObject:
          class_name: TestNodePort
          id: 847
          value: ''
          node: 49
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemsPerPage
          pointer: '0'
          pointerVariable: itemsPerPage
        returnFunction: itemsPerPage
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 291
        flowTest: 30
        sourceNode: 49
        sourcePort: 594
        sourcePortObject:
          class_name: TestNodePort
          id: 594
          value: '0'
          node: 49
          variable: 112
          variableObject:
            class_name: TestVariable
            id: 112
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 19
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 110
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 292
        flowTest: 30
        sourceNode: 110
        sourcePort: 1171
        sourcePortObject:
          class_name: TestNodePort
          id: 1171
          value: '0'
          node: 110
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 111
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 293
        flowTest: 30
        sourceNode: 111
        sourcePort: 1181
        sourcePortObject:
          class_name: TestNodePort
          id: 1181
          value: '0'
          node: 111
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 112
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 294
        flowTest: 30
        sourceNode: 111
        sourcePort: 1190
        sourcePortObject:
          class_name: TestNodePort
          id: 1190
          value: ''
          node: 111
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: nextItemsSafe
          pointer: '0'
          pointerVariable: nextItemsSafe
        destinationNode: 112
        destinationPort: 1198
        destinationPortObject:
          class_name: TestNodePort
          id: 1198
          value: ''
          node: 112
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: itemsSafe
          pointer: '0'
          pointerVariable: itemsSafe
        returnFunction: nextItemsSafe
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 295
        flowTest: 30
        sourceNode: 111
        sourcePort: 1192
        sourcePortObject:
          class_name: TestNodePort
          id: 1192
          value: ''
          node: 111
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 1
          exposed: '1'
          name: pastResponsesSafe
          pointer: '0'
          pointerVariable: pastResponsesSafe
        destinationNode: 112
        destinationPort: 1200
        destinationPortObject:
          class_name: TestNodePort
          id: 1200
          value: ''
          node: 112
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 0
          exposed: '1'
          name: responsesSafe
          pointer: '0'
          pointerVariable: responsesSafe
        returnFunction: pastResponsesSafe
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 296
        flowTest: 30
        sourceNode: 112
        sourcePort: 1205
        sourcePortObject:
          class_name: TestNodePort
          id: 1205
          value: ''
          node: 112
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: outOfTime
          pointer: '0'
          pointerVariable: outOfTime
        destinationNode: 113
        destinationPort: null
        destinationPortObject: null
        returnFunction: outOfTime
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 297
        flowTest: 30
        sourceNode: 112
        sourcePort: 1206
        sourcePortObject:
          class_name: TestNodePort
          id: 1206
          value: ''
          node: 112
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: submitted
          pointer: '0'
          pointerVariable: submitted
        destinationNode: 113
        destinationPort: null
        destinationPortObject: null
        returnFunction: submitted
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 298
        flowTest: 30
        sourceNode: 113
        sourcePort: 1211
        sourcePortObject:
          class_name: TestNodePort
          id: 1211
          value: '0'
          node: 113
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 114
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 299
        flowTest: 30
        sourceNode: 114
        sourcePort: 1224
        sourcePortObject:
          class_name: TestNodePort
          id: 1224
          value: '0'
          node: 114
          variable: 88
          variableObject:
            class_name: TestVariable
            id: 88
            name: out
            type: 2
            description: ''
            passableThroughUrl: '0'
            value: '0'
            test: 15
            parentVariable: null
          string: '1'
          defaultValue: '1'
          dynamic: '0'
          type: 2
          exposed: '1'
          name: out
          pointer: '0'
          pointerVariable: out
        destinationNode: 115
        destinationPort: null
        destinationPortObject: null
        returnFunction: out
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 300
        flowTest: 30
        sourceNode: 115
        sourcePort: 1246
        sourcePortObject:
          class_name: TestNodePort
          id: 1246
          value: ''
          node: 115
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: continue
          pointer: '0'
          pointerVariable: continue
        destinationNode: 111
        destinationPort: null
        destinationPortObject: null
        returnFunction: continue
        automatic: '0'
        defaultReturnFunction: '1'
      -
        class_name: TestNodeConnection
        id: 301
        flowTest: 30
        sourceNode: 115
        sourcePort: 1247
        sourcePortObject:
          class_name: TestNodePort
          id: 1247
          value: ''
          node: 115
          variable: null
          variableObject: null
          string: '1'
          defaultValue: '1'
          dynamic: '1'
          type: 2
          exposed: '1'
          name: stop
          pointer: '0'
          pointerVariable: stop
        destinationNode: 42
        destinationPort: null
        destinationPortObject: null
        returnFunction: stop
        automatic: '0'
        defaultReturnFunction: '1'
    tags: ''
    groups: ''
    starterContent: true
    hash: b4b15a5c668f6443f2345d8d68897f5b9b16f853
  -
    class_name: Test
    id: 26
    name: _nestedPageHtml
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      if(!is.list(params)) {
        params = list()
      }
      for(.name in .dynamicInputs) {
        params[[.name]] = get(.name)
      }

      html = concerto.template.join(templateId=layout)
      content = fromJSON(content)
      if(length(content) > 0) {
        for(i in 1:length(content)) {
          pageParam = list()
          pageParam[[content[[i]]$name]] = concerto.template.join(templateId=content[[i]]$template)
          html = concerto.template.insertParams(html, pageParam, removeMissing=F)
        }
      }

      html = concerto.template.insertParams(html, params, removeMissing=F)

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 214
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 26
        parentVariable: null
      -
        class_name: TestVariable
        id: 215
        name: layout
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 26
        parentVariable: null
      -
        class_name: TestVariable
        id: 216
        name: content
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 26
        parentVariable: null
      -
        class_name: TestVariable
        id: 217
        name: params
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 26
        parentVariable: null
      -
        class_name: TestVariable
        id: 218
        name: html
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 26
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 55965e6d961e95daded3386cde366541e05749df
  -
    class_name: Test
    id: 12
    name: _runTest
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      if(!is.list(params)) {
        params = list()
      }
      for(name in .dynamicInputs) {
        value = get(name)
        if(is.null(value)) {
          params[name] = list(NULL)
        } else {
          params[[name]] = value
        }
      }

      results = concerto5:::concerto.test.run(test, params=params)
      for(name in .dynamicReturns) {
        assign(name, results[[name]])
      }

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 76
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 12
        parentVariable: null
      -
        class_name: TestVariable
        id: 77
        name: test
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 12
        parentVariable: null
      -
        class_name: TestVariable
        id: 78
        name: params
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 12
        parentVariable: null
      -
        class_name: TestVariable
        id: 79
        name: results
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 12
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 63637f9a713c8d0282fe8583c48e60f70d9e7955
  -
    class_name: Test
    id: 3
    name: _setInternalTemplates
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      if(!is.list(params)) {
        params = list()
      }
      for(.name in .dynamicInputs) {
        params[[.name]] = get(.name)
      }

      if(!is.na(loaderTemplate)) {
        concerto.template.loader(loaderTemplate, params=params)
      }

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 13
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 3
        parentVariable: null
      -
        class_name: TestVariable
        id: 14
        name: loaderTemplate
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 3
        parentVariable: null
      -
        class_name: TestVariable
        id: 15
        name: params
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 3
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 2e7d6c28b4325218e382e2a8ef2dbb7ac09e92a8
  -
    class_name: Test
    id: 1
    name: _showPage
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      getTemplateParams = function(templateParams) {
        if(!is.list(templateParams)) {
          templateParams = list()
        }
        for(.name in .dynamicInputs) {
          templateParams[[.name]] = get(.name)
        }
        return(templateParams)
      }

      response = concerto5:::concerto.template.show(
        template=template,
        html=if(!is.null(html) && !is.na(html) && html != "") {html} else {""},
        params=getTemplateParams(templateParams),
        timeLimit=if(!is.na(timeLimit)) { as.numeric(timeLimit) } else { 0 }
      )

      for(.name in .dynamicReturns) {
        assign(.name, response[[.name]])
      }
      if(".branch" %in% .dynamicReturns) {
        .branch = response$buttonPressed
        if(!(.branch %in% .dynamicBranches)) { .branch = "out" }
      }

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 1
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 1
        parentVariable: null
      -
        class_name: TestVariable
        id: 2
        name: template
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 1
        parentVariable: null
      -
        class_name: TestVariable
        id: 3
        name: response
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 1
        parentVariable: null
      -
        class_name: TestVariable
        id: 4
        name: timeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 1
        parentVariable: null
      -
        class_name: TestVariable
        id: 5
        name: templateParams
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 1
        parentVariable: null
      -
        class_name: TestVariable
        id: 6
        name: html
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 1
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 3046c8b60b023b25b3421d54019fcd174985c013
  -
    class_name: Test
    id: 9
    name: _startSession
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      concerto.log(user, "_startSession ▷ user")

      formatFields = function(user, extraFields) {
        userId = 0
        if(!is.null(user) && !is.na(user)) { userId=user$id }
        fields = list(
          user_id=userId,
          internal_id=concerto$session$id,
          test_id=concerto$mainTest$id,
          startedTime=Sys.time(),
          updateTime=Sys.time(),
          finished=0
        )
        if(is.list(extraFields)) {
          for(name in ls(extraFields)) {
            fields[[name]] = extraFields[[name]]
          }
        }
        return(fields)
      }

      getMappedColumns = function(fieldNames, tableMap) {
        cols = c()
        for(i in 1:length(fieldNames)) {
          col = tableMap$columns[[fieldNames[i]]]
          if(!is.null(col)) {
            cols=c(cols,col)
            next
          }
          cols=c(cols,fieldNames[i])
        }
        return(cols)
      }

      insertSession = function(fields, tableMap) {
        sqlColumns = paste(getMappedColumns(ls(fields), tableMap), collapse=",")
        sqlValues = paste0("'{{",ls(fields),"}}'", collapse=",")
        sql = paste0("INSERT INTO {{table}} (",sqlColumns,") VALUES (",sqlValues,")")
        concerto.table.query(sql, params=append(fields, list(
          table=tableMap$table
        )))
        id = concerto.table.lastInsertId()

        sql = "SELECT * FROM {{table}} WHERE {{idColumn}}={{id}}"
        session = concerto.table.query(sql, params=list(
          table=tableMap$table,
          idColumn=tableMap$columns$id,
          id=id
        ))
        if(dim(session)[1] > 0) {
          return(session[1,])
        }
        return(NULL)
      }

      resumeSession = function(user, tableMap) {
        if(is.null(user)) { return(NULL) }

        session = concerto.table.query("
      SELECT * FROM {{table}}
      WHERE
      {{testIdColumn}} = {{testId}} AND
      {{userIdColumn}} = '{{userId}}' AND
      {{finishedColumn}} = 0
      ORDER BY id DESC", params=list(
          table=tableMap$table,
          testIdColumn=tableMap$columns$test_id,
          testId=concerto$mainTest$id,
          userIdColumn=tableMap$columns$user_id,
          userId=user$id,
          finishedColumn=tableMap$columns$finished
        ), n=1)
        if(dim(session)[1] == 0) {
          return(NULL)
        }

        session = as.list(session)
        session$previousInternal_id = session$internal_id
        session$internal_id = concerto$session$id

        timeLimit = as.numeric(resumableExpiration)
        if(timeLimit > 0) {
          timeDiff = as.numeric(Sys.time()) - as.numeric(strptime(session$updateTime, "%Y-%m-%d %H:%M:%S"))
          if(timeDiff > timeLimit) {
            concerto.log("session resume time limit exceeded", "_startSession ▷")
            return(NULL)
          }
        }

        concerto.table.query("
      UPDATE {{table}}
      SET
      {{internalIdColumn}}='{{internal_id}}',
      {{updateTimeColumn}}=CURRENT_TIMESTAMP
      WHERE id={{id}}", params=list(
          table=tableMap$table,
          internalIdColumn=tableMap$columns$internal_id,
          internal_id=concerto$session$id,
          id=session$id,
          updateTimeColumn=tableMap$columns$updateTime
        ))

        return(session)
      }

      fields = formatFields(user, extraFields)
      concerto.log(fields, "_startSession ▷ fields")
      tableMap = fromJSON(sessionBankTable)

      session = NULL
      if(resumable == 1) {
        session = resumeSession(user, tableMap)
        if(!is.null(session)) {
          hash = concerto.table.query("SELECT hash FROM TestSession WHERE id={{id}}", list(id=session$previousInternal_id))
          concerto.log(hash, "_startSession ▷ resuming session...")
          if(!concerto.session.unserialize(hash=hash)) {
            	session = NULL
          }
        }
      }
      if(is.null(session)) {
      	session = insertSession(fields, tableMap)
      }
      concerto.log(session, "_startSession ▷ session")

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 61
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 9
        parentVariable: null
      -
        class_name: TestVariable
        id: 62
        name: extraFields
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 9
        parentVariable: null
      -
        class_name: TestVariable
        id: 63
        name: user
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 9
        parentVariable: null
      -
        class_name: TestVariable
        id: 64
        name: sessionBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 9
        parentVariable: null
      -
        class_name: TestVariable
        id: 65
        name: session
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 9
        parentVariable: null
      -
        class_name: TestVariable
        id: 66
        name: resumable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 9
        parentVariable: null
      -
        class_name: TestVariable
        id: 67
        name: resumableExpiration
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 9
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 3b7087801513f73470b21f08578916122affbd87
  -
    class_name: Test
    id: 48
    name: _translationDictionary
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      selectedLanguage = language
      if(is.na(language)) { selectedLanguage = defaultLanguage }

      concerto.log(selectedLanguage, "_translationDictionary ▷ selected language")

      dictionaryTable = fromJSON(dictionaryTable)
      if(type == "multiTable") {
        suffixStartIndex = regexpr("_[^_]*$", dictionaryTable$table)
        if(suffixStartIndex==-1) {
          stop(paste0("dictionary mapping table ", dictionaryTable$table, " doesn't contain proper language suffix"))
        }

        dictionaryTable$table = paste0(substr(dictionaryTable$table, 1, suffixStartIndex), selectedLanguage)
      }

      entries = concerto.table.query("SELECT {{keyColumn}} AS entryKey, {{langColumn}} AS trans FROM {{table}}", params=list(
        keyColumn = dictionaryTable$columns$entryKey,
        langColumn = selectedLanguage,
        table = dictionaryTable$table
      ))

      c.set("dictionary", entries, global=T)

    description: ''
    variables:
      -
        class_name: TestVariable
        id: 468
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 48
        parentVariable: null
      -
        class_name: TestVariable
        id: 469
        name: language
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 48
        parentVariable: null
      -
        class_name: TestVariable
        id: 470
        name: defaultLanguage
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 48
        parentVariable: null
      -
        class_name: TestVariable
        id: 471
        name: dictionaryTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 48
        parentVariable: null
      -
        class_name: TestVariable
        id: 472
        name: type
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 48
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: ''
    groups: ''
    starterContent: true
    hash: 8b0a7f5cb059aa35afbdc0fcd15cfdab78c3bacc
  -
    class_name: TestWizard
    id: 3
    name: authorizeUser
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 3
        title: 'User Bank'
        description: 'User bank settings'
        orderNum: 0
        colsNum: 0
        wizard: 3
        params:
          -
            class_name: TestWizardParam
            id: 5
            label: Type
            description: |
              Select where to get user information from:
              <ul>
              	<li><b>Direct</b>&nbsp;- user bank is declared at node level</li>
              	<li><strong>Table</strong> - user bank is taken from data table</li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: direct
            testVariable: 25
            name: userBankType
            wizardStep: 3
            stepTitle: 'User Bank'
            order: 0
            wizard: 3
            definition:
              placeholder: 0
              options:
                -
                  value: direct
                  label: Direct
                -
                  value: table
                  label: Table
              defvalue: direct
          -
            class_name: TestWizardParam
            id: 6
            label: 'User list'
            description: 'Directly input a list of users for authorisation'
            hideCondition: 'values.userBankType != "direct"'
            type: 10
            passableThroughUrl: '0'
            value: '[]'
            testVariable: 26
            name: userBankList
            wizardStep: 3
            stepTitle: 'User Bank'
            order: 1
            wizard: 3
            definition:
              element:
                type: 9
                definition:
                  placeholder: 0
                  fields:
                    -
                      type: 0
                      name: id
                      label: Id
                      definition:
                        placeholder: 0
                    -
                      type: 0
                      name: login
                      label: Login
                      definition:
                        placeholder: 0
                    -
                      type: 0
                      name: password
                      label: Password
                      definition:
                        placeholder: 0
                    -
                      type: 4
                      name: enabled
                      label: Enabled
                      definition:
                        placeholder: 0
                        defvalue: '1'
          -
            class_name: TestWizardParam
            id: 7
            label: 'Password encryption'
            description: |
              <p>Choose which hashing algorithm to apply&nbsp;to user&nbsp;passwords:</p>

              <ul>
              	<li><strong>md5</strong></li>
              	<li><strong>sha1</strong></li>
              	<li><strong>crc32</strong></li>
              	<li><strong>sha256</strong></li>
              	<li><strong>sha512</strong></li>
              	<li><strong>xxhash32</strong></li>
              	<li><strong>xxhash64</strong></li>
              	<li><strong>murmur32</strong></li>
              	<li><strong>plain</strong></li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: plain
            testVariable: 28
            name: userBankEncryption
            wizardStep: 3
            stepTitle: 'User Bank'
            order: 0
            wizard: 3
            definition:
              placeholder: 0
              options:
                -
                  value: md5
                  label: md5
                  order: 1
                -
                  value: sha1
                  label: sha1
                  order: 2
                -
                  value: crc32
                  label: crc32
                  order: 3
                -
                  value: sha256
                  label: sha256
                  order: 4
                -
                  value: sha512
                  label: sha512
                  order: 5
                -
                  value: xxhash32
                  label: xxhash32
                  order: 6
                -
                  value: xxhash64
                  label: xxhash64
                  order: 7
                -
                  value: murmur32
                  label: murmur32
                  order: 8
                -
                  value: plain
                  label: plain
                  order: 0
              defvalue: plain
          -
            class_name: TestWizardParam
            id: 8
            label: 'User table'
            description: 'Map columns in data table to user bank'
            hideCondition: 'values.userBankType != "table"'
            type: 12
            passableThroughUrl: '0'
            value: '[]'
            testVariable: 27
            name: userBankTable
            wizardStep: 3
            stepTitle: 'User Bank'
            order: 1
            wizard: 3
            definition:
              placeholder: 0
              cols:
                -
                  name: id
                  label: Id
                  tooltip: ''
                -
                  name: login
                  label: Login
                  tooltip: ''
                -
                  name: password
                  label: Password
                  tooltip: ''
                -
                  name: enabled
                  label: Enabled
                  tooltip: ''
    test: 5
    groups: ''
    starterContent: true
    hash: be613b8457c1580f3240e484b45fa2c8bcd1feca
  -
    class_name: Test
    id: 6
    name: authorizeUser
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'User authorization.'
    variables:
      -
        class_name: TestVariable
        id: 30
        name: authorized
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 6
        parentVariable: 19
      -
        class_name: TestVariable
        id: 31
        name: login
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 6
        parentVariable: 20
      -
        class_name: TestVariable
        id: 32
        name: password
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 6
        parentVariable: 21
      -
        class_name: TestVariable
        id: 33
        name: unauthorized
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 6
        parentVariable: 22
      -
        class_name: TestVariable
        id: 34
        name: user
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 6
        parentVariable: 23
      -
        class_name: TestVariable
        id: 35
        name: .branch
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 6
        parentVariable: 24
      -
        class_name: TestVariable
        id: 36
        name: userBankType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: direct
        test: 6
        parentVariable: 25
      -
        class_name: TestVariable
        id: 37
        name: userBankList
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[]'
        test: 6
        parentVariable: 26
      -
        class_name: TestVariable
        id: 38
        name: userBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{"table":"users","columns":{"id":"id","login":"login","password":"password","enabled":"enabled"}}'
        test: 6
        parentVariable: 27
      -
        class_name: TestVariable
        id: 39
        name: userBankEncryption
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: plain
        test: 6
        parentVariable: 28
      -
        class_name: TestVariable
        id: 40
        name: resultCode
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 6
        parentVariable: 29
    sourceWizard: 3
    sourceWizardTest: 5
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 6d1cad24812a846de73ba050584d907ed0b3718d
  -
    class_name: TestWizard
    id: 7
    name: CAT
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 7
        title: Items
        description: 'Test items collection'
        orderNum: 0
        colsNum: 0
        wizard: 7
        params:
          -
            class_name: TestWizardParam
            id: 15
            label: Type
            description: |
              <p>Select where to get items from:</p>

              <ul>
              	<li><strong>Direct&nbsp;</strong>- declare item bank at the node level</li>
              	<li><strong>Table&nbsp;</strong>- use a data table as the item bank</li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: direct
            testVariable: 116
            name: itemBankType
            wizardStep: 7
            stepTitle: Items
            order: 0
            wizard: 7
            definition:
              options:
                -
                  label: Direct
                  order: ''
                  value: direct
                -
                  label: Table
                  order: ''
                  value: table
              defvalue: direct
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 16
            label: Items
            description: 'Directly input your item bank'
            hideCondition: 'values.itemBankType != "direct"'
            type: 10
            passableThroughUrl: '0'
            value: '[{"id":1,"question":"10 + 10","responseOptions":{"0":{"value":"20","label":"20"},"1":{"value":"40","label":"40"},"type":"options","optionsRandomOrder":"1","options":[{"id":"1","label":"20","value":"1","response":"1","catValue":"1"},{"id":"2","label":"200","value":"0","response":"2","catValue":"0"},{"id":"3","label":"2000","value":"0","response":"3","catValue":"0"}],"painMannequinGender":"female","painMannequinGenderValue":"male"},"a":1.7,"b":"-2","c":0,"d":1,"correct":20,"cbGroup":"mathematics","fixedIndex":"","p1":"0","p2":"0","p3":"0","p4":"0","p5":"0","p6":"0","p7":"0","p8":"0","p9":"0"},{"id":2,"question":"100 + 100","responseOptions":{"0":{"value":"200","label":"200"},"1":{"value":"400","label":"400"},"type":"options","optionsRandomOrder":"1","options":[{"id":"1","label":"20","value":"0","response":"1","catValue":"0"},{"id":"2","label":"200","value":"1","response":"2","catValue":"1"},{"id":"3","label":"2000","value":"0","response":"3","catValue":"0"}],"painMannequinGender":"female","painMannequinGenderValue":"male"},"a":1.7,"b":0,"c":0,"d":1,"correct":200,"cbGroup":"mathematics","fixedIndex":"","p1":"0","p2":"0","p3":"0","p4":"0","p5":"0","p6":"0","p7":"0","p8":"0","p9":"0"},{"id":3,"question":"1000 + 1000","responseOptions":{"0":{"value":"2000","label":"2000"},"1":{"value":"4000","label":"4000"},"type":"options","optionsRandomOrder":"1","options":[{"id":"1","label":"20","value":"0","response":"1","catValue":"0"},{"id":"2","label":"200","value":"0","response":"2","catValue":"0"},{"id":"3","label":"2000","value":"0","response":"3","catValue":"1"}],"painMannequinGender":"female","painMannequinGenderValue":"male"},"a":1.7,"b":2,"c":0,"d":1,"correct":2000,"cbGroup":"mathematics","fixedIndex":"","p1":"0","p2":"0","p3":"0","p4":"0","p5":"0","p6":"0","p7":"0","p8":"0","p9":"0"}]'
            testVariable: 117
            name: itemBankItems
            wizardStep: 7
            stepTitle: Items
            order: 0
            wizard: 7
            definition:
              element:
                type: 9
                definition:
                  fields:
                    -
                      name: id
                      type: 0
                      label: Id
                      definition:
                        placeholder: 0
                    -
                      name: question
                      type: 2
                      label: Question
                      definition:
                        placeholder: 0
                    -
                      name: responseOptions
                      type: 9
                      label: 'Response Options'
                      definition:
                        fields:
                          -
                            name: type
                            type: 3
                            label: Type
                            definition:
                              options:
                                -
                                  label: Open
                                  value: open
                                  order: 1
                                -
                                  label: Options
                                  value: options
                                  order: 2
                                -
                                  value: painMannequin
                                  label: 'Pain Mannequin'
                                  order: 3
                                -
                                  value: gracelyScale
                                  label: 'Gracely Scale'
                                  order: 0
                              defvalue: options
                              placeholder: 0
                          -
                            name: optionsRandomOrder
                            type: 4
                            label: 'Options Random Order'
                            definition:
                              defvalue: '1'
                              placeholder: 0
                            hideCondition: 'parent.type != "options"'
                          -
                            name: options
                            type: 10
                            label: Options
                            definition:
                              element:
                                type: 9
                                definition:
                                  fields:
                                    -
                                      name: catValue
                                      type: 0
                                      label: 'CAT Value'
                                      definition:
                                        placeholder: 0
                                        defvalue: '0'
                                      order: 2
                                    -
                                      name: label
                                      type: 2
                                      label: Label
                                      definition:
                                        placeholder: 0
                                      order: 1
                                    -
                                      type: 0
                                      name: response
                                      label: Response
                                      definition:
                                        placeholder: 0
                                      order: 0
                                  placeholder: 0
                              placeholder: 0
                            hideCondition: 'parent.type != "options"'
                          -
                            type: 3
                            name: painMannequinGender
                            label: 'Mannequin Gender'
                            definition:
                              placeholder: 0
                              options:
                                -
                                  value: male
                                  label: Male
                                -
                                  value: female
                                  label: Female
                                -
                                  value: custom
                                  label: Custom
                              defvalue: female
                            hideCondition: 'parent.type != "painMannequin"'
                          -
                            type: 0
                            name: painMannequinGenderValue
                            label: 'Mannequin Gender Value'
                            definition:
                              placeholder: 0
                              defvalue: male
                            hideCondition: 'parent.type != "painMannequin" || parent.painMannequinGender != "custom"'
                        element:
                          type: 9
                          definition:
                            fields:
                              -
                                name: value
                                type: 0
                                label: Value
                                definition:
                                  placeholder: 0
                              -
                                name: label
                                type: 2
                                label: Label
                                definition:
                                  placeholder: 0
                            placeholder: 0
                        placeholder: 0
                    -
                      name: cbGroup
                      type: 0
                      label: 'Content Balancing Group'
                      definition:
                        placeholder: 0
                    -
                      name: fixedIndex
                      type: 0
                      label: 'Fixed Index'
                      definition:
                        defvalue: ''
                        placeholder: 0
                    -
                      type: 0
                      name: p1
                      label: 'Item Parameter #1'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p2
                      label: 'Item Parameter #2'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p3
                      label: 'Item Parameter #3'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p4
                      label: 'Item Parameter #4'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p5
                      label: 'Item Parameter #5'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p6
                      label: 'Item Parameter #6'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p7
                      label: 'Item Parameter #7'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p8
                      label: 'Item Parameter #8'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                    -
                      type: 0
                      name: p9
                      label: 'Item Parameter #9'
                      definition:
                        placeholder: 0
                        defvalue: '0'
                  placeholder: 0
          -
            class_name: TestWizardParam
            id: 17
            label: Table
            description: 'Map columns in data table to item bank'
            hideCondition: 'values.itemBankType != "table"'
            type: 12
            passableThroughUrl: '0'
            value: '{"table":"CATItems","columns":{"id":"id","question":"question","responseOptions":"responseOptions","a":"a","b":"b","c":"c","d":"d","correct":"correct","cbGroup":"cbGroup","fixedIndex":"fixedIndex","p1":"p1","p2":"p2","p3":"p3","p4":"p4","p5":"p5","p6":"p6","p7":"p7","p8":"p8","p9":"p9"}}'
            testVariable: 118
            name: itemBankTable
            wizardStep: 7
            stepTitle: Items
            order: 0
            wizard: 7
            definition:
              cols:
                -
                  name: id
                  label: Id
                  tooltip: ''
                -
                  name: question
                  label: Question
                  tooltip: ''
                -
                  name: responseOptions
                  label: 'Response Options'
                  tooltip: ''
                -
                  name: cbGroup
                  label: 'Content Balancing Group'
                  tooltip: ''
                -
                  name: fixedIndex
                  label: 'Fixed Index'
                  tooltip: ''
                -
                  name: p1
                  label: 'Item Parameter #1'
                  tooltip: ''
                -
                  name: p2
                  label: 'Item Parameter #2'
                  tooltip: ''
                -
                  name: p3
                  label: 'Item Parameter #3'
                  tooltip: ''
                -
                  name: p4
                  label: 'Item Parameter #4'
                  tooltip: ''
                -
                  name: p5
                  label: 'Item Parameter #5'
                  tooltip: ''
                -
                  name: p6
                  label: 'Item Parameter #6'
                  tooltip: ''
                -
                  name: p7
                  label: 'Item Parameter #7'
                  tooltip: ''
                -
                  name: p8
                  label: 'Item Parameter #8'
                  tooltip: ''
                -
                  name: p9
                  label: 'Item Parameter #9'
                  tooltip: ''
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 18
            label: 'Item Template'
            description: 'Select which template to use for CAT item page design'
            hideCondition: ''
            type: 5
            passableThroughUrl: '0'
            value: test
            testVariable: 129
            name: itemTemplate
            wizardStep: 7
            stepTitle: Items
            order: 0
            wizard: 7
            definition:
              defvalue: test
              placeholder: 0
      -
        class_name: TestWizardStep
        id: 8
        title: 'Stopping Rules'
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 7
        params:
          -
            class_name: TestWizardParam
            id: 19
            label: 'Limit Total Test Time'
            description: 'Total test time limit in seconds. 0 = no limit.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 119
            name: testTimeLimit
            wizardStep: 8
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 7
            definition:
              defvalue: '0'
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 20
            label: 'Limit Time Per Item'
            description: 'Time limit for each item, in seconds. 0 = no limit.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 120
            name: itemTimeLimit
            wizardStep: 8
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 7
            definition:
              defvalue: '0'
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 21
            label: 'Require Sufficient Time Per Item'
            description: 'Check this box to prevent the test from showing more items when the total test time remaining is less than the time limit per item.'
            hideCondition: 'values.testTimeLimit == 0 || values.itemTimeLimit == 0'
            type: 4
            passableThroughUrl: '0'
            value: '0'
            testVariable: 121
            name: itemTimeFullRequired
            wizardStep: 8
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 7
            definition:
              defvalue: '0'
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 22
            label: 'Limit Number of Items'
            description: 'Maximum number of items to show in the test. 0 = no limit.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 131
            name: itemNumLimit
            wizardStep: 8
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 7
            definition:
              defvalue: '0'
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 23
            label: 'Minimum Accuracy'
            description: 'Minimum accuracy value that must be reached before stopping the test. 0 = no minimum accuracy.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 132
            name: minAccuracy
            wizardStep: 8
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 7
            definition:
              defvalue: '0'
              placeholder: 0
      -
        class_name: TestWizardStep
        id: 9
        title: 'CAT Options'
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 7
        params:
          -
            class_name: TestWizardParam
            id: 24
            label: 'Content Balancing Settings'
            description: |
              <p>Each entry in the table consist of two fields:</p>
              <ul>
              	<li><strong>Group Name</strong> - specifies the column in the item bank by which to apply&nbsp;content balancing</li>
              	<li><strong>Group Proportion</strong>&nbsp;- numerical value specifying the proportion of&nbsp;items from each CB group to be used by the next item selection algorithm</li>
              </ul>
              <p><em>e.g. group1_proportion=1, group2_proportion=2 will mean that the next item algorithm will try to show twice as many items from group2 as from group1</em></p>
              <p><strong>NOTE: The&nbsp;number of items&nbsp;in each CB group in the item bank must&nbsp;be sufficient to cover the proportions specified</strong></p>

            hideCondition: ''
            type: 10
            passableThroughUrl: '0'
            value: '[]'
            testVariable: 123
            name: contentBalancing
            wizardStep: 9
            stepTitle: 'CAT Options'
            order: 3
            wizard: 7
            definition:
              element:
                type: 9
                definition:
                  fields:
                    -
                      name: name
                      type: 0
                      label: 'Group Name'
                      definition:
                        placeholder: 0
                    -
                      name: proportion
                      type: 0
                      label: 'Group Proportion'
                      definition:
                        defvalue: '0'
                        placeholder: 0
                  placeholder: 0
          -
            class_name: TestWizardParam
            id: 81
            label: 'Next item criterion'
            description: ''
            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: MFI
            testVariable: 125
            name: nextItemCriterion
            wizardStep: 9
            stepTitle: 'CAT Options'
            order: 1
            wizard: 7
            definition:
              options:
                -
                  label: MFI
                  value: MFI
                -
                  label: bOpt
                  value: bOpt
                -
                  label: random
                  value: random
              defvalue: MFI
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 82
            label: 'Next item randomesque'
            description: 'The number of items to be chosen from the next item selection rule, among those the next item to be administered will be randomly picked up. Default value is 1 and leads to usual selection of the optimal item for the specified criterion.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '1'
            testVariable: 126
            name: nextItemRandomesque
            wizardStep: 9
            stepTitle: 'CAT Options'
            order: 1
            wizard: 7
            definition:
              defvalue: '1'
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 83
            label: 'Scoring method'
            description: 'Ability estimator'
            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: BM
            testVariable: 127
            name: scoringMethod
            wizardStep: 9
            stepTitle: 'CAT Options'
            order: 2
            wizard: 7
            definition:
              options:
                -
                  label: BM
                  value: BM
                -
                  label: ML
                  value: ML
                -
                  label: WL
                  value: WL
                -
                  label: EAP
                  value: EAP
              defvalue: BM
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 86
            label: Model
            description: ''
            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: dichotomous
            testVariable: 508
            name: model
            wizardStep: 9
            stepTitle: 'CAT Options'
            order: 0
            wizard: 7
            definition:
              placeholder: 0
              options:
                -
                  value: dichotomous
                  label: dichotomous
                -
                  value: GRM
                  label: GRM
                -
                  value: MGRM
                  label: MGRM
                -
                  value: PCM
                  label: PCM
                -
                  value: GPCM
                  label: GPCM
                -
                  value: RSM
                  label: RSM
                -
                  value: NRM
                  label: NRM
              defvalue: dichotomous
          -
            class_name: TestWizardParam
            id: 88
            label: 'Item Parameters Number'
            description: ''
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '9'
            testVariable: 513
            name: itemParamsNum
            wizardStep: 9
            stepTitle: 'CAT Options'
            order: 0
            wizard: 7
            definition:
              placeholder: 0
              defvalue: '9'
      -
        class_name: TestWizardStep
        id: 10
        title: Responses
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 7
        params:
          -
            class_name: TestWizardParam
            id: 25
            label: 'Response Bank'
            description: 'Specify where to save responses to items. Leave empty to not store responses.'
            hideCondition: ''
            type: 12
            passableThroughUrl: '0'
            value: '{"table":"CATResponses","columns":{"id":"id","item_id":"item_id","response":"response","timeTaken":"timeTaken","session_id":"session_id","correct":"correct","theta":"theta","sem":"sem"}}'
            testVariable: 128
            name: responseBank
            wizardStep: 10
            stepTitle: Responses
            order: 0
            wizard: 7
            definition:
              cols:
                -
                  name: id
                  label: Id
                  tooltip: '0'
                -
                  name: item_id
                  label: 'Item Id'
                  tooltip: '1'
                -
                  name: catValue
                  label: 'CAT Value'
                  tooltip: '3'
                -
                  name: timeTaken
                  label: 'Time Taken'
                  tooltip: '4'
                -
                  name: session_id
                  label: 'Session Id'
                  tooltip: '5'
                -
                  name: theta
                  label: Theta
                  tooltip: '6'
                -
                  name: sem
                  label: SEM
                  tooltip: '7'
                -
                  name: response
                  label: Response
                  tooltip: '2'
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 26
            label: 'Require Response'
            description: 'Check to require user to answer all items before proceeding to next page.'
            hideCondition: ''
            type: 4
            passableThroughUrl: '0'
            value: '0'
            testVariable: 137
            name: responseRequired
            wizardStep: 10
            stepTitle: Responses
            order: 0
            wizard: 7
            definition:
              defvalue: '0'
              placeholder: 0
          -
            class_name: TestWizardParam
            id: 27
            label: 'Response validation alert'
            description: 'Specify the message shown to users when no answer is given to a required item.'
            hideCondition: 'values.responseRequired == 0'
            type: 0
            passableThroughUrl: '0'
            value: 'Please answer all items on this page'
            testVariable: 138
            name: responseRequiredAlert
            wizardStep: 10
            stepTitle: Responses
            order: 0
            wizard: 7
            definition:
              defvalue: 'Please answer all items on this page'
              placeholder: 0
      -
        class_name: TestWizardStep
        id: 11
        title: Modules
        description: 'Test modules. Each module is a separate test that can use specific input variables and must return specific return variables.'
        orderNum: 0
        colsNum: 0
        wizard: 7
        params:
          -
            class_name: TestWizardParam
            id: 84
            label: 'Item Template Params Module'
            description: ''
            hideCondition: ''
            type: 8
            passableThroughUrl: '0'
            value: ''
            testVariable: 492
            name: itemTemplateParamsModule
            wizardStep: 11
            stepTitle: Modules
            order: 0
            wizard: 7
            definition:
              placeholder: 0
              defvalue: ''
          -
            class_name: TestWizardParam
            id: 87
            label: 'Response CAT Value Module'
            description: ''
            hideCondition: ''
            type: 8
            passableThroughUrl: '0'
            value: ''
            testVariable: 511
            name: responseCatValueModule
            wizardStep: 11
            stepTitle: Modules
            order: 0
            wizard: 7
            definition:
              placeholder: 0
    test: 20
    groups: ''
    starterContent: true
    hash: b80ab7007879761ed2b631e95956c9bdb54127a0
  -
    class_name: Test
    id: 25
    name: CAT
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Computer Adaptive Test'
    variables:
      -
        class_name: TestVariable
        id: 188
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 115
      -
        class_name: TestVariable
        id: 189
        name: itemBankType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: direct
        test: 25
        parentVariable: 116
      -
        class_name: TestVariable
        id: 190
        name: itemBankItems
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[{"id":1,"question":"10 + 10","responseOptions":{"type":"options","optionsRandomOrder":"1","options":[{"label":"20","catValue":"1","response":"1"},{"label":"200","catValue":"0","response":"2"},{"label":"2000","catValue":"0","response":"3"}],"painMannequinGender":"","painMannequinGenderValue":"male"},"cbGroup":"mathematics","fixedIndex":"","p1":"0","p2":"0","p3":"0","p4":"0","p5":"0","p6":"0","p7":"0","p8":"0","p9":"0"},{"id":2,"question":"100 + 100","responseOptions":{"type":"options","optionsRandomOrder":"1","options":[{"label":"20","catValue":"0","response":"1"},{"label":"200","catValue":"1","response":"2"},{"label":"2000","catValue":"0","response":"3"}],"painMannequinGender":"","painMannequinGenderValue":"male"},"cbGroup":"mathematics","fixedIndex":"","p1":"0","p2":"0","p3":"0","p4":"0","p5":"0","p6":"0","p7":"0","p8":"0","p9":"0"},{"id":3,"question":"1000 + 1000","responseOptions":{"type":"options","optionsRandomOrder":"1","options":[{"label":"20","catValue":"0","response":"1"},{"label":"200","catValue":"0","response":"2"},{"label":"2000","catValue":"1","response":"3"}],"painMannequinGender":"","painMannequinGenderValue":"male"},"cbGroup":"mathematics","fixedIndex":"","p1":"0","p2":"0","p3":"0","p4":"0","p5":"0","p6":"0","p7":"0","p8":"0","p9":"0"}]'
        test: 25
        parentVariable: 117
      -
        class_name: TestVariable
        id: 191
        name: itemBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{"table":"catItems","columns":{"id":"id","question":"question","responseOptions":"responseOptions","a":"a","b":"b","c":"c","d":"d","correct":"correct","cbGroup":"cbGroup","fixedIndex":"fixedIndex"}}'
        test: 25
        parentVariable: 118
      -
        class_name: TestVariable
        id: 192
        name: testTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 119
      -
        class_name: TestVariable
        id: 193
        name: itemTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 120
      -
        class_name: TestVariable
        id: 194
        name: itemTimeFullRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 121
      -
        class_name: TestVariable
        id: 195
        name: testTimeLimitOffset
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 122
      -
        class_name: TestVariable
        id: 196
        name: contentBalancing
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[]'
        test: 25
        parentVariable: 123
      -
        class_name: TestVariable
        id: 197
        name: startingTheta
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 124
      -
        class_name: TestVariable
        id: 198
        name: nextItemCriterion
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: MFI
        test: 25
        parentVariable: 125
      -
        class_name: TestVariable
        id: 199
        name: nextItemRandomesque
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '1'
        test: 25
        parentVariable: 126
      -
        class_name: TestVariable
        id: 200
        name: scoringMethod
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: BM
        test: 25
        parentVariable: 127
      -
        class_name: TestVariable
        id: 201
        name: responseBank
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{"table":"CATResponses","columns":{"id":"id","item_id":"item_id","response":"response","timeTaken":"timeTaken","session_id":"session_id","correct":"correct","theta":"theta","sem":"sem","catValue":"catValue"}}'
        test: 25
        parentVariable: 128
      -
        class_name: TestVariable
        id: 202
        name: itemTemplate
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: test
        test: 25
        parentVariable: 129
      -
        class_name: TestVariable
        id: 203
        name: session
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 25
        parentVariable: 130
      -
        class_name: TestVariable
        id: 204
        name: itemNumLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 131
      -
        class_name: TestVariable
        id: 205
        name: minAccuracy
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 132
      -
        class_name: TestVariable
        id: 210
        name: responseRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 25
        parentVariable: 137
      -
        class_name: TestVariable
        id: 211
        name: responseRequiredAlert
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: 'Response required!'
        test: 25
        parentVariable: 138
      -
        class_name: TestVariable
        id: 212
        name: sem
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 25
        parentVariable: 139
      -
        class_name: TestVariable
        id: 213
        name: theta
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 25
        parentVariable: 140
      -
        class_name: TestVariable
        id: 493
        name: itemTemplateParamsModule
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 25
        parentVariable: 492
      -
        class_name: TestVariable
        id: 509
        name: model
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: dichotomous
        test: 25
        parentVariable: 508
      -
        class_name: TestVariable
        id: 512
        name: responseCatValueModule
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: ''
        test: 25
        parentVariable: 511
      -
        class_name: TestVariable
        id: 514
        name: itemParamsNum
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '9'
        test: 25
        parentVariable: 513
    sourceWizard: 7
    sourceWizardTest: 20
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 8993f955dd1175f1e97bdb2e11c748ac866e3987
  -
    class_name: TestWizard
    id: 4
    name: createUser
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 4
        title: 'User Bank'
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 4
        params:
          -
            class_name: TestWizardParam
            id: 9
            label: 'User table'
            description: 'User bank column mapping'
            hideCondition: ''
            type: 12
            passableThroughUrl: '0'
            value: '[]'
            testVariable: 42
            name: userBankTable
            wizardStep: 4
            stepTitle: 'User Bank'
            order: 1
            wizard: 4
            definition:
              placeholder: 0
              cols:
                -
                  name: id
                  label: Id
                  tooltip: ''
                -
                  name: login
                  label: Login
                  tooltip: ''
                -
                  name: password
                  label: Password
                  tooltip: ''
                -
                  name: enabled
                  label: Enabled
                  tooltip: ''
          -
            class_name: TestWizardParam
            id: 10
            label: 'Password encryption'
            description: |
              <p>Select which hashing algorithm to apply to users&#39; passwords:</p>

              <ul>
              	<li><strong>md5</strong></li>
              	<li><strong>sha1</strong></li>
              	<li><strong>crc32</strong></li>
              	<li><strong>sha256</strong></li>
              	<li><strong>sha512</strong></li>
              	<li><strong>xxhash32</strong></li>
              	<li><strong>xxhash64</strong></li>
              	<li><strong>murmur32</strong></li>
              	<li><strong>plain</strong></li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: plain
            testVariable: 49
            name: userBankEncryption
            wizardStep: 4
            stepTitle: 'User Bank'
            order: 0
            wizard: 4
            definition:
              placeholder: 0
              options:
                -
                  value: md5
                  label: md5
                  order: 1
                -
                  value: sha1
                  label: sha1
                  order: 2
                -
                  value: crc32
                  label: crc32
                  order: 3
                -
                  value: sha256
                  label: sha256
                  order: 4
                -
                  value: sha512
                  label: sha512
                  order: 5
                -
                  value: xxhash32
                  label: xxhash32
                  order: 6
                -
                  value: xxhash64
                  label: xxhash64
                  order: 7
                -
                  value: murmur32
                  label: murmur32
                  order: 8
                -
                  value: plain
                  label: plain
                  order: 0
              defvalue: plain
    test: 7
    groups: ''
    starterContent: true
    hash: 2197d36e83b1c4fbd17941fe6207aebed52d9d08
  -
    class_name: Test
    id: 8
    name: createUser
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'User creation.'
    variables:
      -
        class_name: TestVariable
        id: 51
        name: created
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 8
        parentVariable: 41
      -
        class_name: TestVariable
        id: 52
        name: userBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{"table":"users","columns":{"id":"id","login":"login","password":"password","enabled":"enabled"}}'
        test: 8
        parentVariable: 42
      -
        class_name: TestVariable
        id: 53
        name: login
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 8
        parentVariable: 43
      -
        class_name: TestVariable
        id: 54
        name: password
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 8
        parentVariable: 44
      -
        class_name: TestVariable
        id: 55
        name: enabled
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '1'
        test: 8
        parentVariable: 45
      -
        class_name: TestVariable
        id: 56
        name: loginAlreadyExist
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 8
        parentVariable: 46
      -
        class_name: TestVariable
        id: 57
        name: .branch
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 8
        parentVariable: 47
      -
        class_name: TestVariable
        id: 58
        name: user
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 8
        parentVariable: 48
      -
        class_name: TestVariable
        id: 59
        name: userBankEncryption
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: plain
        test: 8
        parentVariable: 49
      -
        class_name: TestVariable
        id: 60
        name: extraFields
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 8
        parentVariable: 50
    sourceWizard: 4
    sourceWizardTest: 7
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 962b85712681044305b646950d9c87312c85dcef
  -
    class_name: TestWizard
    id: 12
    name: dataManipulation
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 22
        title: Data
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 12
        params:
          -
            class_name: TestWizardParam
            id: 72
            label: 'Query type'
            description: |
              <p>Select which type of query this&nbsp;node should perform:</p>

              <ul>
              	<li><strong>Select&nbsp;</strong>- reads data from table</li>
              	<li><strong>Update&nbsp;</strong>- updates existing data in table</li>
              	<li><strong>Insert&nbsp;</strong>- inserts new data into table</li>
              	<li><strong>Delete&nbsp;</strong>- deletes existing data from table</li>
              	<li><strong>Custom&nbsp;</strong>- custom query</li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: select
            testVariable: 455
            name: queryType
            wizardStep: 22
            stepTitle: Data
            order: 0
            wizard: 12
            definition:
              placeholder: 0
              options:
                -
                  value: select
                  label: Select
                  order: 0
                -
                  value: update
                  label: Update
                  order: 1
                -
                  value: delete
                  label: Delete
                  order: 3
                -
                  value: custom
                  label: Custom
                  order: 4
                -
                  value: insert
                  label: Insert
                  order: 2
              defvalue: select
          -
            class_name: TestWizardParam
            id: 73
            label: Table
            description: 'Select which table to perform the query on'
            hideCondition: 'values.queryType == "custom"'
            type: 6
            passableThroughUrl: '0'
            value: ''
            testVariable: 458
            name: table
            wizardStep: 22
            stepTitle: Data
            order: 0
            wizard: 12
            definition:
              placeholder: 0
              defvalue: ''
          -
            class_name: TestWizardParam
            id: 74
            label: Query
            description: 'Custom query. Can use insert directives that will be replaced with dynamic input values.'
            hideCondition: 'values.queryType != "custom"'
            type: 1
            passableThroughUrl: '0'
            value: ''
            testVariable: 456
            name: queryString
            wizardStep: 22
            stepTitle: Data
            order: 0
            wizard: 12
            definition:
              placeholder: 0
              defvalue: ''
          -
            class_name: TestWizardParam
            id: 75
            label: 'Set clause'
            description: |
              <p>Here you can configure the operation of the Set clause:</p>

              <ul>
              	<li>If the cell contains a&nbsp;string (<strong>Insert</strong>,&nbsp;<strong>Update</strong> only), it will be used literally and replace any insert directives with dynamic inputs from the node, e.g.:<br />
              	<strong>column1={{column1Value}} AND column2={{column2Value}}</strong></li>
              	<li>If the cell is empty, it will build a clause from dynamic inputs, using '<b>=</b>'<b>&nbsp;</b>and '<b>AND</b>'<b>&nbsp;</b>operators, e.g.:</li>
              </ul>

              <ol>
              	<li><strong>(Insert</strong>&nbsp;only) for dynamic inputs:&nbsp;<strong>col1=2</strong>,&nbsp;<strong>col2=3:</strong><strong>(col1,col2) VALUES (2,3)</strong></li>
              	<li>(<strong>Update</strong>&nbsp;only) for dynamic inputs:&nbsp;<strong>col1=2</strong>,&nbsp;<strong>col2=3:</strong><strong>col1=2, col2=3</strong></li>
              </ol>

            hideCondition: 'values.queryType == "select" || values.queryType == "custom"'
            type: 1
            passableThroughUrl: '0'
            value: ''
            testVariable: 460
            name: setClause
            wizardStep: 22
            stepTitle: Data
            order: 0
            wizard: 12
            definition:
              placeholder: 0
              defvalue: ''
          -
            class_name: TestWizardParam
            id: 76
            label: 'Where clause'
            description: |
              <p>Here you can configure the operation of the where clause.</p>

              <ul>
              	<li>If the cell contains a string (<strong>Select</strong>,&nbsp;<strong>Delete</strong> only), it will be used literally and will therefore replace any insert directives with dynamic inputs from the node, e.g.:<br />
              	<strong>column1={{column1Value}} AND column2={{column2Value}}</strong></li>
              	<li>If the cell contains a&nbsp;numeric value, it will be converted to an id e.g.:<br />
              	<strong>23&nbsp;</strong>will be converted to&nbsp;<strong>id=23</strong></li>
              	<li>If the cell is empty, this node&nbsp;will build a where clause from dynamic inputs, using '<b>=</b>'<b>&nbsp;</b>and '<b>AND</b>'<b>&nbsp;</b>operators, e.g.: for dynamic inputs:&nbsp;<strong>col1=2</strong>,&nbsp;<strong>col2=3:</strong>&nbsp;<strong>col1=2 AND col2=3</strong></li>
              </ul>

            hideCondition: 'values.queryType == "insert" || values.queryType == "custom"'
            type: 1
            passableThroughUrl: '0'
            value: ''
            testVariable: 459
            name: whereClause
            wizardStep: 22
            stepTitle: Data
            order: 0
            wizard: 12
            definition:
              placeholder: 0
              defvalue: ''
    test: 46
    groups: ''
    starterContent: true
    hash: b09ecf7cf11e505b530c6f1e9bb14a8ab4f3d8b4
  -
    class_name: Test
    id: 47
    name: dataManipulation
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Data tables manipulation.'
    variables:
      -
        class_name: TestVariable
        id: 461
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 47
        parentVariable: 454
      -
        class_name: TestVariable
        id: 462
        name: queryType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: select
        test: 47
        parentVariable: 455
      -
        class_name: TestVariable
        id: 463
        name: queryString
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 47
        parentVariable: 456
      -
        class_name: TestVariable
        id: 464
        name: result
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 47
        parentVariable: 457
      -
        class_name: TestVariable
        id: 465
        name: table
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 47
        parentVariable: 458
      -
        class_name: TestVariable
        id: 466
        name: whereClause
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 47
        parentVariable: 459
      -
        class_name: TestVariable
        id: 467
        name: setClause
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 47
        parentVariable: 460
    sourceWizard: 12
    sourceWizardTest: 46
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 12524d30dc658db6432c291f17e454cd06095629
  -
    class_name: TestWizard
    id: 10
    name: form
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 17
        title: Form
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 10
        params:
          -
            class_name: TestWizardParam
            id: 51
            label: Template
            description: 'Select which template to use for form design'
            hideCondition: ''
            type: 5
            passableThroughUrl: '0'
            value: form
            testVariable: 336
            name: template
            wizardStep: 17
            stepTitle: Form
            order: 0
            wizard: 10
            definition:
              placeholder: 0
              defvalue: form
          -
            class_name: TestWizardParam
            id: 52
            label: Fields
            description: 'List of fields to be used by the form'
            hideCondition: ''
            type: 10
            passableThroughUrl: '0'
            value: '[{"name":"","label":"","type":"checkbox","validation":null,"definition":{"options":null}}]'
            testVariable: 333
            name: fields
            wizardStep: 17
            stepTitle: Form
            order: 0
            wizard: 10
            definition:
              element:
                type: 9
                definition:
                  placeholder: 0
                  fields:
                    -
                      type: 0
                      name: name
                      label: Name
                      definition:
                        placeholder: 0
                    -
                      type: 0
                      name: label
                      label: Label
                      definition:
                        placeholder: 0
                    -
                      type: 3
                      name: type
                      label: Type
                      definition:
                        placeholder: 0
                        options:
                          -
                            value: singleLine
                            label: 'Single line text'
                            order: 0
                          -
                            value: multiLine
                            label: 'Multi line text'
                            order: 2
                          -
                            value: checkbox
                            label: Checkbox
                            order: 3
                          -
                            value: password
                            label: Password
                            order: 1
                          -
                            value: select
                            label: Select
                            order: 4
                        defvalue: singleLine
                    -
                      type: 10
                      name: validation
                      label: Validation
                      definition:
                        placeholder: 0
                        element:
                          type: 9
                          definition:
                            placeholder: 0
                            fields:
                              -
                                type: 3
                                name: type
                                label: Type
                                definition:
                                  placeholder: 0
                                  options:
                                    -
                                      value: required
                                      label: Required
                                    -
                                      value: minlength
                                      label: 'Min length'
                                    -
                                      value: maxlength
                                      label: 'Max length'
                                    -
                                      value: min
                                      label: Min
                                    -
                                      value: max
                                      label: Max
                                    -
                                      value: pattern
                                      label: Pattern
                                  defvalue: required
                                hideCondition: ''
                              -
                                type: 0
                                name: value
                                label: Value
                                definition:
                                  placeholder: 0
                                hideCondition: 'parent.type != "minlength" && parent.type != "maxlength" && parent.type != "min" && parent.type != "max" && parent.type != "pattern"'
                              -
                                type: 0
                                name: alert
                                label: Alert
                                definition:
                                  placeholder: 0
                                  defvalue: 'Invalid value!'
                    -
                      type: 9
                      name: definition
                      label: Definition
                      definition:
                        placeholder: 0
                        fields:
                          -
                            type: 10
                            name: options
                            label: Options
                            definition:
                              placeholder: 0
                              element:
                                type: 9
                                definition:
                                  placeholder: 0
                                  fields:
                                    -
                                      type: 0
                                      name: value
                                      label: Value
                                      definition:
                                        placeholder: 0
                                    -
                                      type: 0
                                      name: label
                                      label: label
                                      definition:
                                        placeholder: 0
                      hideCondition: 'parent.type != "select"'
    test: 36
    groups: ''
    starterContent: true
    hash: 20b6880ee5607accfb7f7d46ede1be6238c3670f
  -
    class_name: Test
    id: 37
    name: form
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Form page.'
    variables:
      -
        class_name: TestVariable
        id: 338
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 37
        parentVariable: 332
      -
        class_name: TestVariable
        id: 339
        name: fields
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[{"name":"","label":"","type":"checkbox","validation":null,"definition":{"options":null}}]'
        test: 37
        parentVariable: 333
      -
        class_name: TestVariable
        id: 340
        name: templateParams
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 37
        parentVariable: 334
      -
        class_name: TestVariable
        id: 341
        name: response
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 37
        parentVariable: 335
      -
        class_name: TestVariable
        id: 342
        name: template
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: form
        test: 37
        parentVariable: 336
      -
        class_name: TestVariable
        id: 343
        name: initialValues
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 37
        parentVariable: 337
    sourceWizard: 10
    sourceWizardTest: 36
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 479894ec969d00f0b23a14b2a969911fdc23b59a
  -
    class_name: Test
    id: 16
    name: get
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      for(.name in .dynamicReturns) {
        assign(.name, c.get(.name, posOffset = -1))
      }

    description: 'Gets promoted variables values. Use dynamic returns to declare which variables you want to get.'
    variables: {  }
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 5d1fcfde5ab036fc807cee14333758eccfd0649a
  -
    class_name: Test
    id: 14
    name: if
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      .branch = "false"
      if(expression) { .branch = "true" }

    description: '<strong>If</strong>&nbsp;expression.'
    variables:
      -
        class_name: TestVariable
        id: 84
        name: 'true'
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 14
        parentVariable: null
      -
        class_name: TestVariable
        id: 85
        name: expression
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 14
        parentVariable: null
      -
        class_name: TestVariable
        id: 86
        name: .branch
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 14
        parentVariable: null
      -
        class_name: TestVariable
        id: 87
        name: 'false'
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 14
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 9eebe7e6b8d4d0a02059e05e769b3b3e3f1f60b5
  -
    class_name: TestWizard
    id: 9
    name: linearTest
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 13
        title: Items
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 9
        params:
          -
            class_name: TestWizardParam
            id: 34
            label: Type
            description: |
              <p>Select where to get items from:</p>

              <ul>
              	<li><strong>Direct&nbsp;</strong>- declare item bank at the node level</li>
              	<li><strong>Table&nbsp;</strong>- use a data table as the item bank</li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: direct
            testVariable: 247
            name: itemBankType
            wizardStep: 13
            stepTitle: Items
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              options:
                -
                  value: direct
                  label: Direct
                -
                  value: table
                  label: Table
              defvalue: direct
          -
            class_name: TestWizardParam
            id: 35
            label: Items
            description: 'Directly input your item bank'
            hideCondition: 'values.itemBankType != "direct"'
            type: 10
            passableThroughUrl: '0'
            value: '[{"id":"1","question":"10 + 10","orderIndex":"1","trait":"math","responseOptions":{"type":"options","openCorrect":"","openScore":"1","options":[{"value":"20","label":"20","score":"1","response":"20"},{"value":"200","label":"200","score":"0","response":"200"},{"value":"2000","label":"2000","score":"0","response":"2000"}],"optionsRandomOrder":"1","painMannequinGender":"male","painMannequinGenderValue":"male"}},{"id":"2","question":"100 + 100","orderIndex":"2","trait":"math","responseOptions":{"type":"options","openCorrect":"","openScore":"1","options":[{"value":"20","label":"20","score":"0","response":"20"},{"value":"200","label":"200","score":"1","response":"200"},{"value":"2000","label":"2000","score":"0","response":"2000"}],"optionsRandomOrder":"1","painMannequinGender":"male","painMannequinGenderValue":"male"}},{"id":"3","question":"1000 + 1000","orderIndex":"3","trait":"math","responseOptions":{"type":"options","openCorrect":"","openScore":"1","options":[{"value":"20","label":"20","score":"0","response":"20"},{"value":"200","label":"200","score":"0","response":"200"},{"value":"2000","label":"2000","score":"1","response":"2000"}],"optionsRandomOrder":"1","painMannequinGender":"male","painMannequinGenderValue":"male"}}]'
            testVariable: 245
            name: itemBankItems
            wizardStep: 13
            stepTitle: Items
            order: 0
            wizard: 9
            definition:
              element:
                type: 9
                definition:
                  placeholder: 0
                  fields:
                    -
                      type: 0
                      name: id
                      label: Id
                      definition:
                        placeholder: 0
                    -
                      type: 2
                      name: question
                      label: Question
                      definition:
                        placeholder: 0
                    -
                      type: 9
                      name: responseOptions
                      label: 'Response Options'
                      definition:
                        placeholder: 0
                        fields:
                          -
                            type: 3
                            name: type
                            label: Type
                            definition:
                              placeholder: 0
                              options:
                                -
                                  value: options
                                  label: Options
                                  order: 2
                                -
                                  value: open
                                  label: Open
                                  order: 1
                                -
                                  value: painMannequin
                                  label: 'Pain Mannequin'
                                  order: 3
                                -
                                  value: gracelyScale
                                  label: 'Gracely Scale'
                                  order: 0
                              defvalue: options
                          -
                            type: 0
                            name: openCorrect
                            label: 'Correct (Open)'
                            definition:
                              placeholder: 0
                              defvalue: ''
                            hideCondition: 'parent.type != "open"'
                          -
                            type: 0
                            name: openScore
                            label: 'Score (Open)'
                            definition:
                              placeholder: 0
                              defvalue: '1'
                            hideCondition: 'parent.type != "open"'
                          -
                            type: 10
                            name: options
                            label: Options
                            definition:
                              placeholder: 0
                              element:
                                type: 9
                                definition:
                                  placeholder: 0
                                  fields:
                                    -
                                      type: 0
                                      name: response
                                      label: Response
                                      definition:
                                        placeholder: 0
                                    -
                                      type: 2
                                      name: label
                                      label: Label
                                      definition:
                                        placeholder: 0
                                    -
                                      type: 0
                                      name: score
                                      label: Score
                                      definition:
                                        placeholder: 0
                                        defvalue: '0'
                            hideCondition: 'parent.type != "options"'
                          -
                            type: 4
                            name: optionsRandomOrder
                            label: 'Random Order (Options)'
                            definition:
                              placeholder: 0
                              defvalue: '1'
                            hideCondition: 'parent.type != "options"'
                          -
                            type: 3
                            name: painMannequinGender
                            label: 'Mannequin Gender'
                            definition:
                              placeholder: 0
                              options:
                                -
                                  value: male
                                  label: Male
                                -
                                  value: female
                                  label: Female
                                -
                                  value: custom
                                  label: Custom
                              defvalue: male
                            hideCondition: 'parent.type != "painMannequin"'
                          -
                            type: 0
                            name: painMannequinGenderValue
                            label: 'Mannequing Gender Value'
                            definition:
                              placeholder: 0
                              defvalue: male
                            hideCondition: 'parent.type != "painMannequin" || parent.painMannequinGender != "custom"'
                    -
                      type: 0
                      name: orderIndex
                      label: 'Order Index'
                      definition:
                        placeholder: 0
                    -
                      type: 0
                      name: trait
                      label: Trait
                      definition:
                        placeholder: 0
          -
            class_name: TestWizardParam
            id: 36
            label: Table
            description: 'Map columns in data table to item bank'
            hideCondition: 'values.itemBankType != "table"'
            type: 12
            passableThroughUrl: '0'
            value: '[]'
            testVariable: 246
            name: itemBankTable
            wizardStep: 13
            stepTitle: Items
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              cols:
                -
                  name: id
                  label: Id
                  tooltip: ''
                -
                  name: question
                  label: Question
                  tooltip: ''
                -
                  name: responseOptions
                  label: 'Response Options'
                  tooltip: ''
                -
                  name: orderIndex
                  label: 'Order Index'
                  tooltip: ''
                -
                  name: trait
                  label: Trait
                  tooltip: ''
          -
            class_name: TestWizardParam
            id: 37
            label: 'Item Template'
            description: 'Select which template to use for linear test item page design'
            hideCondition: ''
            type: 5
            passableThroughUrl: '0'
            value: test
            testVariable: 253
            name: itemTemplate
            wizardStep: 13
            stepTitle: Items
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: test
          -
            class_name: TestWizardParam
            id: 38
            label: Order
            description: |
              <p>Select the order in which to show items:</p>

              <ul>
              	<li><strong>Manual</strong>&nbsp;- item order will be determined by sorted values in&nbsp;the&nbsp;<strong>orderIndex&nbsp;</strong>column</li>
              	<li><strong>Random&nbsp;</strong>- items will be shown in a random order</li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: random
            testVariable: 250
            name: order
            wizardStep: 13
            stepTitle: Items
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              options:
                -
                  value: manual
                  label: Manual
                -
                  value: random
                  label: Random
              defvalue: random
          -
            class_name: TestWizardParam
            id: 39
            label: 'Can Go Back?'
            description: 'Check box to enable the user to go back to items that have already been answered and change their response(s)'
            hideCondition: ''
            type: 4
            passableThroughUrl: '0'
            value: '0'
            testVariable: 261
            name: canGoBack
            wizardStep: 13
            stepTitle: Items
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: '0'
          -
            class_name: TestWizardParam
            id: 80
            label: 'Items Per Page'
            description: ''
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '1'
            testVariable: 483
            name: itemsPerPage
            wizardStep: 13
            stepTitle: Items
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: '1'
      -
        class_name: TestWizardStep
        id: 14
        title: 'Stopping Rules'
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 9
        params:
          -
            class_name: TestWizardParam
            id: 40
            label: 'Limit Total Test Time'
            description: 'Total test time limit in seconds. 0&nbsp;= no limit.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 248
            name: testTimeLimit
            wizardStep: 14
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: '0'
          -
            class_name: TestWizardParam
            id: 41
            label: 'Limit Time Per Item'
            description: 'Time limit for each item, in seconds.&nbsp;0 = no limit.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 252
            name: itemTimeLimit
            wizardStep: 14
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: '0'
          -
            class_name: TestWizardParam
            id: 42
            label: 'Require Sufficient Time Per Item'
            description: 'Check this box to prevent the test from showing more items when the total test time remaining is less than the time limit per item.'
            hideCondition: 'values.testTimeLimit == 0 || values.itemTimeLimit == 0'
            type: 4
            passableThroughUrl: '0'
            value: '0'
            testVariable: 259
            name: itemTimeFullRequired
            wizardStep: 14
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: '0'
          -
            class_name: TestWizardParam
            id: 43
            label: 'Limit Number of Items'
            description: 'Maximum number of items to show in the test.&nbsp;0 =&nbsp;no limit.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 258
            name: itemNumLimit
            wizardStep: 14
            stepTitle: 'Stopping Rules'
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: '0'
      -
        class_name: TestWizardStep
        id: 15
        title: Responses
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 9
        params:
          -
            class_name: TestWizardParam
            id: 44
            label: 'Response Bank'
            description: |
              <p style="margin-bottom:10px"><span style="font-size:11pt"><span style="background:white"><span style="line-height:normal"><span style="font-family:Calibri,sans-serif"><span style="font-size:10.5pt"><span style="font-family:&quot;Helvetica&quot;,sans-serif"><span style="color:#333333">Specify where to save responses to items. Leave empty to not store responses.</span></span></span></span></span></span></span></p>

            hideCondition: ''
            type: 12
            passableThroughUrl: '0'
            value: '{"table":"linearTestResponses","columns":{"id":"id","item_id":"item_id","response":"response","timeTaken":"timeTaken","session_id":"session_id","score":"score","trait":"trait"}}'
            testVariable: 255
            name: responseBank
            wizardStep: 15
            stepTitle: Responses
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              cols:
                -
                  name: id
                  label: Id
                  tooltip: ''
                -
                  name: item_id
                  label: 'Item Id'
                  tooltip: ''
                -
                  name: response
                  label: Response
                  tooltip: ''
                -
                  name: timeTaken
                  label: 'Time Taken'
                  tooltip: ''
                -
                  name: session_id
                  label: 'Session Id'
                  tooltip: ''
                -
                  name: score
                  label: Score
                  tooltip: ''
                -
                  name: trait
                  label: Trait
                  tooltip: ''
          -
            class_name: TestWizardParam
            id: 45
            label: 'Require Response'
            description: '<span style="font-size:10.5pt"><span style="line-height:107%"><span style="font-family:&quot;Helvetica&quot;,sans-serif"><span style="color:#333333">Check box to require user to answer all items before proceeding to next page.</span></span></span></span>'
            hideCondition: ''
            type: 4
            passableThroughUrl: '0'
            value: '0'
            testVariable: 262
            name: responseRequired
            wizardStep: 15
            stepTitle: Responses
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: '0'
          -
            class_name: TestWizardParam
            id: 46
            label: 'Response required alert'
            description: 'Alert when no response is given.'
            hideCondition: 'values.responseRequired == 0'
            type: 0
            passableThroughUrl: '0'
            value: 'Response required!'
            testVariable: 263
            name: responseRequiredAlert
            wizardStep: 15
            stepTitle: Responses
            order: 0
            wizard: 9
            definition:
              placeholder: 0
              defvalue: 'Response required!'
      -
        class_name: TestWizardStep
        id: 16
        title: Modules
        description: 'Test modules. Each module is a separate test that can use specific input variables and must return specific return variables.'
        orderNum: 0
        colsNum: 0
        wizard: 9
        params: {  }
    test: 30
    groups: ''
    starterContent: true
    hash: 933c276fb39f921d2436f59df1326131ec7cd252
  -
    class_name: Test
    id: 35
    name: linearTest
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Linear test.'
    variables:
      -
        class_name: TestVariable
        id: 311
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 244
      -
        class_name: TestVariable
        id: 312
        name: itemBankItems
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[{"id":"1","question":"10 + 10","orderIndex":"1","trait":"math","responseOptions":{"type":"options","openCorrect":"","openScore":"1","options":[{"value":"20","label":"20","score":"1","response":"20"},{"value":"200","label":"200","score":"0","response":"200"},{"value":"2000","label":"2000","score":"0","response":"2000"}],"optionsRandomOrder":"1","painMannequinGender":"male","painMannequinGenderValue":"male"}},{"id":"2","question":"100 + 100","orderIndex":"2","trait":"math","responseOptions":{"type":"options","openCorrect":"","openScore":"1","options":[{"value":"20","label":"20","score":"0","response":"20"},{"value":"200","label":"200","score":"1","response":"200"},{"value":"2000","label":"2000","score":"0","response":"2000"}],"optionsRandomOrder":"1","painMannequinGender":"male","painMannequinGenderValue":"male"}},{"id":"3","question":"1000 + 1000","orderIndex":"3","trait":"math","responseOptions":{"type":"options","openCorrect":"","openScore":"1","options":[{"value":"20","label":"20","score":"0","response":"20"},{"value":"200","label":"200","score":"0","response":"200"},{"value":"2000","label":"2000","score":"1","response":"2000"}],"optionsRandomOrder":"1","painMannequinGender":"male","painMannequinGenderValue":"male"}}]'
        test: 35
        parentVariable: 245
      -
        class_name: TestVariable
        id: 313
        name: itemBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[]'
        test: 35
        parentVariable: 246
      -
        class_name: TestVariable
        id: 314
        name: itemBankType
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: direct
        test: 35
        parentVariable: 247
      -
        class_name: TestVariable
        id: 315
        name: testTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 248
      -
        class_name: TestVariable
        id: 316
        name: testTimeLimitOffset
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 249
      -
        class_name: TestVariable
        id: 317
        name: order
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: random
        test: 35
        parentVariable: 250
      -
        class_name: TestVariable
        id: 319
        name: itemTimeLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 252
      -
        class_name: TestVariable
        id: 320
        name: itemTemplate
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: test
        test: 35
        parentVariable: 253
      -
        class_name: TestVariable
        id: 322
        name: responseBank
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{"table":"linearTestResponses","columns":{"id":"id","item_id":"item_id","response":"response","timeTaken":"timeTaken","session_id":"session_id","score":"score","trait":"trait"}}'
        test: 35
        parentVariable: 255
      -
        class_name: TestVariable
        id: 323
        name: session
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 35
        parentVariable: 256
      -
        class_name: TestVariable
        id: 325
        name: itemNumLimit
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 258
      -
        class_name: TestVariable
        id: 326
        name: itemTimeFullRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 259
      -
        class_name: TestVariable
        id: 328
        name: canGoBack
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 261
      -
        class_name: TestVariable
        id: 329
        name: responseRequired
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 35
        parentVariable: 262
      -
        class_name: TestVariable
        id: 330
        name: responseRequiredAlert
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: 'Response required!'
        test: 35
        parentVariable: 263
      -
        class_name: TestVariable
        id: 331
        name: scores
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 35
        parentVariable: 264
      -
        class_name: TestVariable
        id: 484
        name: itemsPerPage
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '1'
        test: 35
        parentVariable: 483
    sourceWizard: 9
    sourceWizardTest: 30
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: d92f10d2df5b31c01fb97e97f6c6fb8f725ddcc1
  -
    class_name: TestWizard
    id: 8
    name: nestedPageHtml
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 12
        title: Templates
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 8
        params:
          -
            class_name: TestWizardParam
            id: 32
            label: 'Layout Template'
            description: 'Select which template to use for the layout of the main page into which other templates are inserted'
            hideCondition: ''
            type: 5
            passableThroughUrl: '0'
            value: ''
            testVariable: 215
            name: layout
            wizardStep: 12
            stepTitle: Templates
            order: 0
            wizard: 8
            definition:
              placeholder: 0
              defvalue: ''
          -
            class_name: TestWizardParam
            id: 33
            label: 'Content Templates'
            description: |
              <p>Specify which templates to insert into the main layout template. There are two variables:</p>

              <ul>
              	<li><strong>Name</strong>&nbsp;is the name of a&nbsp;variable on the main layout template</li>
              	<li><strong>Template&nbsp;</strong>is the template content that should be inserted in place of this named variable</li>
              </ul>

            hideCondition: ''
            type: 10
            passableThroughUrl: '0'
            value: '[]'
            testVariable: 216
            name: content
            wizardStep: 12
            stepTitle: Templates
            order: 0
            wizard: 8
            definition:
              element:
                type: 9
                definition:
                  placeholder: 0
                  fields:
                    -
                      type: 0
                      name: name
                      label: Name
                      definition:
                        placeholder: 0
                    -
                      type: 5
                      name: template
                      label: Template
                      definition:
                        placeholder: 0
    test: 26
    groups: ''
    starterContent: true
    hash: 1ed72fe3c207865f948a6a43f4066f8d43bf6192
  -
    class_name: Test
    id: 27
    name: nestedPageHtml
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Nested page. Creates HTML that is constructed from one main layout template that can contain multiple nested templates inside.'
    variables:
      -
        class_name: TestVariable
        id: 219
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 27
        parentVariable: 214
      -
        class_name: TestVariable
        id: 220
        name: layout
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 27
        parentVariable: 215
      -
        class_name: TestVariable
        id: 221
        name: content
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '[]'
        test: 27
        parentVariable: 216
      -
        class_name: TestVariable
        id: 222
        name: params
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 27
        parentVariable: 217
      -
        class_name: TestVariable
        id: 223
        name: html
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 27
        parentVariable: 218
    sourceWizard: 8
    sourceWizardTest: 26
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 343ce8c509f271042e1c1503965cda40dbfa09d1
  -
    class_name: TestWizard
    id: 6
    name: runTest
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 6
        title: Test
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 6
        params:
          -
            class_name: TestWizardParam
            id: 14
            label: 'Run Test'
            description: 'Select which test you would like this node to run'
            hideCondition: ''
            type: 8
            passableThroughUrl: '0'
            value: ''
            testVariable: 77
            name: test
            wizardStep: 6
            stepTitle: Test
            order: 0
            wizard: 6
            definition:
              defvalue: ''
              placeholder: 0
    test: 12
    groups: ''
    starterContent: true
    hash: cedb2bba7fe654acaa6f9608cf1a653b3e16b12d
  -
    class_name: Test
    id: 13
    name: runTest
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Run other test.'
    variables:
      -
        class_name: TestVariable
        id: 80
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 13
        parentVariable: 76
      -
        class_name: TestVariable
        id: 81
        name: test
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 13
        parentVariable: 77
      -
        class_name: TestVariable
        id: 82
        name: params
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 13
        parentVariable: 78
      -
        class_name: TestVariable
        id: 83
        name: results
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 13
        parentVariable: 79
    sourceWizard: 6
    sourceWizardTest: 12
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 9e6d68b997f89eb35c8b49a83ee83a958557778c
  -
    class_name: Test
    id: 11
    name: set
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 0
    code: |
      for(.name in .dynamicInputs) {
        c.set(.name, get(.name), posOffset = -1)
      }

    description: 'Promote variables. Use dynamic inputs to declare which variables you want to promote.'
    variables:
      -
        class_name: TestVariable
        id: 75
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 11
        parentVariable: null
    sourceWizard: null
    sourceWizardTest: null
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 220802aed8e79f2f5ea653740139ccdd5bbecd03
  -
    class_name: TestWizard
    id: 2
    name: setInternalTemplates
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 2
        title: 'Internal Templates'
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 2
        params:
          -
            class_name: TestWizardParam
            id: 4
            label: 'Loader template'
            description: 'Select which template to use for the loading page. This page is shown after the user submits a page and before the next page is loaded.'
            hideCondition: ''
            type: 5
            passableThroughUrl: '0'
            value: loader
            testVariable: 14
            name: loaderTemplate
            wizardStep: 2
            stepTitle: 'Internal Templates'
            order: 0
            wizard: 2
            definition:
              placeholder: 0
              defvalue: loader
    test: 3
    groups: ''
    starterContent: true
    hash: 3dd856016796b1c5692da1b6fa7139bbbdd1092b
  -
    class_name: Test
    id: 4
    name: setInternalTemplates
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Sets templates to use for internal Concerto Platform pages. E.g. loading template.'
    variables:
      -
        class_name: TestVariable
        id: 16
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 4
        parentVariable: 13
      -
        class_name: TestVariable
        id: 17
        name: loaderTemplate
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 4
        parentVariable: 14
      -
        class_name: TestVariable
        id: 18
        name: params
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 4
        parentVariable: 15
    sourceWizard: 2
    sourceWizardTest: 3
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: eb8258d1a18c7a76c5e5f6d06786b9cb08f774d0
  -
    class_name: TestWizard
    id: 1
    name: showPage
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 1
        title: Template
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 1
        params:
          -
            class_name: TestWizardParam
            id: 1
            label: 'View Template'
            description: 'Select which template should be shown by this node.&nbsp;This field will be ignored if HTML has been entered above.'
            hideCondition: ''
            type: 5
            passableThroughUrl: '0'
            value: ''
            testVariable: 2
            name: template
            wizardStep: 1
            stepTitle: Template
            order: 1
            wizard: 1
            definition:
              placeholder: 0
              defvalue: ''
          -
            class_name: TestWizardParam
            id: 2
            label: 'Time limit'
            description: 'Specify how long the selected Page or HTML should be shown for, in seconds. 0&nbsp;= page does not expire.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 4
            name: timeLimit
            wizardStep: 1
            stepTitle: Template
            order: 2
            wizard: 1
            definition:
              placeholder: 0
              defvalue: '0'
          -
            class_name: TestWizardParam
            id: 3
            label: HTML
            description: 'Directly input HTML to be shown by this node.'
            hideCondition: ''
            type: 2
            passableThroughUrl: '0'
            value: ''
            testVariable: 6
            name: html
            wizardStep: 1
            stepTitle: Template
            order: 0
            wizard: 1
            definition:
              placeholder: 0
              defvalue: ''
    test: 1
    groups: ''
    starterContent: true
    hash: 214a41cc734942030ca2b3471f9bf1ae5be8ce54
  -
    class_name: Test
    id: 2
    name: showPage
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Shows page to user.'
    variables:
      -
        class_name: TestVariable
        id: 7
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 2
        parentVariable: 1
      -
        class_name: TestVariable
        id: 8
        name: template
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 2
        parentVariable: 2
      -
        class_name: TestVariable
        id: 9
        name: response
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 2
        parentVariable: 3
      -
        class_name: TestVariable
        id: 10
        name: timeLimit
        type: 0
        description: 'Time limit in seconds.'
        passableThroughUrl: '0'
        value: '0'
        test: 2
        parentVariable: 4
      -
        class_name: TestVariable
        id: 11
        name: templateParams
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 2
        parentVariable: 5
      -
        class_name: TestVariable
        id: 12
        name: html
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 2
        parentVariable: 6
    sourceWizard: 1
    sourceWizardTest: 1
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: b3571dce506cfb498df80d87f4c11d716855e622
  -
    class_name: TestWizard
    id: 5
    name: startSession
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 5
        title: Session
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 5
        params:
          -
            class_name: TestWizardParam
            id: 11
            label: Table
            description: 'Specify where to save session information'
            hideCondition: ''
            type: 12
            passableThroughUrl: '0'
            value: '[]'
            testVariable: 64
            name: sessionBankTable
            wizardStep: 5
            stepTitle: Session
            order: 0
            wizard: 5
            definition:
              placeholder: 0
              cols:
                -
                  name: id
                  label: Id
                  tooltip: ''
                -
                  name: internal_id
                  label: 'Internal id'
                  tooltip: ''
                -
                  name: user_id
                  label: 'User id'
                  tooltip: ''
                -
                  name: test_id
                  label: 'Test id'
                  tooltip: ''
                -
                  name: startedTime
                  label: 'Started time'
                  tooltip: ''
                -
                  name: updateTime
                  label: 'Update time'
                  tooltip: ''
                -
                  name: finished
                  label: Finished
                  tooltip: ''
          -
            class_name: TestWizardParam
            id: 12
            label: 'Resumable expiration'
            description: 'Specify the length of time (in seconds) for which the session should be resumable. <strong>0</strong>&nbsp;= session does not expire.'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: '0'
            testVariable: 67
            name: resumableExpiration
            wizardStep: 5
            stepTitle: Session
            order: 2
            wizard: 5
            definition:
              placeholder: 0
              defvalue: '0'
          -
            class_name: TestWizardParam
            id: 13
            label: 'Resumable?'
            description: 'Check box to make the session resumable'
            hideCondition: ''
            type: 4
            passableThroughUrl: '0'
            value: '0'
            testVariable: 66
            name: resumable
            wizardStep: 5
            stepTitle: Session
            order: 1
            wizard: 5
            definition:
              placeholder: 0
              defvalue: '0'
    test: 9
    groups: ''
    starterContent: true
    hash: bf5a012ee16b9aa07173ad07ea8ed487ac949894
  -
    class_name: Test
    id: 10
    name: startSession
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Start session.'
    variables:
      -
        class_name: TestVariable
        id: 68
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 10
        parentVariable: 61
      -
        class_name: TestVariable
        id: 69
        name: extraFields
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 10
        parentVariable: 62
      -
        class_name: TestVariable
        id: 70
        name: user
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 10
        parentVariable: 63
      -
        class_name: TestVariable
        id: 71
        name: sessionBankTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{"table":"sessions","columns":{"id":"id","internal_id":"internal_id","user_id":"user_id","test_id":"test_id","updateTime":"updateTime","finished":"finished","startedTime":"startedTime"}}'
        test: 10
        parentVariable: 64
      -
        class_name: TestVariable
        id: 72
        name: session
        type: 1
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 10
        parentVariable: 65
      -
        class_name: TestVariable
        id: 73
        name: resumable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 10
        parentVariable: 66
      -
        class_name: TestVariable
        id: 74
        name: resumableExpiration
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 10
        parentVariable: 67
    sourceWizard: 5
    sourceWizardTest: 9
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 1a5e57703c48e4d0ea4b732269c205d8003ff2ef
  -
    class_name: TestWizard
    id: 13
    name: translationDictionary
    description: ''
    accessibility: 2
    archived: '0'
    steps:
      -
        class_name: TestWizardStep
        id: 23
        title: Dictionary
        description: ''
        orderNum: 0
        colsNum: 0
        wizard: 13
        params:
          -
            class_name: TestWizardParam
            id: 77
            label: 'Dictionary table'
            description: 'Select which table to use as the dictionary table. If you are using the&nbsp;<strong>Language per table</strong>&nbsp;type, it does not matter which language version table you select here.'
            hideCondition: ''
            type: 12
            passableThroughUrl: '0'
            value: '{"table":"translationDictionary","columns":{"id":"id","entryKey":"entryKey"}}'
            testVariable: 471
            name: dictionaryTable
            wizardStep: 23
            stepTitle: Dictionary
            order: 1
            wizard: 13
            definition:
              placeholder: 0
              cols:
                -
                  name: id
                  label: Id
                  tooltip: ''
                -
                  name: entryKey
                  label: 'Entry key'
                  tooltip: ''
          -
            class_name: TestWizardParam
            id: 78
            label: 'Default language'
            description: 'Select which language should be used as a default when no language is specified'
            hideCondition: ''
            type: 0
            passableThroughUrl: '0'
            value: en
            testVariable: 470
            name: defaultLanguage
            wizardStep: 23
            stepTitle: Dictionary
            order: 2
            wizard: 13
            definition:
              placeholder: 0
              defvalue: en
          -
            class_name: TestWizardParam
            id: 79
            label: Type
            description: |
              <p>Select which type of dictionary table you would like&nbsp;to use:</p>

              <ul>
              	<li><strong>Language per table&nbsp;</strong>- each language will have its own table. Tables names must end with an underscore, followed by the language code, e.g.&nbsp;table&nbsp;<strong>dictionary_en</strong>&nbsp;for English). The name of the column containing the translated data must also&nbsp;be the same as the language code (e.g. column&nbsp;<strong>en</strong>&nbsp;for English)</li>
              	<li><strong>Language per column</strong>&nbsp;-&nbsp; all languages are in a single table, but each language has its own column. The names of columns containing the translated data must be the same as the language code (e.g. column&nbsp;<strong>en&nbsp;</strong>for English, column <strong>fr&nbsp;</strong>for French, etc.)</li>
              </ul>

            hideCondition: ''
            type: 3
            passableThroughUrl: '0'
            value: multiColumn
            testVariable: 472
            name: type
            wizardStep: 23
            stepTitle: Dictionary
            order: 0
            wizard: 13
            definition:
              placeholder: 0
              options:
                -
                  value: multiTable
                  label: 'Language per table'
                  order: 1
                -
                  value: multiColumn
                  label: 'Language per column'
                  order: 0
              defvalue: multiColumn
    test: 48
    groups: ''
    starterContent: true
    hash: 259633d50b0ec5f1d83fedf1d5b7c4d39370ee0a
  -
    class_name: Test
    id: 49
    name: translationDictionary
    accessibility: 2
    archived: '0'
    visibility: 2
    type: 1
    code: null
    description: 'Sets translation dictionary rules.'
    variables:
      -
        class_name: TestVariable
        id: 473
        name: out
        type: 2
        description: ''
        passableThroughUrl: '0'
        value: '0'
        test: 49
        parentVariable: 468
      -
        class_name: TestVariable
        id: 474
        name: language
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: null
        test: 49
        parentVariable: 469
      -
        class_name: TestVariable
        id: 475
        name: defaultLanguage
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: en
        test: 49
        parentVariable: 470
      -
        class_name: TestVariable
        id: 476
        name: dictionaryTable
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: '{"table":"translationDictionary","columns":{"id":"id","entryKey":"entryKey"}}'
        test: 49
        parentVariable: 471
      -
        class_name: TestVariable
        id: 477
        name: type
        type: 0
        description: ''
        passableThroughUrl: '0'
        value: multiColumn
        test: 49
        parentVariable: 472
    sourceWizard: 13
    sourceWizardTest: 48
    nodes: {  }
    nodesConnections: {  }
    tags: _concerto_core
    groups: ''
    starterContent: true
    hash: 93351a71fb2cfe6d0f9cef5d75572604fc229131
